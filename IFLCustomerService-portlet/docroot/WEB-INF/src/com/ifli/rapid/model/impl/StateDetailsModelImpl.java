/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ifli.rapid.model.impl;

import com.ifli.rapid.model.StateDetails;
import com.ifli.rapid.model.StateDetailsModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the StateDetails service. Represents a row in the &quot;state_details&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ifli.rapid.model.StateDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StateDetailsImpl}.
 * </p>
 *
 * @author Satya Kola
 * @see StateDetailsImpl
 * @see com.ifli.rapid.model.StateDetails
 * @see com.ifli.rapid.model.StateDetailsModel
 * @generated
 */
public class StateDetailsModelImpl extends BaseModelImpl<StateDetails>
	implements StateDetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a state details model instance should use the {@link com.ifli.rapid.model.StateDetails} interface instead.
	 */
	public static final String TABLE_NAME = "state_details";
	public static final Object[][] TABLE_COLUMNS = {
			{ "STATE_ID", Types.INTEGER },
			{ "STATE_NAME", Types.VARCHAR },
			{ "STATE_CODE", Types.VARCHAR },
			{ "BRANCH_FLAG", Types.VARCHAR },
			{ "MEDICAL_CENTER_FLAG", Types.VARCHAR },
			{ "DROP_BOX_FLAG", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table state_details (STATE_ID INTEGER not null primary key,STATE_NAME VARCHAR(75) null,STATE_CODE VARCHAR(75) null,BRANCH_FLAG VARCHAR(75) null,MEDICAL_CENTER_FLAG VARCHAR(75) null,DROP_BOX_FLAG VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table state_details";
	public static final String ORDER_BY_JPQL = " ORDER BY stateDetails.STATE_ID ASC";
	public static final String ORDER_BY_SQL = " ORDER BY state_details.STATE_ID ASC";
	public static final String DATA_SOURCE = "servicesDataSource";
	public static final String SESSION_FACTORY = "servicesSessionFactory";
	public static final String TX_MANAGER = "servicesTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ifli.rapid.model.StateDetails"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ifli.rapid.model.StateDetails"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ifli.rapid.model.StateDetails"));

	public StateDetailsModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _STATE_ID;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setSTATE_ID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _STATE_ID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return StateDetails.class;
	}

	@Override
	public String getModelClassName() {
		return StateDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("STATE_ID", getSTATE_ID());
		attributes.put("STATE_NAME", getSTATE_NAME());
		attributes.put("STATE_CODE", getSTATE_CODE());
		attributes.put("BRANCH_FLAG", getBRANCH_FLAG());
		attributes.put("MEDICAL_CENTER_FLAG", getMEDICAL_CENTER_FLAG());
		attributes.put("DROP_BOX_FLAG", getDROP_BOX_FLAG());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer STATE_ID = (Integer)attributes.get("STATE_ID");

		if (STATE_ID != null) {
			setSTATE_ID(STATE_ID);
		}

		String STATE_NAME = (String)attributes.get("STATE_NAME");

		if (STATE_NAME != null) {
			setSTATE_NAME(STATE_NAME);
		}

		String STATE_CODE = (String)attributes.get("STATE_CODE");

		if (STATE_CODE != null) {
			setSTATE_CODE(STATE_CODE);
		}

		String BRANCH_FLAG = (String)attributes.get("BRANCH_FLAG");

		if (BRANCH_FLAG != null) {
			setBRANCH_FLAG(BRANCH_FLAG);
		}

		String MEDICAL_CENTER_FLAG = (String)attributes.get(
				"MEDICAL_CENTER_FLAG");

		if (MEDICAL_CENTER_FLAG != null) {
			setMEDICAL_CENTER_FLAG(MEDICAL_CENTER_FLAG);
		}

		String DROP_BOX_FLAG = (String)attributes.get("DROP_BOX_FLAG");

		if (DROP_BOX_FLAG != null) {
			setDROP_BOX_FLAG(DROP_BOX_FLAG);
		}
	}

	@Override
	public int getSTATE_ID() {
		return _STATE_ID;
	}

	@Override
	public void setSTATE_ID(int STATE_ID) {
		_STATE_ID = STATE_ID;
	}

	@Override
	public String getSTATE_NAME() {
		if (_STATE_NAME == null) {
			return StringPool.BLANK;
		}
		else {
			return _STATE_NAME;
		}
	}

	@Override
	public void setSTATE_NAME(String STATE_NAME) {
		_STATE_NAME = STATE_NAME;
	}

	@Override
	public String getSTATE_CODE() {
		if (_STATE_CODE == null) {
			return StringPool.BLANK;
		}
		else {
			return _STATE_CODE;
		}
	}

	@Override
	public void setSTATE_CODE(String STATE_CODE) {
		_STATE_CODE = STATE_CODE;
	}

	@Override
	public String getBRANCH_FLAG() {
		if (_BRANCH_FLAG == null) {
			return StringPool.BLANK;
		}
		else {
			return _BRANCH_FLAG;
		}
	}

	@Override
	public void setBRANCH_FLAG(String BRANCH_FLAG) {
		_BRANCH_FLAG = BRANCH_FLAG;
	}

	@Override
	public String getMEDICAL_CENTER_FLAG() {
		if (_MEDICAL_CENTER_FLAG == null) {
			return StringPool.BLANK;
		}
		else {
			return _MEDICAL_CENTER_FLAG;
		}
	}

	@Override
	public void setMEDICAL_CENTER_FLAG(String MEDICAL_CENTER_FLAG) {
		_MEDICAL_CENTER_FLAG = MEDICAL_CENTER_FLAG;
	}

	@Override
	public String getDROP_BOX_FLAG() {
		if (_DROP_BOX_FLAG == null) {
			return StringPool.BLANK;
		}
		else {
			return _DROP_BOX_FLAG;
		}
	}

	@Override
	public void setDROP_BOX_FLAG(String DROP_BOX_FLAG) {
		_DROP_BOX_FLAG = DROP_BOX_FLAG;
	}

	@Override
	public StateDetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (StateDetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		StateDetailsImpl stateDetailsImpl = new StateDetailsImpl();

		stateDetailsImpl.setSTATE_ID(getSTATE_ID());
		stateDetailsImpl.setSTATE_NAME(getSTATE_NAME());
		stateDetailsImpl.setSTATE_CODE(getSTATE_CODE());
		stateDetailsImpl.setBRANCH_FLAG(getBRANCH_FLAG());
		stateDetailsImpl.setMEDICAL_CENTER_FLAG(getMEDICAL_CENTER_FLAG());
		stateDetailsImpl.setDROP_BOX_FLAG(getDROP_BOX_FLAG());

		stateDetailsImpl.resetOriginalValues();

		return stateDetailsImpl;
	}

	@Override
	public int compareTo(StateDetails stateDetails) {
		int primaryKey = stateDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof StateDetails)) {
			return false;
		}

		StateDetails stateDetails = (StateDetails)obj;

		int primaryKey = stateDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<StateDetails> toCacheModel() {
		StateDetailsCacheModel stateDetailsCacheModel = new StateDetailsCacheModel();

		stateDetailsCacheModel.STATE_ID = getSTATE_ID();

		stateDetailsCacheModel.STATE_NAME = getSTATE_NAME();

		String STATE_NAME = stateDetailsCacheModel.STATE_NAME;

		if ((STATE_NAME != null) && (STATE_NAME.length() == 0)) {
			stateDetailsCacheModel.STATE_NAME = null;
		}

		stateDetailsCacheModel.STATE_CODE = getSTATE_CODE();

		String STATE_CODE = stateDetailsCacheModel.STATE_CODE;

		if ((STATE_CODE != null) && (STATE_CODE.length() == 0)) {
			stateDetailsCacheModel.STATE_CODE = null;
		}

		stateDetailsCacheModel.BRANCH_FLAG = getBRANCH_FLAG();

		String BRANCH_FLAG = stateDetailsCacheModel.BRANCH_FLAG;

		if ((BRANCH_FLAG != null) && (BRANCH_FLAG.length() == 0)) {
			stateDetailsCacheModel.BRANCH_FLAG = null;
		}

		stateDetailsCacheModel.MEDICAL_CENTER_FLAG = getMEDICAL_CENTER_FLAG();

		String MEDICAL_CENTER_FLAG = stateDetailsCacheModel.MEDICAL_CENTER_FLAG;

		if ((MEDICAL_CENTER_FLAG != null) &&
				(MEDICAL_CENTER_FLAG.length() == 0)) {
			stateDetailsCacheModel.MEDICAL_CENTER_FLAG = null;
		}

		stateDetailsCacheModel.DROP_BOX_FLAG = getDROP_BOX_FLAG();

		String DROP_BOX_FLAG = stateDetailsCacheModel.DROP_BOX_FLAG;

		if ((DROP_BOX_FLAG != null) && (DROP_BOX_FLAG.length() == 0)) {
			stateDetailsCacheModel.DROP_BOX_FLAG = null;
		}

		return stateDetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{STATE_ID=");
		sb.append(getSTATE_ID());
		sb.append(", STATE_NAME=");
		sb.append(getSTATE_NAME());
		sb.append(", STATE_CODE=");
		sb.append(getSTATE_CODE());
		sb.append(", BRANCH_FLAG=");
		sb.append(getBRANCH_FLAG());
		sb.append(", MEDICAL_CENTER_FLAG=");
		sb.append(getMEDICAL_CENTER_FLAG());
		sb.append(", DROP_BOX_FLAG=");
		sb.append(getDROP_BOX_FLAG());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.ifli.rapid.model.StateDetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>STATE_ID</column-name><column-value><![CDATA[");
		sb.append(getSTATE_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>STATE_NAME</column-name><column-value><![CDATA[");
		sb.append(getSTATE_NAME());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>STATE_CODE</column-name><column-value><![CDATA[");
		sb.append(getSTATE_CODE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>BRANCH_FLAG</column-name><column-value><![CDATA[");
		sb.append(getBRANCH_FLAG());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MEDICAL_CENTER_FLAG</column-name><column-value><![CDATA[");
		sb.append(getMEDICAL_CENTER_FLAG());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DROP_BOX_FLAG</column-name><column-value><![CDATA[");
		sb.append(getDROP_BOX_FLAG());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = StateDetails.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			StateDetails.class
		};
	private int _STATE_ID;
	private String _STATE_NAME;
	private String _STATE_CODE;
	private String _BRANCH_FLAG;
	private String _MEDICAL_CENTER_FLAG;
	private String _DROP_BOX_FLAG;
	private StateDetails _escapedModel;
}