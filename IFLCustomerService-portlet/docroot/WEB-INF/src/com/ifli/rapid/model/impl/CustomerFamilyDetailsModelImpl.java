/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ifli.rapid.model.impl;

import com.ifli.rapid.model.CustomerFamilyDetails;
import com.ifli.rapid.model.CustomerFamilyDetailsModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CustomerFamilyDetails service. Represents a row in the &quot;customer_family&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ifli.rapid.model.CustomerFamilyDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CustomerFamilyDetailsImpl}.
 * </p>
 *
 * @author Satya Kola
 * @see CustomerFamilyDetailsImpl
 * @see com.ifli.rapid.model.CustomerFamilyDetails
 * @see com.ifli.rapid.model.CustomerFamilyDetailsModel
 * @generated
 */
public class CustomerFamilyDetailsModelImpl extends BaseModelImpl<CustomerFamilyDetails>
	implements CustomerFamilyDetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a customer family details model instance should use the {@link com.ifli.rapid.model.CustomerFamilyDetails} interface instead.
	 */
	public static final String TABLE_NAME = "customer_family";
	public static final Object[][] TABLE_COLUMNS = {
			{ "CUSTOMER_FAMILY_ID", Types.INTEGER },
			{ "PERSON_NAME", Types.VARCHAR },
			{ "RELATION", Types.VARCHAR },
			{ "DEPENDENT", Types.VARCHAR },
			{ "AGE", Types.INTEGER },
			{ "CUSTOMER_ID", Types.INTEGER },
			{ "ADDED_BY", Types.VARCHAR },
			{ "ADDED_DATE", Types.TIMESTAMP },
			{ "UPDATED_BY", Types.VARCHAR },
			{ "UPDATED_DATE", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table customer_family (CUSTOMER_FAMILY_ID INTEGER not null primary key,PERSON_NAME VARCHAR(75) null,RELATION VARCHAR(75) null,DEPENDENT VARCHAR(75) null,AGE INTEGER,CUSTOMER_ID INTEGER,ADDED_BY VARCHAR(75) null,ADDED_DATE DATE null,UPDATED_BY VARCHAR(75) null,UPDATED_DATE DATE null)";
	public static final String TABLE_SQL_DROP = "drop table customer_family";
	public static final String ORDER_BY_JPQL = " ORDER BY customerFamilyDetails.CUSTOMER_FAMILY_ID ASC";
	public static final String ORDER_BY_SQL = " ORDER BY customer_family.CUSTOMER_FAMILY_ID ASC";
	public static final String DATA_SOURCE = "servicesDataSource";
	public static final String SESSION_FACTORY = "servicesSessionFactory";
	public static final String TX_MANAGER = "servicesTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ifli.rapid.model.CustomerFamilyDetails"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ifli.rapid.model.CustomerFamilyDetails"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ifli.rapid.model.CustomerFamilyDetails"));

	public CustomerFamilyDetailsModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _CUSTOMER_FAMILY_ID;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setCUSTOMER_FAMILY_ID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _CUSTOMER_FAMILY_ID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CustomerFamilyDetails.class;
	}

	@Override
	public String getModelClassName() {
		return CustomerFamilyDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("CUSTOMER_FAMILY_ID", getCUSTOMER_FAMILY_ID());
		attributes.put("PERSON_NAME", getPERSON_NAME());
		attributes.put("RELATION", getRELATION());
		attributes.put("DEPENDENT", getDEPENDENT());
		attributes.put("AGE", getAGE());
		attributes.put("CUSTOMER_ID", getCUSTOMER_ID());
		attributes.put("ADDED_BY", getADDED_BY());
		attributes.put("ADDED_DATE", getADDED_DATE());
		attributes.put("UPDATED_BY", getUPDATED_BY());
		attributes.put("UPDATED_DATE", getUPDATED_DATE());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer CUSTOMER_FAMILY_ID = (Integer)attributes.get(
				"CUSTOMER_FAMILY_ID");

		if (CUSTOMER_FAMILY_ID != null) {
			setCUSTOMER_FAMILY_ID(CUSTOMER_FAMILY_ID);
		}

		String PERSON_NAME = (String)attributes.get("PERSON_NAME");

		if (PERSON_NAME != null) {
			setPERSON_NAME(PERSON_NAME);
		}

		String RELATION = (String)attributes.get("RELATION");

		if (RELATION != null) {
			setRELATION(RELATION);
		}

		String DEPENDENT = (String)attributes.get("DEPENDENT");

		if (DEPENDENT != null) {
			setDEPENDENT(DEPENDENT);
		}

		Integer AGE = (Integer)attributes.get("AGE");

		if (AGE != null) {
			setAGE(AGE);
		}

		Integer CUSTOMER_ID = (Integer)attributes.get("CUSTOMER_ID");

		if (CUSTOMER_ID != null) {
			setCUSTOMER_ID(CUSTOMER_ID);
		}

		String ADDED_BY = (String)attributes.get("ADDED_BY");

		if (ADDED_BY != null) {
			setADDED_BY(ADDED_BY);
		}

		Date ADDED_DATE = (Date)attributes.get("ADDED_DATE");

		if (ADDED_DATE != null) {
			setADDED_DATE(ADDED_DATE);
		}

		String UPDATED_BY = (String)attributes.get("UPDATED_BY");

		if (UPDATED_BY != null) {
			setUPDATED_BY(UPDATED_BY);
		}

		Date UPDATED_DATE = (Date)attributes.get("UPDATED_DATE");

		if (UPDATED_DATE != null) {
			setUPDATED_DATE(UPDATED_DATE);
		}
	}

	@Override
	public int getCUSTOMER_FAMILY_ID() {
		return _CUSTOMER_FAMILY_ID;
	}

	@Override
	public void setCUSTOMER_FAMILY_ID(int CUSTOMER_FAMILY_ID) {
		_CUSTOMER_FAMILY_ID = CUSTOMER_FAMILY_ID;
	}

	@Override
	public String getPERSON_NAME() {
		if (_PERSON_NAME == null) {
			return StringPool.BLANK;
		}
		else {
			return _PERSON_NAME;
		}
	}

	@Override
	public void setPERSON_NAME(String PERSON_NAME) {
		_PERSON_NAME = PERSON_NAME;
	}

	@Override
	public String getRELATION() {
		if (_RELATION == null) {
			return StringPool.BLANK;
		}
		else {
			return _RELATION;
		}
	}

	@Override
	public void setRELATION(String RELATION) {
		_RELATION = RELATION;
	}

	@Override
	public String getDEPENDENT() {
		if (_DEPENDENT == null) {
			return StringPool.BLANK;
		}
		else {
			return _DEPENDENT;
		}
	}

	@Override
	public void setDEPENDENT(String DEPENDENT) {
		_DEPENDENT = DEPENDENT;
	}

	@Override
	public int getAGE() {
		return _AGE;
	}

	@Override
	public void setAGE(int AGE) {
		_AGE = AGE;
	}

	@Override
	public int getCUSTOMER_ID() {
		return _CUSTOMER_ID;
	}

	@Override
	public void setCUSTOMER_ID(int CUSTOMER_ID) {
		_CUSTOMER_ID = CUSTOMER_ID;
	}

	@Override
	public String getADDED_BY() {
		if (_ADDED_BY == null) {
			return StringPool.BLANK;
		}
		else {
			return _ADDED_BY;
		}
	}

	@Override
	public void setADDED_BY(String ADDED_BY) {
		_ADDED_BY = ADDED_BY;
	}

	@Override
	public Date getADDED_DATE() {
		return _ADDED_DATE;
	}

	@Override
	public void setADDED_DATE(Date ADDED_DATE) {
		_ADDED_DATE = ADDED_DATE;
	}

	@Override
	public String getUPDATED_BY() {
		if (_UPDATED_BY == null) {
			return StringPool.BLANK;
		}
		else {
			return _UPDATED_BY;
		}
	}

	@Override
	public void setUPDATED_BY(String UPDATED_BY) {
		_UPDATED_BY = UPDATED_BY;
	}

	@Override
	public Date getUPDATED_DATE() {
		return _UPDATED_DATE;
	}

	@Override
	public void setUPDATED_DATE(Date UPDATED_DATE) {
		_UPDATED_DATE = UPDATED_DATE;
	}

	@Override
	public CustomerFamilyDetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CustomerFamilyDetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CustomerFamilyDetailsImpl customerFamilyDetailsImpl = new CustomerFamilyDetailsImpl();

		customerFamilyDetailsImpl.setCUSTOMER_FAMILY_ID(getCUSTOMER_FAMILY_ID());
		customerFamilyDetailsImpl.setPERSON_NAME(getPERSON_NAME());
		customerFamilyDetailsImpl.setRELATION(getRELATION());
		customerFamilyDetailsImpl.setDEPENDENT(getDEPENDENT());
		customerFamilyDetailsImpl.setAGE(getAGE());
		customerFamilyDetailsImpl.setCUSTOMER_ID(getCUSTOMER_ID());
		customerFamilyDetailsImpl.setADDED_BY(getADDED_BY());
		customerFamilyDetailsImpl.setADDED_DATE(getADDED_DATE());
		customerFamilyDetailsImpl.setUPDATED_BY(getUPDATED_BY());
		customerFamilyDetailsImpl.setUPDATED_DATE(getUPDATED_DATE());

		customerFamilyDetailsImpl.resetOriginalValues();

		return customerFamilyDetailsImpl;
	}

	@Override
	public int compareTo(CustomerFamilyDetails customerFamilyDetails) {
		int primaryKey = customerFamilyDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CustomerFamilyDetails)) {
			return false;
		}

		CustomerFamilyDetails customerFamilyDetails = (CustomerFamilyDetails)obj;

		int primaryKey = customerFamilyDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<CustomerFamilyDetails> toCacheModel() {
		CustomerFamilyDetailsCacheModel customerFamilyDetailsCacheModel = new CustomerFamilyDetailsCacheModel();

		customerFamilyDetailsCacheModel.CUSTOMER_FAMILY_ID = getCUSTOMER_FAMILY_ID();

		customerFamilyDetailsCacheModel.PERSON_NAME = getPERSON_NAME();

		String PERSON_NAME = customerFamilyDetailsCacheModel.PERSON_NAME;

		if ((PERSON_NAME != null) && (PERSON_NAME.length() == 0)) {
			customerFamilyDetailsCacheModel.PERSON_NAME = null;
		}

		customerFamilyDetailsCacheModel.RELATION = getRELATION();

		String RELATION = customerFamilyDetailsCacheModel.RELATION;

		if ((RELATION != null) && (RELATION.length() == 0)) {
			customerFamilyDetailsCacheModel.RELATION = null;
		}

		customerFamilyDetailsCacheModel.DEPENDENT = getDEPENDENT();

		String DEPENDENT = customerFamilyDetailsCacheModel.DEPENDENT;

		if ((DEPENDENT != null) && (DEPENDENT.length() == 0)) {
			customerFamilyDetailsCacheModel.DEPENDENT = null;
		}

		customerFamilyDetailsCacheModel.AGE = getAGE();

		customerFamilyDetailsCacheModel.CUSTOMER_ID = getCUSTOMER_ID();

		customerFamilyDetailsCacheModel.ADDED_BY = getADDED_BY();

		String ADDED_BY = customerFamilyDetailsCacheModel.ADDED_BY;

		if ((ADDED_BY != null) && (ADDED_BY.length() == 0)) {
			customerFamilyDetailsCacheModel.ADDED_BY = null;
		}

		Date ADDED_DATE = getADDED_DATE();

		if (ADDED_DATE != null) {
			customerFamilyDetailsCacheModel.ADDED_DATE = ADDED_DATE.getTime();
		}
		else {
			customerFamilyDetailsCacheModel.ADDED_DATE = Long.MIN_VALUE;
		}

		customerFamilyDetailsCacheModel.UPDATED_BY = getUPDATED_BY();

		String UPDATED_BY = customerFamilyDetailsCacheModel.UPDATED_BY;

		if ((UPDATED_BY != null) && (UPDATED_BY.length() == 0)) {
			customerFamilyDetailsCacheModel.UPDATED_BY = null;
		}

		Date UPDATED_DATE = getUPDATED_DATE();

		if (UPDATED_DATE != null) {
			customerFamilyDetailsCacheModel.UPDATED_DATE = UPDATED_DATE.getTime();
		}
		else {
			customerFamilyDetailsCacheModel.UPDATED_DATE = Long.MIN_VALUE;
		}

		return customerFamilyDetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{CUSTOMER_FAMILY_ID=");
		sb.append(getCUSTOMER_FAMILY_ID());
		sb.append(", PERSON_NAME=");
		sb.append(getPERSON_NAME());
		sb.append(", RELATION=");
		sb.append(getRELATION());
		sb.append(", DEPENDENT=");
		sb.append(getDEPENDENT());
		sb.append(", AGE=");
		sb.append(getAGE());
		sb.append(", CUSTOMER_ID=");
		sb.append(getCUSTOMER_ID());
		sb.append(", ADDED_BY=");
		sb.append(getADDED_BY());
		sb.append(", ADDED_DATE=");
		sb.append(getADDED_DATE());
		sb.append(", UPDATED_BY=");
		sb.append(getUPDATED_BY());
		sb.append(", UPDATED_DATE=");
		sb.append(getUPDATED_DATE());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.ifli.rapid.model.CustomerFamilyDetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>CUSTOMER_FAMILY_ID</column-name><column-value><![CDATA[");
		sb.append(getCUSTOMER_FAMILY_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PERSON_NAME</column-name><column-value><![CDATA[");
		sb.append(getPERSON_NAME());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>RELATION</column-name><column-value><![CDATA[");
		sb.append(getRELATION());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DEPENDENT</column-name><column-value><![CDATA[");
		sb.append(getDEPENDENT());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>AGE</column-name><column-value><![CDATA[");
		sb.append(getAGE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CUSTOMER_ID</column-name><column-value><![CDATA[");
		sb.append(getCUSTOMER_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ADDED_BY</column-name><column-value><![CDATA[");
		sb.append(getADDED_BY());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ADDED_DATE</column-name><column-value><![CDATA[");
		sb.append(getADDED_DATE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>UPDATED_BY</column-name><column-value><![CDATA[");
		sb.append(getUPDATED_BY());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>UPDATED_DATE</column-name><column-value><![CDATA[");
		sb.append(getUPDATED_DATE());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CustomerFamilyDetails.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CustomerFamilyDetails.class
		};
	private int _CUSTOMER_FAMILY_ID;
	private String _PERSON_NAME;
	private String _RELATION;
	private String _DEPENDENT;
	private int _AGE;
	private int _CUSTOMER_ID;
	private String _ADDED_BY;
	private Date _ADDED_DATE;
	private String _UPDATED_BY;
	private Date _UPDATED_DATE;
	private CustomerFamilyDetails _escapedModel;
}