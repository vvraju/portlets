/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ifli.rapid.model.impl;

import com.ifli.rapid.model.Customer;
import com.ifli.rapid.model.CustomerModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Customer service. Represents a row in the &quot;customer&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ifli.rapid.model.CustomerModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CustomerImpl}.
 * </p>
 *
 * @author Satya Kola
 * @see CustomerImpl
 * @see com.ifli.rapid.model.Customer
 * @see com.ifli.rapid.model.CustomerModel
 * @generated
 */
public class CustomerModelImpl extends BaseModelImpl<Customer>
	implements CustomerModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a customer model instance should use the {@link com.ifli.rapid.model.Customer} interface instead.
	 */
	public static final String TABLE_NAME = "customer";
	public static final Object[][] TABLE_COLUMNS = {
			{ "CUSTOMER_ID", Types.INTEGER },
			{ "CUSTOMER_SALUTATION", Types.VARCHAR },
			{ "CUSTOMER_FIRST_NAME", Types.VARCHAR },
			{ "CUSTOMER_LAST_NAME", Types.VARCHAR },
			{ "CUSTOMER_MIDDLE_NAME", Types.VARCHAR },
			{ "CUSTOMER_DATE_OF_BIRTH", Types.VARCHAR },
			{ "CUSTOMER_EMAIL_ADDR", Types.VARCHAR },
			{ "OFFICE_NAME", Types.VARCHAR },
			{ "DESIGNATION", Types.VARCHAR },
			{ "DEPARTMENT", Types.VARCHAR },
			{ "PRIMARY_ADDRESS_LINE_1", Types.VARCHAR },
			{ "PRIMARY_ADDRESS_LINE_2", Types.VARCHAR },
			{ "PRIMARY_ADDRESS_LINE_3", Types.VARCHAR },
			{ "PRIMARY_ADDRESS_CITY", Types.VARCHAR },
			{ "PRIMARY_ADDRESS_STATE", Types.VARCHAR },
			{ "PRIMARY_ADDRESS_PINCODE", Types.VARCHAR },
			{ "PHONE_NUMBER_1", Types.VARCHAR },
			{ "PHONE_NUMBER_2", Types.VARCHAR },
			{ "PHONE_NUMBER_3", Types.VARCHAR },
			{ "LOGIN_NAME", Types.VARCHAR },
			{ "GENDER", Types.VARCHAR },
			{ "MARITAL_STATUS", Types.VARCHAR },
			{ "COUNTRY", Types.VARCHAR },
			{ "PRIMARY_ADDRESS_STATE_ID", Types.INTEGER },
			{ "PRIMARY_ADDRESS_CITY_ID", Types.INTEGER },
			{ "ADDED_BY", Types.VARCHAR },
			{ "ADDED_DATE", Types.TIMESTAMP },
			{ "UPDATED_BY", Types.VARCHAR },
			{ "UPDATED_DATE", Types.TIMESTAMP },
			{ "PANCARD", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table customer (CUSTOMER_ID INTEGER not null primary key,CUSTOMER_SALUTATION VARCHAR(75) null,CUSTOMER_FIRST_NAME VARCHAR(75) null,CUSTOMER_LAST_NAME VARCHAR(75) null,CUSTOMER_MIDDLE_NAME VARCHAR(75) null,CUSTOMER_DATE_OF_BIRTH VARCHAR(75) null,CUSTOMER_EMAIL_ADDR VARCHAR(75) null,OFFICE_NAME VARCHAR(75) null,DESIGNATION VARCHAR(75) null,DEPARTMENT VARCHAR(75) null,PRIMARY_ADDRESS_LINE_1 VARCHAR(75) null,PRIMARY_ADDRESS_LINE_2 VARCHAR(75) null,PRIMARY_ADDRESS_LINE_3 VARCHAR(75) null,PRIMARY_ADDRESS_CITY VARCHAR(75) null,PRIMARY_ADDRESS_STATE VARCHAR(75) null,PRIMARY_ADDRESS_PINCODE VARCHAR(75) null,PHONE_NUMBER_1 VARCHAR(75) null,PHONE_NUMBER_2 VARCHAR(75) null,PHONE_NUMBER_3 VARCHAR(75) null,LOGIN_NAME VARCHAR(75) null,GENDER VARCHAR(75) null,MARITAL_STATUS VARCHAR(75) null,COUNTRY VARCHAR(75) null,PRIMARY_ADDRESS_STATE_ID INTEGER,PRIMARY_ADDRESS_CITY_ID INTEGER,ADDED_BY VARCHAR(75) null,ADDED_DATE DATE null,UPDATED_BY VARCHAR(75) null,UPDATED_DATE DATE null,PANCARD VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table customer";
	public static final String ORDER_BY_JPQL = " ORDER BY customer.CUSTOMER_ID ASC";
	public static final String ORDER_BY_SQL = " ORDER BY customer.CUSTOMER_ID ASC";
	public static final String DATA_SOURCE = "servicesDataSource";
	public static final String SESSION_FACTORY = "servicesSessionFactory";
	public static final String TX_MANAGER = "servicesTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ifli.rapid.model.Customer"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ifli.rapid.model.Customer"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ifli.rapid.model.Customer"));

	public CustomerModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _CUSTOMER_ID;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setCUSTOMER_ID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _CUSTOMER_ID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Customer.class;
	}

	@Override
	public String getModelClassName() {
		return Customer.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("CUSTOMER_ID", getCUSTOMER_ID());
		attributes.put("CUSTOMER_SALUTATION", getCUSTOMER_SALUTATION());
		attributes.put("CUSTOMER_FIRST_NAME", getCUSTOMER_FIRST_NAME());
		attributes.put("CUSTOMER_LAST_NAME", getCUSTOMER_LAST_NAME());
		attributes.put("CUSTOMER_MIDDLE_NAME", getCUSTOMER_MIDDLE_NAME());
		attributes.put("CUSTOMER_DATE_OF_BIRTH", getCUSTOMER_DATE_OF_BIRTH());
		attributes.put("CUSTOMER_EMAIL_ADDR", getCUSTOMER_EMAIL_ADDR());
		attributes.put("OFFICE_NAME", getOFFICE_NAME());
		attributes.put("DESIGNATION", getDESIGNATION());
		attributes.put("DEPARTMENT", getDEPARTMENT());
		attributes.put("PRIMARY_ADDRESS_LINE_1", getPRIMARY_ADDRESS_LINE_1());
		attributes.put("PRIMARY_ADDRESS_LINE_2", getPRIMARY_ADDRESS_LINE_2());
		attributes.put("PRIMARY_ADDRESS_LINE_3", getPRIMARY_ADDRESS_LINE_3());
		attributes.put("PRIMARY_ADDRESS_CITY", getPRIMARY_ADDRESS_CITY());
		attributes.put("PRIMARY_ADDRESS_STATE", getPRIMARY_ADDRESS_STATE());
		attributes.put("PRIMARY_ADDRESS_PINCODE", getPRIMARY_ADDRESS_PINCODE());
		attributes.put("PHONE_NUMBER_1", getPHONE_NUMBER_1());
		attributes.put("PHONE_NUMBER_2", getPHONE_NUMBER_2());
		attributes.put("PHONE_NUMBER_3", getPHONE_NUMBER_3());
		attributes.put("LOGIN_NAME", getLOGIN_NAME());
		attributes.put("GENDER", getGENDER());
		attributes.put("MARITAL_STATUS", getMARITAL_STATUS());
		attributes.put("COUNTRY", getCOUNTRY());
		attributes.put("PRIMARY_ADDRESS_STATE_ID", getPRIMARY_ADDRESS_STATE_ID());
		attributes.put("PRIMARY_ADDRESS_CITY_ID", getPRIMARY_ADDRESS_CITY_ID());
		attributes.put("ADDED_BY", getADDED_BY());
		attributes.put("ADDED_DATE", getADDED_DATE());
		attributes.put("UPDATED_BY", getUPDATED_BY());
		attributes.put("UPDATED_DATE", getUPDATED_DATE());
		attributes.put("PANCARD", getPANCARD());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer CUSTOMER_ID = (Integer)attributes.get("CUSTOMER_ID");

		if (CUSTOMER_ID != null) {
			setCUSTOMER_ID(CUSTOMER_ID);
		}

		String CUSTOMER_SALUTATION = (String)attributes.get(
				"CUSTOMER_SALUTATION");

		if (CUSTOMER_SALUTATION != null) {
			setCUSTOMER_SALUTATION(CUSTOMER_SALUTATION);
		}

		String CUSTOMER_FIRST_NAME = (String)attributes.get(
				"CUSTOMER_FIRST_NAME");

		if (CUSTOMER_FIRST_NAME != null) {
			setCUSTOMER_FIRST_NAME(CUSTOMER_FIRST_NAME);
		}

		String CUSTOMER_LAST_NAME = (String)attributes.get("CUSTOMER_LAST_NAME");

		if (CUSTOMER_LAST_NAME != null) {
			setCUSTOMER_LAST_NAME(CUSTOMER_LAST_NAME);
		}

		String CUSTOMER_MIDDLE_NAME = (String)attributes.get(
				"CUSTOMER_MIDDLE_NAME");

		if (CUSTOMER_MIDDLE_NAME != null) {
			setCUSTOMER_MIDDLE_NAME(CUSTOMER_MIDDLE_NAME);
		}

		String CUSTOMER_DATE_OF_BIRTH = (String)attributes.get(
				"CUSTOMER_DATE_OF_BIRTH");

		if (CUSTOMER_DATE_OF_BIRTH != null) {
			setCUSTOMER_DATE_OF_BIRTH(CUSTOMER_DATE_OF_BIRTH);
		}

		String CUSTOMER_EMAIL_ADDR = (String)attributes.get(
				"CUSTOMER_EMAIL_ADDR");

		if (CUSTOMER_EMAIL_ADDR != null) {
			setCUSTOMER_EMAIL_ADDR(CUSTOMER_EMAIL_ADDR);
		}

		String OFFICE_NAME = (String)attributes.get("OFFICE_NAME");

		if (OFFICE_NAME != null) {
			setOFFICE_NAME(OFFICE_NAME);
		}

		String DESIGNATION = (String)attributes.get("DESIGNATION");

		if (DESIGNATION != null) {
			setDESIGNATION(DESIGNATION);
		}

		String DEPARTMENT = (String)attributes.get("DEPARTMENT");

		if (DEPARTMENT != null) {
			setDEPARTMENT(DEPARTMENT);
		}

		String PRIMARY_ADDRESS_LINE_1 = (String)attributes.get(
				"PRIMARY_ADDRESS_LINE_1");

		if (PRIMARY_ADDRESS_LINE_1 != null) {
			setPRIMARY_ADDRESS_LINE_1(PRIMARY_ADDRESS_LINE_1);
		}

		String PRIMARY_ADDRESS_LINE_2 = (String)attributes.get(
				"PRIMARY_ADDRESS_LINE_2");

		if (PRIMARY_ADDRESS_LINE_2 != null) {
			setPRIMARY_ADDRESS_LINE_2(PRIMARY_ADDRESS_LINE_2);
		}

		String PRIMARY_ADDRESS_LINE_3 = (String)attributes.get(
				"PRIMARY_ADDRESS_LINE_3");

		if (PRIMARY_ADDRESS_LINE_3 != null) {
			setPRIMARY_ADDRESS_LINE_3(PRIMARY_ADDRESS_LINE_3);
		}

		String PRIMARY_ADDRESS_CITY = (String)attributes.get(
				"PRIMARY_ADDRESS_CITY");

		if (PRIMARY_ADDRESS_CITY != null) {
			setPRIMARY_ADDRESS_CITY(PRIMARY_ADDRESS_CITY);
		}

		String PRIMARY_ADDRESS_STATE = (String)attributes.get(
				"PRIMARY_ADDRESS_STATE");

		if (PRIMARY_ADDRESS_STATE != null) {
			setPRIMARY_ADDRESS_STATE(PRIMARY_ADDRESS_STATE);
		}

		String PRIMARY_ADDRESS_PINCODE = (String)attributes.get(
				"PRIMARY_ADDRESS_PINCODE");

		if (PRIMARY_ADDRESS_PINCODE != null) {
			setPRIMARY_ADDRESS_PINCODE(PRIMARY_ADDRESS_PINCODE);
		}

		String PHONE_NUMBER_1 = (String)attributes.get("PHONE_NUMBER_1");

		if (PHONE_NUMBER_1 != null) {
			setPHONE_NUMBER_1(PHONE_NUMBER_1);
		}

		String PHONE_NUMBER_2 = (String)attributes.get("PHONE_NUMBER_2");

		if (PHONE_NUMBER_2 != null) {
			setPHONE_NUMBER_2(PHONE_NUMBER_2);
		}

		String PHONE_NUMBER_3 = (String)attributes.get("PHONE_NUMBER_3");

		if (PHONE_NUMBER_3 != null) {
			setPHONE_NUMBER_3(PHONE_NUMBER_3);
		}

		String LOGIN_NAME = (String)attributes.get("LOGIN_NAME");

		if (LOGIN_NAME != null) {
			setLOGIN_NAME(LOGIN_NAME);
		}

		String GENDER = (String)attributes.get("GENDER");

		if (GENDER != null) {
			setGENDER(GENDER);
		}

		String MARITAL_STATUS = (String)attributes.get("MARITAL_STATUS");

		if (MARITAL_STATUS != null) {
			setMARITAL_STATUS(MARITAL_STATUS);
		}

		String COUNTRY = (String)attributes.get("COUNTRY");

		if (COUNTRY != null) {
			setCOUNTRY(COUNTRY);
		}

		Integer PRIMARY_ADDRESS_STATE_ID = (Integer)attributes.get(
				"PRIMARY_ADDRESS_STATE_ID");

		if (PRIMARY_ADDRESS_STATE_ID != null) {
			setPRIMARY_ADDRESS_STATE_ID(PRIMARY_ADDRESS_STATE_ID);
		}

		Integer PRIMARY_ADDRESS_CITY_ID = (Integer)attributes.get(
				"PRIMARY_ADDRESS_CITY_ID");

		if (PRIMARY_ADDRESS_CITY_ID != null) {
			setPRIMARY_ADDRESS_CITY_ID(PRIMARY_ADDRESS_CITY_ID);
		}

		String ADDED_BY = (String)attributes.get("ADDED_BY");

		if (ADDED_BY != null) {
			setADDED_BY(ADDED_BY);
		}

		Date ADDED_DATE = (Date)attributes.get("ADDED_DATE");

		if (ADDED_DATE != null) {
			setADDED_DATE(ADDED_DATE);
		}

		String UPDATED_BY = (String)attributes.get("UPDATED_BY");

		if (UPDATED_BY != null) {
			setUPDATED_BY(UPDATED_BY);
		}

		Date UPDATED_DATE = (Date)attributes.get("UPDATED_DATE");

		if (UPDATED_DATE != null) {
			setUPDATED_DATE(UPDATED_DATE);
		}

		String PANCARD = (String)attributes.get("PANCARD");

		if (PANCARD != null) {
			setPANCARD(PANCARD);
		}
	}

	@Override
	public int getCUSTOMER_ID() {
		return _CUSTOMER_ID;
	}

	@Override
	public void setCUSTOMER_ID(int CUSTOMER_ID) {
		_CUSTOMER_ID = CUSTOMER_ID;
	}

	@Override
	public String getCUSTOMER_SALUTATION() {
		if (_CUSTOMER_SALUTATION == null) {
			return StringPool.BLANK;
		}
		else {
			return _CUSTOMER_SALUTATION;
		}
	}

	@Override
	public void setCUSTOMER_SALUTATION(String CUSTOMER_SALUTATION) {
		_CUSTOMER_SALUTATION = CUSTOMER_SALUTATION;
	}

	@Override
	public String getCUSTOMER_FIRST_NAME() {
		if (_CUSTOMER_FIRST_NAME == null) {
			return StringPool.BLANK;
		}
		else {
			return _CUSTOMER_FIRST_NAME;
		}
	}

	@Override
	public void setCUSTOMER_FIRST_NAME(String CUSTOMER_FIRST_NAME) {
		_CUSTOMER_FIRST_NAME = CUSTOMER_FIRST_NAME;
	}

	@Override
	public String getCUSTOMER_LAST_NAME() {
		if (_CUSTOMER_LAST_NAME == null) {
			return StringPool.BLANK;
		}
		else {
			return _CUSTOMER_LAST_NAME;
		}
	}

	@Override
	public void setCUSTOMER_LAST_NAME(String CUSTOMER_LAST_NAME) {
		_CUSTOMER_LAST_NAME = CUSTOMER_LAST_NAME;
	}

	@Override
	public String getCUSTOMER_MIDDLE_NAME() {
		if (_CUSTOMER_MIDDLE_NAME == null) {
			return StringPool.BLANK;
		}
		else {
			return _CUSTOMER_MIDDLE_NAME;
		}
	}

	@Override
	public void setCUSTOMER_MIDDLE_NAME(String CUSTOMER_MIDDLE_NAME) {
		_CUSTOMER_MIDDLE_NAME = CUSTOMER_MIDDLE_NAME;
	}

	@Override
	public String getCUSTOMER_DATE_OF_BIRTH() {
		if (_CUSTOMER_DATE_OF_BIRTH == null) {
			return StringPool.BLANK;
		}
		else {
			return _CUSTOMER_DATE_OF_BIRTH;
		}
	}

	@Override
	public void setCUSTOMER_DATE_OF_BIRTH(String CUSTOMER_DATE_OF_BIRTH) {
		_CUSTOMER_DATE_OF_BIRTH = CUSTOMER_DATE_OF_BIRTH;
	}

	@Override
	public String getCUSTOMER_EMAIL_ADDR() {
		if (_CUSTOMER_EMAIL_ADDR == null) {
			return StringPool.BLANK;
		}
		else {
			return _CUSTOMER_EMAIL_ADDR;
		}
	}

	@Override
	public void setCUSTOMER_EMAIL_ADDR(String CUSTOMER_EMAIL_ADDR) {
		_CUSTOMER_EMAIL_ADDR = CUSTOMER_EMAIL_ADDR;
	}

	@Override
	public String getOFFICE_NAME() {
		if (_OFFICE_NAME == null) {
			return StringPool.BLANK;
		}
		else {
			return _OFFICE_NAME;
		}
	}

	@Override
	public void setOFFICE_NAME(String OFFICE_NAME) {
		_OFFICE_NAME = OFFICE_NAME;
	}

	@Override
	public String getDESIGNATION() {
		if (_DESIGNATION == null) {
			return StringPool.BLANK;
		}
		else {
			return _DESIGNATION;
		}
	}

	@Override
	public void setDESIGNATION(String DESIGNATION) {
		_DESIGNATION = DESIGNATION;
	}

	@Override
	public String getDEPARTMENT() {
		if (_DEPARTMENT == null) {
			return StringPool.BLANK;
		}
		else {
			return _DEPARTMENT;
		}
	}

	@Override
	public void setDEPARTMENT(String DEPARTMENT) {
		_DEPARTMENT = DEPARTMENT;
	}

	@Override
	public String getPRIMARY_ADDRESS_LINE_1() {
		if (_PRIMARY_ADDRESS_LINE_1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _PRIMARY_ADDRESS_LINE_1;
		}
	}

	@Override
	public void setPRIMARY_ADDRESS_LINE_1(String PRIMARY_ADDRESS_LINE_1) {
		_PRIMARY_ADDRESS_LINE_1 = PRIMARY_ADDRESS_LINE_1;
	}

	@Override
	public String getPRIMARY_ADDRESS_LINE_2() {
		if (_PRIMARY_ADDRESS_LINE_2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _PRIMARY_ADDRESS_LINE_2;
		}
	}

	@Override
	public void setPRIMARY_ADDRESS_LINE_2(String PRIMARY_ADDRESS_LINE_2) {
		_PRIMARY_ADDRESS_LINE_2 = PRIMARY_ADDRESS_LINE_2;
	}

	@Override
	public String getPRIMARY_ADDRESS_LINE_3() {
		if (_PRIMARY_ADDRESS_LINE_3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _PRIMARY_ADDRESS_LINE_3;
		}
	}

	@Override
	public void setPRIMARY_ADDRESS_LINE_3(String PRIMARY_ADDRESS_LINE_3) {
		_PRIMARY_ADDRESS_LINE_3 = PRIMARY_ADDRESS_LINE_3;
	}

	@Override
	public String getPRIMARY_ADDRESS_CITY() {
		if (_PRIMARY_ADDRESS_CITY == null) {
			return StringPool.BLANK;
		}
		else {
			return _PRIMARY_ADDRESS_CITY;
		}
	}

	@Override
	public void setPRIMARY_ADDRESS_CITY(String PRIMARY_ADDRESS_CITY) {
		_PRIMARY_ADDRESS_CITY = PRIMARY_ADDRESS_CITY;
	}

	@Override
	public String getPRIMARY_ADDRESS_STATE() {
		if (_PRIMARY_ADDRESS_STATE == null) {
			return StringPool.BLANK;
		}
		else {
			return _PRIMARY_ADDRESS_STATE;
		}
	}

	@Override
	public void setPRIMARY_ADDRESS_STATE(String PRIMARY_ADDRESS_STATE) {
		_PRIMARY_ADDRESS_STATE = PRIMARY_ADDRESS_STATE;
	}

	@Override
	public String getPRIMARY_ADDRESS_PINCODE() {
		if (_PRIMARY_ADDRESS_PINCODE == null) {
			return StringPool.BLANK;
		}
		else {
			return _PRIMARY_ADDRESS_PINCODE;
		}
	}

	@Override
	public void setPRIMARY_ADDRESS_PINCODE(String PRIMARY_ADDRESS_PINCODE) {
		_PRIMARY_ADDRESS_PINCODE = PRIMARY_ADDRESS_PINCODE;
	}

	@Override
	public String getPHONE_NUMBER_1() {
		if (_PHONE_NUMBER_1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _PHONE_NUMBER_1;
		}
	}

	@Override
	public void setPHONE_NUMBER_1(String PHONE_NUMBER_1) {
		_PHONE_NUMBER_1 = PHONE_NUMBER_1;
	}

	@Override
	public String getPHONE_NUMBER_2() {
		if (_PHONE_NUMBER_2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _PHONE_NUMBER_2;
		}
	}

	@Override
	public void setPHONE_NUMBER_2(String PHONE_NUMBER_2) {
		_PHONE_NUMBER_2 = PHONE_NUMBER_2;
	}

	@Override
	public String getPHONE_NUMBER_3() {
		if (_PHONE_NUMBER_3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _PHONE_NUMBER_3;
		}
	}

	@Override
	public void setPHONE_NUMBER_3(String PHONE_NUMBER_3) {
		_PHONE_NUMBER_3 = PHONE_NUMBER_3;
	}

	@Override
	public String getLOGIN_NAME() {
		if (_LOGIN_NAME == null) {
			return StringPool.BLANK;
		}
		else {
			return _LOGIN_NAME;
		}
	}

	@Override
	public void setLOGIN_NAME(String LOGIN_NAME) {
		_LOGIN_NAME = LOGIN_NAME;
	}

	@Override
	public String getGENDER() {
		if (_GENDER == null) {
			return StringPool.BLANK;
		}
		else {
			return _GENDER;
		}
	}

	@Override
	public void setGENDER(String GENDER) {
		_GENDER = GENDER;
	}

	@Override
	public String getMARITAL_STATUS() {
		if (_MARITAL_STATUS == null) {
			return StringPool.BLANK;
		}
		else {
			return _MARITAL_STATUS;
		}
	}

	@Override
	public void setMARITAL_STATUS(String MARITAL_STATUS) {
		_MARITAL_STATUS = MARITAL_STATUS;
	}

	@Override
	public String getCOUNTRY() {
		if (_COUNTRY == null) {
			return StringPool.BLANK;
		}
		else {
			return _COUNTRY;
		}
	}

	@Override
	public void setCOUNTRY(String COUNTRY) {
		_COUNTRY = COUNTRY;
	}

	@Override
	public int getPRIMARY_ADDRESS_STATE_ID() {
		return _PRIMARY_ADDRESS_STATE_ID;
	}

	@Override
	public void setPRIMARY_ADDRESS_STATE_ID(int PRIMARY_ADDRESS_STATE_ID) {
		_PRIMARY_ADDRESS_STATE_ID = PRIMARY_ADDRESS_STATE_ID;
	}

	@Override
	public int getPRIMARY_ADDRESS_CITY_ID() {
		return _PRIMARY_ADDRESS_CITY_ID;
	}

	@Override
	public void setPRIMARY_ADDRESS_CITY_ID(int PRIMARY_ADDRESS_CITY_ID) {
		_PRIMARY_ADDRESS_CITY_ID = PRIMARY_ADDRESS_CITY_ID;
	}

	@Override
	public String getADDED_BY() {
		if (_ADDED_BY == null) {
			return StringPool.BLANK;
		}
		else {
			return _ADDED_BY;
		}
	}

	@Override
	public void setADDED_BY(String ADDED_BY) {
		_ADDED_BY = ADDED_BY;
	}

	@Override
	public Date getADDED_DATE() {
		return _ADDED_DATE;
	}

	@Override
	public void setADDED_DATE(Date ADDED_DATE) {
		_ADDED_DATE = ADDED_DATE;
	}

	@Override
	public String getUPDATED_BY() {
		if (_UPDATED_BY == null) {
			return StringPool.BLANK;
		}
		else {
			return _UPDATED_BY;
		}
	}

	@Override
	public void setUPDATED_BY(String UPDATED_BY) {
		_UPDATED_BY = UPDATED_BY;
	}

	@Override
	public Date getUPDATED_DATE() {
		return _UPDATED_DATE;
	}

	@Override
	public void setUPDATED_DATE(Date UPDATED_DATE) {
		_UPDATED_DATE = UPDATED_DATE;
	}

	@Override
	public String getPANCARD() {
		if (_PANCARD == null) {
			return StringPool.BLANK;
		}
		else {
			return _PANCARD;
		}
	}

	@Override
	public void setPANCARD(String PANCARD) {
		_PANCARD = PANCARD;
	}

	@Override
	public Customer toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Customer)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CustomerImpl customerImpl = new CustomerImpl();

		customerImpl.setCUSTOMER_ID(getCUSTOMER_ID());
		customerImpl.setCUSTOMER_SALUTATION(getCUSTOMER_SALUTATION());
		customerImpl.setCUSTOMER_FIRST_NAME(getCUSTOMER_FIRST_NAME());
		customerImpl.setCUSTOMER_LAST_NAME(getCUSTOMER_LAST_NAME());
		customerImpl.setCUSTOMER_MIDDLE_NAME(getCUSTOMER_MIDDLE_NAME());
		customerImpl.setCUSTOMER_DATE_OF_BIRTH(getCUSTOMER_DATE_OF_BIRTH());
		customerImpl.setCUSTOMER_EMAIL_ADDR(getCUSTOMER_EMAIL_ADDR());
		customerImpl.setOFFICE_NAME(getOFFICE_NAME());
		customerImpl.setDESIGNATION(getDESIGNATION());
		customerImpl.setDEPARTMENT(getDEPARTMENT());
		customerImpl.setPRIMARY_ADDRESS_LINE_1(getPRIMARY_ADDRESS_LINE_1());
		customerImpl.setPRIMARY_ADDRESS_LINE_2(getPRIMARY_ADDRESS_LINE_2());
		customerImpl.setPRIMARY_ADDRESS_LINE_3(getPRIMARY_ADDRESS_LINE_3());
		customerImpl.setPRIMARY_ADDRESS_CITY(getPRIMARY_ADDRESS_CITY());
		customerImpl.setPRIMARY_ADDRESS_STATE(getPRIMARY_ADDRESS_STATE());
		customerImpl.setPRIMARY_ADDRESS_PINCODE(getPRIMARY_ADDRESS_PINCODE());
		customerImpl.setPHONE_NUMBER_1(getPHONE_NUMBER_1());
		customerImpl.setPHONE_NUMBER_2(getPHONE_NUMBER_2());
		customerImpl.setPHONE_NUMBER_3(getPHONE_NUMBER_3());
		customerImpl.setLOGIN_NAME(getLOGIN_NAME());
		customerImpl.setGENDER(getGENDER());
		customerImpl.setMARITAL_STATUS(getMARITAL_STATUS());
		customerImpl.setCOUNTRY(getCOUNTRY());
		customerImpl.setPRIMARY_ADDRESS_STATE_ID(getPRIMARY_ADDRESS_STATE_ID());
		customerImpl.setPRIMARY_ADDRESS_CITY_ID(getPRIMARY_ADDRESS_CITY_ID());
		customerImpl.setADDED_BY(getADDED_BY());
		customerImpl.setADDED_DATE(getADDED_DATE());
		customerImpl.setUPDATED_BY(getUPDATED_BY());
		customerImpl.setUPDATED_DATE(getUPDATED_DATE());
		customerImpl.setPANCARD(getPANCARD());

		customerImpl.resetOriginalValues();

		return customerImpl;
	}

	@Override
	public int compareTo(Customer customer) {
		int primaryKey = customer.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Customer)) {
			return false;
		}

		Customer customer = (Customer)obj;

		int primaryKey = customer.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Customer> toCacheModel() {
		CustomerCacheModel customerCacheModel = new CustomerCacheModel();

		customerCacheModel.CUSTOMER_ID = getCUSTOMER_ID();

		customerCacheModel.CUSTOMER_SALUTATION = getCUSTOMER_SALUTATION();

		String CUSTOMER_SALUTATION = customerCacheModel.CUSTOMER_SALUTATION;

		if ((CUSTOMER_SALUTATION != null) &&
				(CUSTOMER_SALUTATION.length() == 0)) {
			customerCacheModel.CUSTOMER_SALUTATION = null;
		}

		customerCacheModel.CUSTOMER_FIRST_NAME = getCUSTOMER_FIRST_NAME();

		String CUSTOMER_FIRST_NAME = customerCacheModel.CUSTOMER_FIRST_NAME;

		if ((CUSTOMER_FIRST_NAME != null) &&
				(CUSTOMER_FIRST_NAME.length() == 0)) {
			customerCacheModel.CUSTOMER_FIRST_NAME = null;
		}

		customerCacheModel.CUSTOMER_LAST_NAME = getCUSTOMER_LAST_NAME();

		String CUSTOMER_LAST_NAME = customerCacheModel.CUSTOMER_LAST_NAME;

		if ((CUSTOMER_LAST_NAME != null) && (CUSTOMER_LAST_NAME.length() == 0)) {
			customerCacheModel.CUSTOMER_LAST_NAME = null;
		}

		customerCacheModel.CUSTOMER_MIDDLE_NAME = getCUSTOMER_MIDDLE_NAME();

		String CUSTOMER_MIDDLE_NAME = customerCacheModel.CUSTOMER_MIDDLE_NAME;

		if ((CUSTOMER_MIDDLE_NAME != null) &&
				(CUSTOMER_MIDDLE_NAME.length() == 0)) {
			customerCacheModel.CUSTOMER_MIDDLE_NAME = null;
		}

		customerCacheModel.CUSTOMER_DATE_OF_BIRTH = getCUSTOMER_DATE_OF_BIRTH();

		String CUSTOMER_DATE_OF_BIRTH = customerCacheModel.CUSTOMER_DATE_OF_BIRTH;

		if ((CUSTOMER_DATE_OF_BIRTH != null) &&
				(CUSTOMER_DATE_OF_BIRTH.length() == 0)) {
			customerCacheModel.CUSTOMER_DATE_OF_BIRTH = null;
		}

		customerCacheModel.CUSTOMER_EMAIL_ADDR = getCUSTOMER_EMAIL_ADDR();

		String CUSTOMER_EMAIL_ADDR = customerCacheModel.CUSTOMER_EMAIL_ADDR;

		if ((CUSTOMER_EMAIL_ADDR != null) &&
				(CUSTOMER_EMAIL_ADDR.length() == 0)) {
			customerCacheModel.CUSTOMER_EMAIL_ADDR = null;
		}

		customerCacheModel.OFFICE_NAME = getOFFICE_NAME();

		String OFFICE_NAME = customerCacheModel.OFFICE_NAME;

		if ((OFFICE_NAME != null) && (OFFICE_NAME.length() == 0)) {
			customerCacheModel.OFFICE_NAME = null;
		}

		customerCacheModel.DESIGNATION = getDESIGNATION();

		String DESIGNATION = customerCacheModel.DESIGNATION;

		if ((DESIGNATION != null) && (DESIGNATION.length() == 0)) {
			customerCacheModel.DESIGNATION = null;
		}

		customerCacheModel.DEPARTMENT = getDEPARTMENT();

		String DEPARTMENT = customerCacheModel.DEPARTMENT;

		if ((DEPARTMENT != null) && (DEPARTMENT.length() == 0)) {
			customerCacheModel.DEPARTMENT = null;
		}

		customerCacheModel.PRIMARY_ADDRESS_LINE_1 = getPRIMARY_ADDRESS_LINE_1();

		String PRIMARY_ADDRESS_LINE_1 = customerCacheModel.PRIMARY_ADDRESS_LINE_1;

		if ((PRIMARY_ADDRESS_LINE_1 != null) &&
				(PRIMARY_ADDRESS_LINE_1.length() == 0)) {
			customerCacheModel.PRIMARY_ADDRESS_LINE_1 = null;
		}

		customerCacheModel.PRIMARY_ADDRESS_LINE_2 = getPRIMARY_ADDRESS_LINE_2();

		String PRIMARY_ADDRESS_LINE_2 = customerCacheModel.PRIMARY_ADDRESS_LINE_2;

		if ((PRIMARY_ADDRESS_LINE_2 != null) &&
				(PRIMARY_ADDRESS_LINE_2.length() == 0)) {
			customerCacheModel.PRIMARY_ADDRESS_LINE_2 = null;
		}

		customerCacheModel.PRIMARY_ADDRESS_LINE_3 = getPRIMARY_ADDRESS_LINE_3();

		String PRIMARY_ADDRESS_LINE_3 = customerCacheModel.PRIMARY_ADDRESS_LINE_3;

		if ((PRIMARY_ADDRESS_LINE_3 != null) &&
				(PRIMARY_ADDRESS_LINE_3.length() == 0)) {
			customerCacheModel.PRIMARY_ADDRESS_LINE_3 = null;
		}

		customerCacheModel.PRIMARY_ADDRESS_CITY = getPRIMARY_ADDRESS_CITY();

		String PRIMARY_ADDRESS_CITY = customerCacheModel.PRIMARY_ADDRESS_CITY;

		if ((PRIMARY_ADDRESS_CITY != null) &&
				(PRIMARY_ADDRESS_CITY.length() == 0)) {
			customerCacheModel.PRIMARY_ADDRESS_CITY = null;
		}

		customerCacheModel.PRIMARY_ADDRESS_STATE = getPRIMARY_ADDRESS_STATE();

		String PRIMARY_ADDRESS_STATE = customerCacheModel.PRIMARY_ADDRESS_STATE;

		if ((PRIMARY_ADDRESS_STATE != null) &&
				(PRIMARY_ADDRESS_STATE.length() == 0)) {
			customerCacheModel.PRIMARY_ADDRESS_STATE = null;
		}

		customerCacheModel.PRIMARY_ADDRESS_PINCODE = getPRIMARY_ADDRESS_PINCODE();

		String PRIMARY_ADDRESS_PINCODE = customerCacheModel.PRIMARY_ADDRESS_PINCODE;

		if ((PRIMARY_ADDRESS_PINCODE != null) &&
				(PRIMARY_ADDRESS_PINCODE.length() == 0)) {
			customerCacheModel.PRIMARY_ADDRESS_PINCODE = null;
		}

		customerCacheModel.PHONE_NUMBER_1 = getPHONE_NUMBER_1();

		String PHONE_NUMBER_1 = customerCacheModel.PHONE_NUMBER_1;

		if ((PHONE_NUMBER_1 != null) && (PHONE_NUMBER_1.length() == 0)) {
			customerCacheModel.PHONE_NUMBER_1 = null;
		}

		customerCacheModel.PHONE_NUMBER_2 = getPHONE_NUMBER_2();

		String PHONE_NUMBER_2 = customerCacheModel.PHONE_NUMBER_2;

		if ((PHONE_NUMBER_2 != null) && (PHONE_NUMBER_2.length() == 0)) {
			customerCacheModel.PHONE_NUMBER_2 = null;
		}

		customerCacheModel.PHONE_NUMBER_3 = getPHONE_NUMBER_3();

		String PHONE_NUMBER_3 = customerCacheModel.PHONE_NUMBER_3;

		if ((PHONE_NUMBER_3 != null) && (PHONE_NUMBER_3.length() == 0)) {
			customerCacheModel.PHONE_NUMBER_3 = null;
		}

		customerCacheModel.LOGIN_NAME = getLOGIN_NAME();

		String LOGIN_NAME = customerCacheModel.LOGIN_NAME;

		if ((LOGIN_NAME != null) && (LOGIN_NAME.length() == 0)) {
			customerCacheModel.LOGIN_NAME = null;
		}

		customerCacheModel.GENDER = getGENDER();

		String GENDER = customerCacheModel.GENDER;

		if ((GENDER != null) && (GENDER.length() == 0)) {
			customerCacheModel.GENDER = null;
		}

		customerCacheModel.MARITAL_STATUS = getMARITAL_STATUS();

		String MARITAL_STATUS = customerCacheModel.MARITAL_STATUS;

		if ((MARITAL_STATUS != null) && (MARITAL_STATUS.length() == 0)) {
			customerCacheModel.MARITAL_STATUS = null;
		}

		customerCacheModel.COUNTRY = getCOUNTRY();

		String COUNTRY = customerCacheModel.COUNTRY;

		if ((COUNTRY != null) && (COUNTRY.length() == 0)) {
			customerCacheModel.COUNTRY = null;
		}

		customerCacheModel.PRIMARY_ADDRESS_STATE_ID = getPRIMARY_ADDRESS_STATE_ID();

		customerCacheModel.PRIMARY_ADDRESS_CITY_ID = getPRIMARY_ADDRESS_CITY_ID();

		customerCacheModel.ADDED_BY = getADDED_BY();

		String ADDED_BY = customerCacheModel.ADDED_BY;

		if ((ADDED_BY != null) && (ADDED_BY.length() == 0)) {
			customerCacheModel.ADDED_BY = null;
		}

		Date ADDED_DATE = getADDED_DATE();

		if (ADDED_DATE != null) {
			customerCacheModel.ADDED_DATE = ADDED_DATE.getTime();
		}
		else {
			customerCacheModel.ADDED_DATE = Long.MIN_VALUE;
		}

		customerCacheModel.UPDATED_BY = getUPDATED_BY();

		String UPDATED_BY = customerCacheModel.UPDATED_BY;

		if ((UPDATED_BY != null) && (UPDATED_BY.length() == 0)) {
			customerCacheModel.UPDATED_BY = null;
		}

		Date UPDATED_DATE = getUPDATED_DATE();

		if (UPDATED_DATE != null) {
			customerCacheModel.UPDATED_DATE = UPDATED_DATE.getTime();
		}
		else {
			customerCacheModel.UPDATED_DATE = Long.MIN_VALUE;
		}

		customerCacheModel.PANCARD = getPANCARD();

		String PANCARD = customerCacheModel.PANCARD;

		if ((PANCARD != null) && (PANCARD.length() == 0)) {
			customerCacheModel.PANCARD = null;
		}

		return customerCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(61);

		sb.append("{CUSTOMER_ID=");
		sb.append(getCUSTOMER_ID());
		sb.append(", CUSTOMER_SALUTATION=");
		sb.append(getCUSTOMER_SALUTATION());
		sb.append(", CUSTOMER_FIRST_NAME=");
		sb.append(getCUSTOMER_FIRST_NAME());
		sb.append(", CUSTOMER_LAST_NAME=");
		sb.append(getCUSTOMER_LAST_NAME());
		sb.append(", CUSTOMER_MIDDLE_NAME=");
		sb.append(getCUSTOMER_MIDDLE_NAME());
		sb.append(", CUSTOMER_DATE_OF_BIRTH=");
		sb.append(getCUSTOMER_DATE_OF_BIRTH());
		sb.append(", CUSTOMER_EMAIL_ADDR=");
		sb.append(getCUSTOMER_EMAIL_ADDR());
		sb.append(", OFFICE_NAME=");
		sb.append(getOFFICE_NAME());
		sb.append(", DESIGNATION=");
		sb.append(getDESIGNATION());
		sb.append(", DEPARTMENT=");
		sb.append(getDEPARTMENT());
		sb.append(", PRIMARY_ADDRESS_LINE_1=");
		sb.append(getPRIMARY_ADDRESS_LINE_1());
		sb.append(", PRIMARY_ADDRESS_LINE_2=");
		sb.append(getPRIMARY_ADDRESS_LINE_2());
		sb.append(", PRIMARY_ADDRESS_LINE_3=");
		sb.append(getPRIMARY_ADDRESS_LINE_3());
		sb.append(", PRIMARY_ADDRESS_CITY=");
		sb.append(getPRIMARY_ADDRESS_CITY());
		sb.append(", PRIMARY_ADDRESS_STATE=");
		sb.append(getPRIMARY_ADDRESS_STATE());
		sb.append(", PRIMARY_ADDRESS_PINCODE=");
		sb.append(getPRIMARY_ADDRESS_PINCODE());
		sb.append(", PHONE_NUMBER_1=");
		sb.append(getPHONE_NUMBER_1());
		sb.append(", PHONE_NUMBER_2=");
		sb.append(getPHONE_NUMBER_2());
		sb.append(", PHONE_NUMBER_3=");
		sb.append(getPHONE_NUMBER_3());
		sb.append(", LOGIN_NAME=");
		sb.append(getLOGIN_NAME());
		sb.append(", GENDER=");
		sb.append(getGENDER());
		sb.append(", MARITAL_STATUS=");
		sb.append(getMARITAL_STATUS());
		sb.append(", COUNTRY=");
		sb.append(getCOUNTRY());
		sb.append(", PRIMARY_ADDRESS_STATE_ID=");
		sb.append(getPRIMARY_ADDRESS_STATE_ID());
		sb.append(", PRIMARY_ADDRESS_CITY_ID=");
		sb.append(getPRIMARY_ADDRESS_CITY_ID());
		sb.append(", ADDED_BY=");
		sb.append(getADDED_BY());
		sb.append(", ADDED_DATE=");
		sb.append(getADDED_DATE());
		sb.append(", UPDATED_BY=");
		sb.append(getUPDATED_BY());
		sb.append(", UPDATED_DATE=");
		sb.append(getUPDATED_DATE());
		sb.append(", PANCARD=");
		sb.append(getPANCARD());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(94);

		sb.append("<model><model-name>");
		sb.append("com.ifli.rapid.model.Customer");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>CUSTOMER_ID</column-name><column-value><![CDATA[");
		sb.append(getCUSTOMER_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CUSTOMER_SALUTATION</column-name><column-value><![CDATA[");
		sb.append(getCUSTOMER_SALUTATION());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CUSTOMER_FIRST_NAME</column-name><column-value><![CDATA[");
		sb.append(getCUSTOMER_FIRST_NAME());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CUSTOMER_LAST_NAME</column-name><column-value><![CDATA[");
		sb.append(getCUSTOMER_LAST_NAME());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CUSTOMER_MIDDLE_NAME</column-name><column-value><![CDATA[");
		sb.append(getCUSTOMER_MIDDLE_NAME());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CUSTOMER_DATE_OF_BIRTH</column-name><column-value><![CDATA[");
		sb.append(getCUSTOMER_DATE_OF_BIRTH());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CUSTOMER_EMAIL_ADDR</column-name><column-value><![CDATA[");
		sb.append(getCUSTOMER_EMAIL_ADDR());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>OFFICE_NAME</column-name><column-value><![CDATA[");
		sb.append(getOFFICE_NAME());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DESIGNATION</column-name><column-value><![CDATA[");
		sb.append(getDESIGNATION());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DEPARTMENT</column-name><column-value><![CDATA[");
		sb.append(getDEPARTMENT());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PRIMARY_ADDRESS_LINE_1</column-name><column-value><![CDATA[");
		sb.append(getPRIMARY_ADDRESS_LINE_1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PRIMARY_ADDRESS_LINE_2</column-name><column-value><![CDATA[");
		sb.append(getPRIMARY_ADDRESS_LINE_2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PRIMARY_ADDRESS_LINE_3</column-name><column-value><![CDATA[");
		sb.append(getPRIMARY_ADDRESS_LINE_3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PRIMARY_ADDRESS_CITY</column-name><column-value><![CDATA[");
		sb.append(getPRIMARY_ADDRESS_CITY());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PRIMARY_ADDRESS_STATE</column-name><column-value><![CDATA[");
		sb.append(getPRIMARY_ADDRESS_STATE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PRIMARY_ADDRESS_PINCODE</column-name><column-value><![CDATA[");
		sb.append(getPRIMARY_ADDRESS_PINCODE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PHONE_NUMBER_1</column-name><column-value><![CDATA[");
		sb.append(getPHONE_NUMBER_1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PHONE_NUMBER_2</column-name><column-value><![CDATA[");
		sb.append(getPHONE_NUMBER_2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PHONE_NUMBER_3</column-name><column-value><![CDATA[");
		sb.append(getPHONE_NUMBER_3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LOGIN_NAME</column-name><column-value><![CDATA[");
		sb.append(getLOGIN_NAME());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>GENDER</column-name><column-value><![CDATA[");
		sb.append(getGENDER());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MARITAL_STATUS</column-name><column-value><![CDATA[");
		sb.append(getMARITAL_STATUS());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>COUNTRY</column-name><column-value><![CDATA[");
		sb.append(getCOUNTRY());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PRIMARY_ADDRESS_STATE_ID</column-name><column-value><![CDATA[");
		sb.append(getPRIMARY_ADDRESS_STATE_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PRIMARY_ADDRESS_CITY_ID</column-name><column-value><![CDATA[");
		sb.append(getPRIMARY_ADDRESS_CITY_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ADDED_BY</column-name><column-value><![CDATA[");
		sb.append(getADDED_BY());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ADDED_DATE</column-name><column-value><![CDATA[");
		sb.append(getADDED_DATE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>UPDATED_BY</column-name><column-value><![CDATA[");
		sb.append(getUPDATED_BY());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>UPDATED_DATE</column-name><column-value><![CDATA[");
		sb.append(getUPDATED_DATE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PANCARD</column-name><column-value><![CDATA[");
		sb.append(getPANCARD());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Customer.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Customer.class
		};
	private int _CUSTOMER_ID;
	private String _CUSTOMER_SALUTATION;
	private String _CUSTOMER_FIRST_NAME;
	private String _CUSTOMER_LAST_NAME;
	private String _CUSTOMER_MIDDLE_NAME;
	private String _CUSTOMER_DATE_OF_BIRTH;
	private String _CUSTOMER_EMAIL_ADDR;
	private String _OFFICE_NAME;
	private String _DESIGNATION;
	private String _DEPARTMENT;
	private String _PRIMARY_ADDRESS_LINE_1;
	private String _PRIMARY_ADDRESS_LINE_2;
	private String _PRIMARY_ADDRESS_LINE_3;
	private String _PRIMARY_ADDRESS_CITY;
	private String _PRIMARY_ADDRESS_STATE;
	private String _PRIMARY_ADDRESS_PINCODE;
	private String _PHONE_NUMBER_1;
	private String _PHONE_NUMBER_2;
	private String _PHONE_NUMBER_3;
	private String _LOGIN_NAME;
	private String _GENDER;
	private String _MARITAL_STATUS;
	private String _COUNTRY;
	private int _PRIMARY_ADDRESS_STATE_ID;
	private int _PRIMARY_ADDRESS_CITY_ID;
	private String _ADDED_BY;
	private Date _ADDED_DATE;
	private String _UPDATED_BY;
	private Date _UPDATED_DATE;
	private String _PANCARD;
	private Customer _escapedModel;
}