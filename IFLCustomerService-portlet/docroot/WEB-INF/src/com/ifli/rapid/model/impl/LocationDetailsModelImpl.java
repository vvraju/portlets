/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ifli.rapid.model.impl;

import com.ifli.rapid.model.LocationDetails;
import com.ifli.rapid.model.LocationDetailsModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the LocationDetails service. Represents a row in the &quot;location_details&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ifli.rapid.model.LocationDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LocationDetailsImpl}.
 * </p>
 *
 * @author Satya Kola
 * @see LocationDetailsImpl
 * @see com.ifli.rapid.model.LocationDetails
 * @see com.ifli.rapid.model.LocationDetailsModel
 * @generated
 */
public class LocationDetailsModelImpl extends BaseModelImpl<LocationDetails>
	implements LocationDetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a location details model instance should use the {@link com.ifli.rapid.model.LocationDetails} interface instead.
	 */
	public static final String TABLE_NAME = "location_details";
	public static final Object[][] TABLE_COLUMNS = {
			{ "LOCATION_ID", Types.INTEGER },
			{ "LOCATION_NAME", Types.VARCHAR },
			{ "CITY_ID", Types.INTEGER },
			{ "STATE_ID", Types.INTEGER },
			{ "LATITUDE", Types.VARCHAR },
			{ "LONGITUDE", Types.VARCHAR },
			{ "BRANCH_FLAG", Types.VARCHAR },
			{ "MEDICAL_CENTER_FLAG", Types.VARCHAR },
			{ "DROP_BOX_FLAG", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table location_details (LOCATION_ID INTEGER not null primary key,LOCATION_NAME VARCHAR(75) null,CITY_ID INTEGER,STATE_ID INTEGER,LATITUDE VARCHAR(75) null,LONGITUDE VARCHAR(75) null,BRANCH_FLAG VARCHAR(75) null,MEDICAL_CENTER_FLAG VARCHAR(75) null,DROP_BOX_FLAG VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table location_details";
	public static final String ORDER_BY_JPQL = " ORDER BY locationDetails.LOCATION_ID ASC";
	public static final String ORDER_BY_SQL = " ORDER BY location_details.LOCATION_ID ASC";
	public static final String DATA_SOURCE = "servicesDataSource";
	public static final String SESSION_FACTORY = "servicesSessionFactory";
	public static final String TX_MANAGER = "servicesTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ifli.rapid.model.LocationDetails"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ifli.rapid.model.LocationDetails"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ifli.rapid.model.LocationDetails"));

	public LocationDetailsModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _LOCATION_ID;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setLOCATION_ID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _LOCATION_ID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LocationDetails.class;
	}

	@Override
	public String getModelClassName() {
		return LocationDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("LOCATION_ID", getLOCATION_ID());
		attributes.put("LOCATION_NAME", getLOCATION_NAME());
		attributes.put("CITY_ID", getCITY_ID());
		attributes.put("STATE_ID", getSTATE_ID());
		attributes.put("LATITUDE", getLATITUDE());
		attributes.put("LONGITUDE", getLONGITUDE());
		attributes.put("BRANCH_FLAG", getBRANCH_FLAG());
		attributes.put("MEDICAL_CENTER_FLAG", getMEDICAL_CENTER_FLAG());
		attributes.put("DROP_BOX_FLAG", getDROP_BOX_FLAG());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer LOCATION_ID = (Integer)attributes.get("LOCATION_ID");

		if (LOCATION_ID != null) {
			setLOCATION_ID(LOCATION_ID);
		}

		String LOCATION_NAME = (String)attributes.get("LOCATION_NAME");

		if (LOCATION_NAME != null) {
			setLOCATION_NAME(LOCATION_NAME);
		}

		Integer CITY_ID = (Integer)attributes.get("CITY_ID");

		if (CITY_ID != null) {
			setCITY_ID(CITY_ID);
		}

		Integer STATE_ID = (Integer)attributes.get("STATE_ID");

		if (STATE_ID != null) {
			setSTATE_ID(STATE_ID);
		}

		String LATITUDE = (String)attributes.get("LATITUDE");

		if (LATITUDE != null) {
			setLATITUDE(LATITUDE);
		}

		String LONGITUDE = (String)attributes.get("LONGITUDE");

		if (LONGITUDE != null) {
			setLONGITUDE(LONGITUDE);
		}

		String BRANCH_FLAG = (String)attributes.get("BRANCH_FLAG");

		if (BRANCH_FLAG != null) {
			setBRANCH_FLAG(BRANCH_FLAG);
		}

		String MEDICAL_CENTER_FLAG = (String)attributes.get(
				"MEDICAL_CENTER_FLAG");

		if (MEDICAL_CENTER_FLAG != null) {
			setMEDICAL_CENTER_FLAG(MEDICAL_CENTER_FLAG);
		}

		String DROP_BOX_FLAG = (String)attributes.get("DROP_BOX_FLAG");

		if (DROP_BOX_FLAG != null) {
			setDROP_BOX_FLAG(DROP_BOX_FLAG);
		}
	}

	@Override
	public int getLOCATION_ID() {
		return _LOCATION_ID;
	}

	@Override
	public void setLOCATION_ID(int LOCATION_ID) {
		_LOCATION_ID = LOCATION_ID;
	}

	@Override
	public String getLOCATION_NAME() {
		if (_LOCATION_NAME == null) {
			return StringPool.BLANK;
		}
		else {
			return _LOCATION_NAME;
		}
	}

	@Override
	public void setLOCATION_NAME(String LOCATION_NAME) {
		_LOCATION_NAME = LOCATION_NAME;
	}

	@Override
	public int getCITY_ID() {
		return _CITY_ID;
	}

	@Override
	public void setCITY_ID(int CITY_ID) {
		_CITY_ID = CITY_ID;
	}

	@Override
	public int getSTATE_ID() {
		return _STATE_ID;
	}

	@Override
	public void setSTATE_ID(int STATE_ID) {
		_STATE_ID = STATE_ID;
	}

	@Override
	public String getLATITUDE() {
		if (_LATITUDE == null) {
			return StringPool.BLANK;
		}
		else {
			return _LATITUDE;
		}
	}

	@Override
	public void setLATITUDE(String LATITUDE) {
		_LATITUDE = LATITUDE;
	}

	@Override
	public String getLONGITUDE() {
		if (_LONGITUDE == null) {
			return StringPool.BLANK;
		}
		else {
			return _LONGITUDE;
		}
	}

	@Override
	public void setLONGITUDE(String LONGITUDE) {
		_LONGITUDE = LONGITUDE;
	}

	@Override
	public String getBRANCH_FLAG() {
		if (_BRANCH_FLAG == null) {
			return StringPool.BLANK;
		}
		else {
			return _BRANCH_FLAG;
		}
	}

	@Override
	public void setBRANCH_FLAG(String BRANCH_FLAG) {
		_BRANCH_FLAG = BRANCH_FLAG;
	}

	@Override
	public String getMEDICAL_CENTER_FLAG() {
		if (_MEDICAL_CENTER_FLAG == null) {
			return StringPool.BLANK;
		}
		else {
			return _MEDICAL_CENTER_FLAG;
		}
	}

	@Override
	public void setMEDICAL_CENTER_FLAG(String MEDICAL_CENTER_FLAG) {
		_MEDICAL_CENTER_FLAG = MEDICAL_CENTER_FLAG;
	}

	@Override
	public String getDROP_BOX_FLAG() {
		if (_DROP_BOX_FLAG == null) {
			return StringPool.BLANK;
		}
		else {
			return _DROP_BOX_FLAG;
		}
	}

	@Override
	public void setDROP_BOX_FLAG(String DROP_BOX_FLAG) {
		_DROP_BOX_FLAG = DROP_BOX_FLAG;
	}

	@Override
	public LocationDetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LocationDetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LocationDetailsImpl locationDetailsImpl = new LocationDetailsImpl();

		locationDetailsImpl.setLOCATION_ID(getLOCATION_ID());
		locationDetailsImpl.setLOCATION_NAME(getLOCATION_NAME());
		locationDetailsImpl.setCITY_ID(getCITY_ID());
		locationDetailsImpl.setSTATE_ID(getSTATE_ID());
		locationDetailsImpl.setLATITUDE(getLATITUDE());
		locationDetailsImpl.setLONGITUDE(getLONGITUDE());
		locationDetailsImpl.setBRANCH_FLAG(getBRANCH_FLAG());
		locationDetailsImpl.setMEDICAL_CENTER_FLAG(getMEDICAL_CENTER_FLAG());
		locationDetailsImpl.setDROP_BOX_FLAG(getDROP_BOX_FLAG());

		locationDetailsImpl.resetOriginalValues();

		return locationDetailsImpl;
	}

	@Override
	public int compareTo(LocationDetails locationDetails) {
		int primaryKey = locationDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LocationDetails)) {
			return false;
		}

		LocationDetails locationDetails = (LocationDetails)obj;

		int primaryKey = locationDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<LocationDetails> toCacheModel() {
		LocationDetailsCacheModel locationDetailsCacheModel = new LocationDetailsCacheModel();

		locationDetailsCacheModel.LOCATION_ID = getLOCATION_ID();

		locationDetailsCacheModel.LOCATION_NAME = getLOCATION_NAME();

		String LOCATION_NAME = locationDetailsCacheModel.LOCATION_NAME;

		if ((LOCATION_NAME != null) && (LOCATION_NAME.length() == 0)) {
			locationDetailsCacheModel.LOCATION_NAME = null;
		}

		locationDetailsCacheModel.CITY_ID = getCITY_ID();

		locationDetailsCacheModel.STATE_ID = getSTATE_ID();

		locationDetailsCacheModel.LATITUDE = getLATITUDE();

		String LATITUDE = locationDetailsCacheModel.LATITUDE;

		if ((LATITUDE != null) && (LATITUDE.length() == 0)) {
			locationDetailsCacheModel.LATITUDE = null;
		}

		locationDetailsCacheModel.LONGITUDE = getLONGITUDE();

		String LONGITUDE = locationDetailsCacheModel.LONGITUDE;

		if ((LONGITUDE != null) && (LONGITUDE.length() == 0)) {
			locationDetailsCacheModel.LONGITUDE = null;
		}

		locationDetailsCacheModel.BRANCH_FLAG = getBRANCH_FLAG();

		String BRANCH_FLAG = locationDetailsCacheModel.BRANCH_FLAG;

		if ((BRANCH_FLAG != null) && (BRANCH_FLAG.length() == 0)) {
			locationDetailsCacheModel.BRANCH_FLAG = null;
		}

		locationDetailsCacheModel.MEDICAL_CENTER_FLAG = getMEDICAL_CENTER_FLAG();

		String MEDICAL_CENTER_FLAG = locationDetailsCacheModel.MEDICAL_CENTER_FLAG;

		if ((MEDICAL_CENTER_FLAG != null) &&
				(MEDICAL_CENTER_FLAG.length() == 0)) {
			locationDetailsCacheModel.MEDICAL_CENTER_FLAG = null;
		}

		locationDetailsCacheModel.DROP_BOX_FLAG = getDROP_BOX_FLAG();

		String DROP_BOX_FLAG = locationDetailsCacheModel.DROP_BOX_FLAG;

		if ((DROP_BOX_FLAG != null) && (DROP_BOX_FLAG.length() == 0)) {
			locationDetailsCacheModel.DROP_BOX_FLAG = null;
		}

		return locationDetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{LOCATION_ID=");
		sb.append(getLOCATION_ID());
		sb.append(", LOCATION_NAME=");
		sb.append(getLOCATION_NAME());
		sb.append(", CITY_ID=");
		sb.append(getCITY_ID());
		sb.append(", STATE_ID=");
		sb.append(getSTATE_ID());
		sb.append(", LATITUDE=");
		sb.append(getLATITUDE());
		sb.append(", LONGITUDE=");
		sb.append(getLONGITUDE());
		sb.append(", BRANCH_FLAG=");
		sb.append(getBRANCH_FLAG());
		sb.append(", MEDICAL_CENTER_FLAG=");
		sb.append(getMEDICAL_CENTER_FLAG());
		sb.append(", DROP_BOX_FLAG=");
		sb.append(getDROP_BOX_FLAG());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.ifli.rapid.model.LocationDetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>LOCATION_ID</column-name><column-value><![CDATA[");
		sb.append(getLOCATION_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LOCATION_NAME</column-name><column-value><![CDATA[");
		sb.append(getLOCATION_NAME());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CITY_ID</column-name><column-value><![CDATA[");
		sb.append(getCITY_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>STATE_ID</column-name><column-value><![CDATA[");
		sb.append(getSTATE_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LATITUDE</column-name><column-value><![CDATA[");
		sb.append(getLATITUDE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LONGITUDE</column-name><column-value><![CDATA[");
		sb.append(getLONGITUDE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>BRANCH_FLAG</column-name><column-value><![CDATA[");
		sb.append(getBRANCH_FLAG());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MEDICAL_CENTER_FLAG</column-name><column-value><![CDATA[");
		sb.append(getMEDICAL_CENTER_FLAG());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DROP_BOX_FLAG</column-name><column-value><![CDATA[");
		sb.append(getDROP_BOX_FLAG());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LocationDetails.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LocationDetails.class
		};
	private int _LOCATION_ID;
	private String _LOCATION_NAME;
	private int _CITY_ID;
	private int _STATE_ID;
	private String _LATITUDE;
	private String _LONGITUDE;
	private String _BRANCH_FLAG;
	private String _MEDICAL_CENTER_FLAG;
	private String _DROP_BOX_FLAG;
	private LocationDetails _escapedModel;
}