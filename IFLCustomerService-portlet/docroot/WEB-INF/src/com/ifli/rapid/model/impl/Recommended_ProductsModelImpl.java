/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ifli.rapid.model.impl;

import com.ifli.rapid.model.Recommended_Products;
import com.ifli.rapid.model.Recommended_ProductsModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Recommended_Products service. Represents a row in the &quot;recommended_products&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ifli.rapid.model.Recommended_ProductsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Recommended_ProductsImpl}.
 * </p>
 *
 * @author Satya Kola
 * @see Recommended_ProductsImpl
 * @see com.ifli.rapid.model.Recommended_Products
 * @see com.ifli.rapid.model.Recommended_ProductsModel
 * @generated
 */
public class Recommended_ProductsModelImpl extends BaseModelImpl<Recommended_Products>
	implements Recommended_ProductsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a recommended_ products model instance should use the {@link com.ifli.rapid.model.Recommended_Products} interface instead.
	 */
	public static final String TABLE_NAME = "recommended_products";
	public static final Object[][] TABLE_COLUMNS = {
			{ "PRODUCT_ID", Types.INTEGER },
			{ "PRODUCT_NAME", Types.VARCHAR },
			{ "IMG_URL", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table recommended_products (PRODUCT_ID INTEGER not null primary key,PRODUCT_NAME VARCHAR(75) null,IMG_URL VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table recommended_products";
	public static final String ORDER_BY_JPQL = " ORDER BY recommended_Products.PRODUCT_ID ASC";
	public static final String ORDER_BY_SQL = " ORDER BY recommended_products.PRODUCT_ID ASC";
	public static final String DATA_SOURCE = "servicesDataSource";
	public static final String SESSION_FACTORY = "servicesSessionFactory";
	public static final String TX_MANAGER = "servicesTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ifli.rapid.model.Recommended_Products"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ifli.rapid.model.Recommended_Products"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ifli.rapid.model.Recommended_Products"));

	public Recommended_ProductsModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _PRODUCT_ID;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setPRODUCT_ID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _PRODUCT_ID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Recommended_Products.class;
	}

	@Override
	public String getModelClassName() {
		return Recommended_Products.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("PRODUCT_ID", getPRODUCT_ID());
		attributes.put("PRODUCT_NAME", getPRODUCT_NAME());
		attributes.put("IMG_URL", getIMG_URL());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer PRODUCT_ID = (Integer)attributes.get("PRODUCT_ID");

		if (PRODUCT_ID != null) {
			setPRODUCT_ID(PRODUCT_ID);
		}

		String PRODUCT_NAME = (String)attributes.get("PRODUCT_NAME");

		if (PRODUCT_NAME != null) {
			setPRODUCT_NAME(PRODUCT_NAME);
		}

		String IMG_URL = (String)attributes.get("IMG_URL");

		if (IMG_URL != null) {
			setIMG_URL(IMG_URL);
		}
	}

	@Override
	public int getPRODUCT_ID() {
		return _PRODUCT_ID;
	}

	@Override
	public void setPRODUCT_ID(int PRODUCT_ID) {
		_PRODUCT_ID = PRODUCT_ID;
	}

	@Override
	public String getPRODUCT_NAME() {
		if (_PRODUCT_NAME == null) {
			return StringPool.BLANK;
		}
		else {
			return _PRODUCT_NAME;
		}
	}

	@Override
	public void setPRODUCT_NAME(String PRODUCT_NAME) {
		_PRODUCT_NAME = PRODUCT_NAME;
	}

	@Override
	public String getIMG_URL() {
		if (_IMG_URL == null) {
			return StringPool.BLANK;
		}
		else {
			return _IMG_URL;
		}
	}

	@Override
	public void setIMG_URL(String IMG_URL) {
		_IMG_URL = IMG_URL;
	}

	@Override
	public Recommended_Products toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Recommended_Products)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		Recommended_ProductsImpl recommended_ProductsImpl = new Recommended_ProductsImpl();

		recommended_ProductsImpl.setPRODUCT_ID(getPRODUCT_ID());
		recommended_ProductsImpl.setPRODUCT_NAME(getPRODUCT_NAME());
		recommended_ProductsImpl.setIMG_URL(getIMG_URL());

		recommended_ProductsImpl.resetOriginalValues();

		return recommended_ProductsImpl;
	}

	@Override
	public int compareTo(Recommended_Products recommended_Products) {
		int primaryKey = recommended_Products.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Recommended_Products)) {
			return false;
		}

		Recommended_Products recommended_Products = (Recommended_Products)obj;

		int primaryKey = recommended_Products.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Recommended_Products> toCacheModel() {
		Recommended_ProductsCacheModel recommended_ProductsCacheModel = new Recommended_ProductsCacheModel();

		recommended_ProductsCacheModel.PRODUCT_ID = getPRODUCT_ID();

		recommended_ProductsCacheModel.PRODUCT_NAME = getPRODUCT_NAME();

		String PRODUCT_NAME = recommended_ProductsCacheModel.PRODUCT_NAME;

		if ((PRODUCT_NAME != null) && (PRODUCT_NAME.length() == 0)) {
			recommended_ProductsCacheModel.PRODUCT_NAME = null;
		}

		recommended_ProductsCacheModel.IMG_URL = getIMG_URL();

		String IMG_URL = recommended_ProductsCacheModel.IMG_URL;

		if ((IMG_URL != null) && (IMG_URL.length() == 0)) {
			recommended_ProductsCacheModel.IMG_URL = null;
		}

		return recommended_ProductsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{PRODUCT_ID=");
		sb.append(getPRODUCT_ID());
		sb.append(", PRODUCT_NAME=");
		sb.append(getPRODUCT_NAME());
		sb.append(", IMG_URL=");
		sb.append(getIMG_URL());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("com.ifli.rapid.model.Recommended_Products");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>PRODUCT_ID</column-name><column-value><![CDATA[");
		sb.append(getPRODUCT_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PRODUCT_NAME</column-name><column-value><![CDATA[");
		sb.append(getPRODUCT_NAME());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IMG_URL</column-name><column-value><![CDATA[");
		sb.append(getIMG_URL());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Recommended_Products.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Recommended_Products.class
		};
	private int _PRODUCT_ID;
	private String _PRODUCT_NAME;
	private String _IMG_URL;
	private Recommended_Products _escapedModel;
}