/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ifli.rapid.model.impl;

import com.ifli.rapid.model.AddressChangeReqDetails;
import com.ifli.rapid.model.AddressChangeReqDetailsModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the AddressChangeReqDetails service. Represents a row in the &quot;addr_change_req_details&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ifli.rapid.model.AddressChangeReqDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AddressChangeReqDetailsImpl}.
 * </p>
 *
 * @author Satya Kola
 * @see AddressChangeReqDetailsImpl
 * @see com.ifli.rapid.model.AddressChangeReqDetails
 * @see com.ifli.rapid.model.AddressChangeReqDetailsModel
 * @generated
 */
public class AddressChangeReqDetailsModelImpl extends BaseModelImpl<AddressChangeReqDetails>
	implements AddressChangeReqDetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a address change req details model instance should use the {@link com.ifli.rapid.model.AddressChangeReqDetails} interface instead.
	 */
	public static final String TABLE_NAME = "addr_change_req_details";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ADDR_CHANGE_DETAILS_ID", Types.INTEGER },
			{ "REQUEST_SUBMIT_TYPE", Types.VARCHAR },
			{ "SERVICE_REQUEST_ID", Types.INTEGER },
			{ "SUB_TYPE", Types.INTEGER },
			{ "ADDRESS_TYPE_ID", Types.INTEGER },
			{ "CUSTOMER_ID", Types.INTEGER },
			{ "SUBMIT_AT_BRANCH", Types.INTEGER },
			{ "PICKUP_DATE", Types.TIMESTAMP },
			{ "PICKUP_TIME", Types.VARCHAR },
			{ "INSERTED_DATE", Types.TIMESTAMP },
			{ "INSERTED_BY", Types.VARCHAR },
			{ "UPDATED_DATE", Types.TIMESTAMP },
			{ "UPDATED_BY", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table addr_change_req_details (ADDR_CHANGE_DETAILS_ID INTEGER not null primary key IDENTITY,REQUEST_SUBMIT_TYPE VARCHAR(75) null,SERVICE_REQUEST_ID INTEGER,SUB_TYPE INTEGER,ADDRESS_TYPE_ID INTEGER,CUSTOMER_ID INTEGER,SUBMIT_AT_BRANCH INTEGER,PICKUP_DATE DATE null,PICKUP_TIME VARCHAR(75) null,INSERTED_DATE DATE null,INSERTED_BY VARCHAR(75) null,UPDATED_DATE DATE null,UPDATED_BY VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table addr_change_req_details";
	public static final String ORDER_BY_JPQL = " ORDER BY addressChangeReqDetails.ADDR_CHANGE_DETAILS_ID ASC";
	public static final String ORDER_BY_SQL = " ORDER BY addr_change_req_details.ADDR_CHANGE_DETAILS_ID ASC";
	public static final String DATA_SOURCE = "servicesDataSource";
	public static final String SESSION_FACTORY = "servicesSessionFactory";
	public static final String TX_MANAGER = "servicesTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ifli.rapid.model.AddressChangeReqDetails"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ifli.rapid.model.AddressChangeReqDetails"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ifli.rapid.model.AddressChangeReqDetails"));

	public AddressChangeReqDetailsModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _ADDR_CHANGE_DETAILS_ID;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setADDR_CHANGE_DETAILS_ID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ADDR_CHANGE_DETAILS_ID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AddressChangeReqDetails.class;
	}

	@Override
	public String getModelClassName() {
		return AddressChangeReqDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("ADDR_CHANGE_DETAILS_ID", getADDR_CHANGE_DETAILS_ID());
		attributes.put("REQUEST_SUBMIT_TYPE", getREQUEST_SUBMIT_TYPE());
		attributes.put("SERVICE_REQUEST_ID", getSERVICE_REQUEST_ID());
		attributes.put("SUB_TYPE", getSUB_TYPE());
		attributes.put("ADDRESS_TYPE_ID", getADDRESS_TYPE_ID());
		attributes.put("CUSTOMER_ID", getCUSTOMER_ID());
		attributes.put("SUBMIT_AT_BRANCH", getSUBMIT_AT_BRANCH());
		attributes.put("PICKUP_DATE", getPICKUP_DATE());
		attributes.put("PICKUP_TIME", getPICKUP_TIME());
		attributes.put("INSERTED_DATE", getINSERTED_DATE());
		attributes.put("INSERTED_BY", getINSERTED_BY());
		attributes.put("UPDATED_DATE", getUPDATED_DATE());
		attributes.put("UPDATED_BY", getUPDATED_BY());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer ADDR_CHANGE_DETAILS_ID = (Integer)attributes.get(
				"ADDR_CHANGE_DETAILS_ID");

		if (ADDR_CHANGE_DETAILS_ID != null) {
			setADDR_CHANGE_DETAILS_ID(ADDR_CHANGE_DETAILS_ID);
		}

		String REQUEST_SUBMIT_TYPE = (String)attributes.get(
				"REQUEST_SUBMIT_TYPE");

		if (REQUEST_SUBMIT_TYPE != null) {
			setREQUEST_SUBMIT_TYPE(REQUEST_SUBMIT_TYPE);
		}

		Integer SERVICE_REQUEST_ID = (Integer)attributes.get(
				"SERVICE_REQUEST_ID");

		if (SERVICE_REQUEST_ID != null) {
			setSERVICE_REQUEST_ID(SERVICE_REQUEST_ID);
		}

		Integer SUB_TYPE = (Integer)attributes.get("SUB_TYPE");

		if (SUB_TYPE != null) {
			setSUB_TYPE(SUB_TYPE);
		}

		Integer ADDRESS_TYPE_ID = (Integer)attributes.get("ADDRESS_TYPE_ID");

		if (ADDRESS_TYPE_ID != null) {
			setADDRESS_TYPE_ID(ADDRESS_TYPE_ID);
		}

		Integer CUSTOMER_ID = (Integer)attributes.get("CUSTOMER_ID");

		if (CUSTOMER_ID != null) {
			setCUSTOMER_ID(CUSTOMER_ID);
		}

		Integer SUBMIT_AT_BRANCH = (Integer)attributes.get("SUBMIT_AT_BRANCH");

		if (SUBMIT_AT_BRANCH != null) {
			setSUBMIT_AT_BRANCH(SUBMIT_AT_BRANCH);
		}

		Date PICKUP_DATE = (Date)attributes.get("PICKUP_DATE");

		if (PICKUP_DATE != null) {
			setPICKUP_DATE(PICKUP_DATE);
		}

		String PICKUP_TIME = (String)attributes.get("PICKUP_TIME");

		if (PICKUP_TIME != null) {
			setPICKUP_TIME(PICKUP_TIME);
		}

		Date INSERTED_DATE = (Date)attributes.get("INSERTED_DATE");

		if (INSERTED_DATE != null) {
			setINSERTED_DATE(INSERTED_DATE);
		}

		String INSERTED_BY = (String)attributes.get("INSERTED_BY");

		if (INSERTED_BY != null) {
			setINSERTED_BY(INSERTED_BY);
		}

		Date UPDATED_DATE = (Date)attributes.get("UPDATED_DATE");

		if (UPDATED_DATE != null) {
			setUPDATED_DATE(UPDATED_DATE);
		}

		String UPDATED_BY = (String)attributes.get("UPDATED_BY");

		if (UPDATED_BY != null) {
			setUPDATED_BY(UPDATED_BY);
		}
	}

	@Override
	public int getADDR_CHANGE_DETAILS_ID() {
		return _ADDR_CHANGE_DETAILS_ID;
	}

	@Override
	public void setADDR_CHANGE_DETAILS_ID(int ADDR_CHANGE_DETAILS_ID) {
		_ADDR_CHANGE_DETAILS_ID = ADDR_CHANGE_DETAILS_ID;
	}

	@Override
	public String getREQUEST_SUBMIT_TYPE() {
		if (_REQUEST_SUBMIT_TYPE == null) {
			return StringPool.BLANK;
		}
		else {
			return _REQUEST_SUBMIT_TYPE;
		}
	}

	@Override
	public void setREQUEST_SUBMIT_TYPE(String REQUEST_SUBMIT_TYPE) {
		_REQUEST_SUBMIT_TYPE = REQUEST_SUBMIT_TYPE;
	}

	@Override
	public int getSERVICE_REQUEST_ID() {
		return _SERVICE_REQUEST_ID;
	}

	@Override
	public void setSERVICE_REQUEST_ID(int SERVICE_REQUEST_ID) {
		_SERVICE_REQUEST_ID = SERVICE_REQUEST_ID;
	}

	@Override
	public int getSUB_TYPE() {
		return _SUB_TYPE;
	}

	@Override
	public void setSUB_TYPE(int SUB_TYPE) {
		_SUB_TYPE = SUB_TYPE;
	}

	@Override
	public int getADDRESS_TYPE_ID() {
		return _ADDRESS_TYPE_ID;
	}

	@Override
	public void setADDRESS_TYPE_ID(int ADDRESS_TYPE_ID) {
		_ADDRESS_TYPE_ID = ADDRESS_TYPE_ID;
	}

	@Override
	public int getCUSTOMER_ID() {
		return _CUSTOMER_ID;
	}

	@Override
	public void setCUSTOMER_ID(int CUSTOMER_ID) {
		_CUSTOMER_ID = CUSTOMER_ID;
	}

	@Override
	public int getSUBMIT_AT_BRANCH() {
		return _SUBMIT_AT_BRANCH;
	}

	@Override
	public void setSUBMIT_AT_BRANCH(int SUBMIT_AT_BRANCH) {
		_SUBMIT_AT_BRANCH = SUBMIT_AT_BRANCH;
	}

	@Override
	public Date getPICKUP_DATE() {
		return _PICKUP_DATE;
	}

	@Override
	public void setPICKUP_DATE(Date PICKUP_DATE) {
		_PICKUP_DATE = PICKUP_DATE;
	}

	@Override
	public String getPICKUP_TIME() {
		if (_PICKUP_TIME == null) {
			return StringPool.BLANK;
		}
		else {
			return _PICKUP_TIME;
		}
	}

	@Override
	public void setPICKUP_TIME(String PICKUP_TIME) {
		_PICKUP_TIME = PICKUP_TIME;
	}

	@Override
	public Date getINSERTED_DATE() {
		return _INSERTED_DATE;
	}

	@Override
	public void setINSERTED_DATE(Date INSERTED_DATE) {
		_INSERTED_DATE = INSERTED_DATE;
	}

	@Override
	public String getINSERTED_BY() {
		if (_INSERTED_BY == null) {
			return StringPool.BLANK;
		}
		else {
			return _INSERTED_BY;
		}
	}

	@Override
	public void setINSERTED_BY(String INSERTED_BY) {
		_INSERTED_BY = INSERTED_BY;
	}

	@Override
	public Date getUPDATED_DATE() {
		return _UPDATED_DATE;
	}

	@Override
	public void setUPDATED_DATE(Date UPDATED_DATE) {
		_UPDATED_DATE = UPDATED_DATE;
	}

	@Override
	public String getUPDATED_BY() {
		if (_UPDATED_BY == null) {
			return StringPool.BLANK;
		}
		else {
			return _UPDATED_BY;
		}
	}

	@Override
	public void setUPDATED_BY(String UPDATED_BY) {
		_UPDATED_BY = UPDATED_BY;
	}

	@Override
	public AddressChangeReqDetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AddressChangeReqDetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AddressChangeReqDetailsImpl addressChangeReqDetailsImpl = new AddressChangeReqDetailsImpl();

		addressChangeReqDetailsImpl.setADDR_CHANGE_DETAILS_ID(getADDR_CHANGE_DETAILS_ID());
		addressChangeReqDetailsImpl.setREQUEST_SUBMIT_TYPE(getREQUEST_SUBMIT_TYPE());
		addressChangeReqDetailsImpl.setSERVICE_REQUEST_ID(getSERVICE_REQUEST_ID());
		addressChangeReqDetailsImpl.setSUB_TYPE(getSUB_TYPE());
		addressChangeReqDetailsImpl.setADDRESS_TYPE_ID(getADDRESS_TYPE_ID());
		addressChangeReqDetailsImpl.setCUSTOMER_ID(getCUSTOMER_ID());
		addressChangeReqDetailsImpl.setSUBMIT_AT_BRANCH(getSUBMIT_AT_BRANCH());
		addressChangeReqDetailsImpl.setPICKUP_DATE(getPICKUP_DATE());
		addressChangeReqDetailsImpl.setPICKUP_TIME(getPICKUP_TIME());
		addressChangeReqDetailsImpl.setINSERTED_DATE(getINSERTED_DATE());
		addressChangeReqDetailsImpl.setINSERTED_BY(getINSERTED_BY());
		addressChangeReqDetailsImpl.setUPDATED_DATE(getUPDATED_DATE());
		addressChangeReqDetailsImpl.setUPDATED_BY(getUPDATED_BY());

		addressChangeReqDetailsImpl.resetOriginalValues();

		return addressChangeReqDetailsImpl;
	}

	@Override
	public int compareTo(AddressChangeReqDetails addressChangeReqDetails) {
		int primaryKey = addressChangeReqDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AddressChangeReqDetails)) {
			return false;
		}

		AddressChangeReqDetails addressChangeReqDetails = (AddressChangeReqDetails)obj;

		int primaryKey = addressChangeReqDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<AddressChangeReqDetails> toCacheModel() {
		AddressChangeReqDetailsCacheModel addressChangeReqDetailsCacheModel = new AddressChangeReqDetailsCacheModel();

		addressChangeReqDetailsCacheModel.ADDR_CHANGE_DETAILS_ID = getADDR_CHANGE_DETAILS_ID();

		addressChangeReqDetailsCacheModel.REQUEST_SUBMIT_TYPE = getREQUEST_SUBMIT_TYPE();

		String REQUEST_SUBMIT_TYPE = addressChangeReqDetailsCacheModel.REQUEST_SUBMIT_TYPE;

		if ((REQUEST_SUBMIT_TYPE != null) &&
				(REQUEST_SUBMIT_TYPE.length() == 0)) {
			addressChangeReqDetailsCacheModel.REQUEST_SUBMIT_TYPE = null;
		}

		addressChangeReqDetailsCacheModel.SERVICE_REQUEST_ID = getSERVICE_REQUEST_ID();

		addressChangeReqDetailsCacheModel.SUB_TYPE = getSUB_TYPE();

		addressChangeReqDetailsCacheModel.ADDRESS_TYPE_ID = getADDRESS_TYPE_ID();

		addressChangeReqDetailsCacheModel.CUSTOMER_ID = getCUSTOMER_ID();

		addressChangeReqDetailsCacheModel.SUBMIT_AT_BRANCH = getSUBMIT_AT_BRANCH();

		Date PICKUP_DATE = getPICKUP_DATE();

		if (PICKUP_DATE != null) {
			addressChangeReqDetailsCacheModel.PICKUP_DATE = PICKUP_DATE.getTime();
		}
		else {
			addressChangeReqDetailsCacheModel.PICKUP_DATE = Long.MIN_VALUE;
		}

		addressChangeReqDetailsCacheModel.PICKUP_TIME = getPICKUP_TIME();

		String PICKUP_TIME = addressChangeReqDetailsCacheModel.PICKUP_TIME;

		if ((PICKUP_TIME != null) && (PICKUP_TIME.length() == 0)) {
			addressChangeReqDetailsCacheModel.PICKUP_TIME = null;
		}

		Date INSERTED_DATE = getINSERTED_DATE();

		if (INSERTED_DATE != null) {
			addressChangeReqDetailsCacheModel.INSERTED_DATE = INSERTED_DATE.getTime();
		}
		else {
			addressChangeReqDetailsCacheModel.INSERTED_DATE = Long.MIN_VALUE;
		}

		addressChangeReqDetailsCacheModel.INSERTED_BY = getINSERTED_BY();

		String INSERTED_BY = addressChangeReqDetailsCacheModel.INSERTED_BY;

		if ((INSERTED_BY != null) && (INSERTED_BY.length() == 0)) {
			addressChangeReqDetailsCacheModel.INSERTED_BY = null;
		}

		Date UPDATED_DATE = getUPDATED_DATE();

		if (UPDATED_DATE != null) {
			addressChangeReqDetailsCacheModel.UPDATED_DATE = UPDATED_DATE.getTime();
		}
		else {
			addressChangeReqDetailsCacheModel.UPDATED_DATE = Long.MIN_VALUE;
		}

		addressChangeReqDetailsCacheModel.UPDATED_BY = getUPDATED_BY();

		String UPDATED_BY = addressChangeReqDetailsCacheModel.UPDATED_BY;

		if ((UPDATED_BY != null) && (UPDATED_BY.length() == 0)) {
			addressChangeReqDetailsCacheModel.UPDATED_BY = null;
		}

		return addressChangeReqDetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{ADDR_CHANGE_DETAILS_ID=");
		sb.append(getADDR_CHANGE_DETAILS_ID());
		sb.append(", REQUEST_SUBMIT_TYPE=");
		sb.append(getREQUEST_SUBMIT_TYPE());
		sb.append(", SERVICE_REQUEST_ID=");
		sb.append(getSERVICE_REQUEST_ID());
		sb.append(", SUB_TYPE=");
		sb.append(getSUB_TYPE());
		sb.append(", ADDRESS_TYPE_ID=");
		sb.append(getADDRESS_TYPE_ID());
		sb.append(", CUSTOMER_ID=");
		sb.append(getCUSTOMER_ID());
		sb.append(", SUBMIT_AT_BRANCH=");
		sb.append(getSUBMIT_AT_BRANCH());
		sb.append(", PICKUP_DATE=");
		sb.append(getPICKUP_DATE());
		sb.append(", PICKUP_TIME=");
		sb.append(getPICKUP_TIME());
		sb.append(", INSERTED_DATE=");
		sb.append(getINSERTED_DATE());
		sb.append(", INSERTED_BY=");
		sb.append(getINSERTED_BY());
		sb.append(", UPDATED_DATE=");
		sb.append(getUPDATED_DATE());
		sb.append(", UPDATED_BY=");
		sb.append(getUPDATED_BY());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.ifli.rapid.model.AddressChangeReqDetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ADDR_CHANGE_DETAILS_ID</column-name><column-value><![CDATA[");
		sb.append(getADDR_CHANGE_DETAILS_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>REQUEST_SUBMIT_TYPE</column-name><column-value><![CDATA[");
		sb.append(getREQUEST_SUBMIT_TYPE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SERVICE_REQUEST_ID</column-name><column-value><![CDATA[");
		sb.append(getSERVICE_REQUEST_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SUB_TYPE</column-name><column-value><![CDATA[");
		sb.append(getSUB_TYPE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ADDRESS_TYPE_ID</column-name><column-value><![CDATA[");
		sb.append(getADDRESS_TYPE_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CUSTOMER_ID</column-name><column-value><![CDATA[");
		sb.append(getCUSTOMER_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SUBMIT_AT_BRANCH</column-name><column-value><![CDATA[");
		sb.append(getSUBMIT_AT_BRANCH());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PICKUP_DATE</column-name><column-value><![CDATA[");
		sb.append(getPICKUP_DATE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PICKUP_TIME</column-name><column-value><![CDATA[");
		sb.append(getPICKUP_TIME());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>INSERTED_DATE</column-name><column-value><![CDATA[");
		sb.append(getINSERTED_DATE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>INSERTED_BY</column-name><column-value><![CDATA[");
		sb.append(getINSERTED_BY());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>UPDATED_DATE</column-name><column-value><![CDATA[");
		sb.append(getUPDATED_DATE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>UPDATED_BY</column-name><column-value><![CDATA[");
		sb.append(getUPDATED_BY());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = AddressChangeReqDetails.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			AddressChangeReqDetails.class
		};
	private int _ADDR_CHANGE_DETAILS_ID;
	private String _REQUEST_SUBMIT_TYPE;
	private int _SERVICE_REQUEST_ID;
	private int _SUB_TYPE;
	private int _ADDRESS_TYPE_ID;
	private int _CUSTOMER_ID;
	private int _SUBMIT_AT_BRANCH;
	private Date _PICKUP_DATE;
	private String _PICKUP_TIME;
	private Date _INSERTED_DATE;
	private String _INSERTED_BY;
	private Date _UPDATED_DATE;
	private String _UPDATED_BY;
	private AddressChangeReqDetails _escapedModel;
}