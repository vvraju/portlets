/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ifli.rapid.model.impl;

import com.ifli.rapid.model.PREMIUM_PAID_CERTIFICATE;
import com.ifli.rapid.model.PREMIUM_PAID_CERTIFICATEModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PREMIUM_PAID_CERTIFICATE service. Represents a row in the &quot;PREMIUM_PAID_CERTIFICATE&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ifli.rapid.model.PREMIUM_PAID_CERTIFICATEModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PREMIUM_PAID_CERTIFICATEImpl}.
 * </p>
 *
 * @author Satya Kola
 * @see PREMIUM_PAID_CERTIFICATEImpl
 * @see com.ifli.rapid.model.PREMIUM_PAID_CERTIFICATE
 * @see com.ifli.rapid.model.PREMIUM_PAID_CERTIFICATEModel
 * @generated
 */
public class PREMIUM_PAID_CERTIFICATEModelImpl extends BaseModelImpl<PREMIUM_PAID_CERTIFICATE>
	implements PREMIUM_PAID_CERTIFICATEModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a p r e m i u m_ p a i d_ c e r t i f i c a t e model instance should use the {@link com.ifli.rapid.model.PREMIUM_PAID_CERTIFICATE} interface instead.
	 */
	public static final String TABLE_NAME = "PREMIUM_PAID_CERTIFICATE";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "Financial_Year", Types.VARCHAR },
			{ "Generation_Date", Types.VARCHAR },
			{ "OwnerName", Types.VARCHAR },
			{ "Addrs1", Types.VARCHAR },
			{ "Addrs2", Types.VARCHAR },
			{ "Addrs3", Types.VARCHAR },
			{ "Addrs4", Types.VARCHAR },
			{ "Addrs5", Types.VARCHAR },
			{ "Postcode", Types.VARCHAR },
			{ "MobilePhoneNo", Types.VARCHAR },
			{ "Email_ID", Types.VARCHAR },
			{ "Client_ID", Types.VARCHAR },
			{ "Contract_Type_Desc", Types.VARCHAR },
			{ "ContrNo", Types.VARCHAR },
			{ "Installment_Prem", Types.VARCHAR },
			{ "Billing_Frequency", Types.VARCHAR },
			{ "SumAssured", Types.VARCHAR },
			{ "Total_Pre_Paid", Types.VARCHAR },
			{ "Total_Pre_Due", Types.VARCHAR },
			{ "Coverage", Types.VARCHAR },
			{ "Fin_Year", Types.INTEGER },
			{ "LETTERCTL", Types.VARCHAR },
			{ "LOCPATH", Types.VARCHAR },
			{ "DOCIDNUM", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "lastProcessedDate", Types.VARCHAR },
			{ "createDate", Types.VARCHAR },
			{ "GLCODE", Types.VARCHAR },
			{ "BRANCH_CODE", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table PREMIUM_PAID_CERTIFICATE (ID LONG not null primary key,Financial_Year VARCHAR(75) null,Generation_Date VARCHAR(75) null,OwnerName VARCHAR(75) null,Addrs1 VARCHAR(75) null,Addrs2 VARCHAR(75) null,Addrs3 VARCHAR(75) null,Addrs4 VARCHAR(75) null,Addrs5 VARCHAR(75) null,Postcode VARCHAR(75) null,MobilePhoneNo VARCHAR(75) null,Email_ID VARCHAR(75) null,Client_ID VARCHAR(75) null,Contract_Type_Desc VARCHAR(75) null,ContrNo VARCHAR(75) null,Installment_Prem VARCHAR(75) null,Billing_Frequency VARCHAR(75) null,SumAssured VARCHAR(75) null,Total_Pre_Paid VARCHAR(75) null,Total_Pre_Due VARCHAR(75) null,Coverage VARCHAR(75) null,Fin_Year INTEGER,LETTERCTL VARCHAR(75) null,LOCPATH VARCHAR(75) null,DOCIDNUM VARCHAR(75) null,status VARCHAR(75) null,lastProcessedDate VARCHAR(75) null,createDate VARCHAR(75) null,GLCODE VARCHAR(75) null,BRANCH_CODE VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table PREMIUM_PAID_CERTIFICATE";
	public static final String ORDER_BY_JPQL = " ORDER BY premium_paid_certificate.ID ASC";
	public static final String ORDER_BY_SQL = " ORDER BY PREMIUM_PAID_CERTIFICATE.ID ASC";
	public static final String DATA_SOURCE = "servicesDataSource";
	public static final String SESSION_FACTORY = "servicesSessionFactory";
	public static final String TX_MANAGER = "servicesTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ifli.rapid.model.PREMIUM_PAID_CERTIFICATE"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ifli.rapid.model.PREMIUM_PAID_CERTIFICATE"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ifli.rapid.model.PREMIUM_PAID_CERTIFICATE"),
			true);
	public static long CONTRNO_COLUMN_BITMASK = 1L;
	public static long FINANCIAL_YEAR_COLUMN_BITMASK = 2L;
	public static long ID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ifli.rapid.model.PREMIUM_PAID_CERTIFICATE"));

	public PREMIUM_PAID_CERTIFICATEModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _ID;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PREMIUM_PAID_CERTIFICATE.class;
	}

	@Override
	public String getModelClassName() {
		return PREMIUM_PAID_CERTIFICATE.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("ID", getID());
		attributes.put("Financial_Year", getFinancial_Year());
		attributes.put("Generation_Date", getGeneration_Date());
		attributes.put("OwnerName", getOwnerName());
		attributes.put("Addrs1", getAddrs1());
		attributes.put("Addrs2", getAddrs2());
		attributes.put("Addrs3", getAddrs3());
		attributes.put("Addrs4", getAddrs4());
		attributes.put("Addrs5", getAddrs5());
		attributes.put("Postcode", getPostcode());
		attributes.put("MobilePhoneNo", getMobilePhoneNo());
		attributes.put("Email_ID", getEmail_ID());
		attributes.put("Client_ID", getClient_ID());
		attributes.put("Contract_Type_Desc", getContract_Type_Desc());
		attributes.put("ContrNo", getContrNo());
		attributes.put("Installment_Prem", getInstallment_Prem());
		attributes.put("Billing_Frequency", getBilling_Frequency());
		attributes.put("SumAssured", getSumAssured());
		attributes.put("Total_Pre_Paid", getTotal_Pre_Paid());
		attributes.put("Total_Pre_Due", getTotal_Pre_Due());
		attributes.put("Coverage", getCoverage());
		attributes.put("Fin_Year", getFin_Year());
		attributes.put("LETTERCTL", getLETTERCTL());
		attributes.put("LOCPATH", getLOCPATH());
		attributes.put("DOCIDNUM", getDOCIDNUM());
		attributes.put("status", getStatus());
		attributes.put("lastProcessedDate", getLastProcessedDate());
		attributes.put("createDate", getCreateDate());
		attributes.put("GLCODE", getGLCODE());
		attributes.put("BRANCH_CODE", getBRANCH_CODE());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long ID = (Long)attributes.get("ID");

		if (ID != null) {
			setID(ID);
		}

		String Financial_Year = (String)attributes.get("Financial_Year");

		if (Financial_Year != null) {
			setFinancial_Year(Financial_Year);
		}

		String Generation_Date = (String)attributes.get("Generation_Date");

		if (Generation_Date != null) {
			setGeneration_Date(Generation_Date);
		}

		String OwnerName = (String)attributes.get("OwnerName");

		if (OwnerName != null) {
			setOwnerName(OwnerName);
		}

		String Addrs1 = (String)attributes.get("Addrs1");

		if (Addrs1 != null) {
			setAddrs1(Addrs1);
		}

		String Addrs2 = (String)attributes.get("Addrs2");

		if (Addrs2 != null) {
			setAddrs2(Addrs2);
		}

		String Addrs3 = (String)attributes.get("Addrs3");

		if (Addrs3 != null) {
			setAddrs3(Addrs3);
		}

		String Addrs4 = (String)attributes.get("Addrs4");

		if (Addrs4 != null) {
			setAddrs4(Addrs4);
		}

		String Addrs5 = (String)attributes.get("Addrs5");

		if (Addrs5 != null) {
			setAddrs5(Addrs5);
		}

		String Postcode = (String)attributes.get("Postcode");

		if (Postcode != null) {
			setPostcode(Postcode);
		}

		String MobilePhoneNo = (String)attributes.get("MobilePhoneNo");

		if (MobilePhoneNo != null) {
			setMobilePhoneNo(MobilePhoneNo);
		}

		String Email_ID = (String)attributes.get("Email_ID");

		if (Email_ID != null) {
			setEmail_ID(Email_ID);
		}

		String Client_ID = (String)attributes.get("Client_ID");

		if (Client_ID != null) {
			setClient_ID(Client_ID);
		}

		String Contract_Type_Desc = (String)attributes.get("Contract_Type_Desc");

		if (Contract_Type_Desc != null) {
			setContract_Type_Desc(Contract_Type_Desc);
		}

		String ContrNo = (String)attributes.get("ContrNo");

		if (ContrNo != null) {
			setContrNo(ContrNo);
		}

		String Installment_Prem = (String)attributes.get("Installment_Prem");

		if (Installment_Prem != null) {
			setInstallment_Prem(Installment_Prem);
		}

		String Billing_Frequency = (String)attributes.get("Billing_Frequency");

		if (Billing_Frequency != null) {
			setBilling_Frequency(Billing_Frequency);
		}

		String SumAssured = (String)attributes.get("SumAssured");

		if (SumAssured != null) {
			setSumAssured(SumAssured);
		}

		String Total_Pre_Paid = (String)attributes.get("Total_Pre_Paid");

		if (Total_Pre_Paid != null) {
			setTotal_Pre_Paid(Total_Pre_Paid);
		}

		String Total_Pre_Due = (String)attributes.get("Total_Pre_Due");

		if (Total_Pre_Due != null) {
			setTotal_Pre_Due(Total_Pre_Due);
		}

		String Coverage = (String)attributes.get("Coverage");

		if (Coverage != null) {
			setCoverage(Coverage);
		}

		Integer Fin_Year = (Integer)attributes.get("Fin_Year");

		if (Fin_Year != null) {
			setFin_Year(Fin_Year);
		}

		String LETTERCTL = (String)attributes.get("LETTERCTL");

		if (LETTERCTL != null) {
			setLETTERCTL(LETTERCTL);
		}

		String LOCPATH = (String)attributes.get("LOCPATH");

		if (LOCPATH != null) {
			setLOCPATH(LOCPATH);
		}

		String DOCIDNUM = (String)attributes.get("DOCIDNUM");

		if (DOCIDNUM != null) {
			setDOCIDNUM(DOCIDNUM);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String lastProcessedDate = (String)attributes.get("lastProcessedDate");

		if (lastProcessedDate != null) {
			setLastProcessedDate(lastProcessedDate);
		}

		String createDate = (String)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		String GLCODE = (String)attributes.get("GLCODE");

		if (GLCODE != null) {
			setGLCODE(GLCODE);
		}

		String BRANCH_CODE = (String)attributes.get("BRANCH_CODE");

		if (BRANCH_CODE != null) {
			setBRANCH_CODE(BRANCH_CODE);
		}
	}

	@Override
	public long getID() {
		return _ID;
	}

	@Override
	public void setID(long ID) {
		_ID = ID;
	}

	@Override
	public String getFinancial_Year() {
		if (_Financial_Year == null) {
			return StringPool.BLANK;
		}
		else {
			return _Financial_Year;
		}
	}

	@Override
	public void setFinancial_Year(String Financial_Year) {
		_columnBitmask |= FINANCIAL_YEAR_COLUMN_BITMASK;

		if (_originalFinancial_Year == null) {
			_originalFinancial_Year = _Financial_Year;
		}

		_Financial_Year = Financial_Year;
	}

	public String getOriginalFinancial_Year() {
		return GetterUtil.getString(_originalFinancial_Year);
	}

	@Override
	public String getGeneration_Date() {
		if (_Generation_Date == null) {
			return StringPool.BLANK;
		}
		else {
			return _Generation_Date;
		}
	}

	@Override
	public void setGeneration_Date(String Generation_Date) {
		_Generation_Date = Generation_Date;
	}

	@Override
	public String getOwnerName() {
		if (_OwnerName == null) {
			return StringPool.BLANK;
		}
		else {
			return _OwnerName;
		}
	}

	@Override
	public void setOwnerName(String OwnerName) {
		_OwnerName = OwnerName;
	}

	@Override
	public String getAddrs1() {
		if (_Addrs1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _Addrs1;
		}
	}

	@Override
	public void setAddrs1(String Addrs1) {
		_Addrs1 = Addrs1;
	}

	@Override
	public String getAddrs2() {
		if (_Addrs2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _Addrs2;
		}
	}

	@Override
	public void setAddrs2(String Addrs2) {
		_Addrs2 = Addrs2;
	}

	@Override
	public String getAddrs3() {
		if (_Addrs3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _Addrs3;
		}
	}

	@Override
	public void setAddrs3(String Addrs3) {
		_Addrs3 = Addrs3;
	}

	@Override
	public String getAddrs4() {
		if (_Addrs4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _Addrs4;
		}
	}

	@Override
	public void setAddrs4(String Addrs4) {
		_Addrs4 = Addrs4;
	}

	@Override
	public String getAddrs5() {
		if (_Addrs5 == null) {
			return StringPool.BLANK;
		}
		else {
			return _Addrs5;
		}
	}

	@Override
	public void setAddrs5(String Addrs5) {
		_Addrs5 = Addrs5;
	}

	@Override
	public String getPostcode() {
		if (_Postcode == null) {
			return StringPool.BLANK;
		}
		else {
			return _Postcode;
		}
	}

	@Override
	public void setPostcode(String Postcode) {
		_Postcode = Postcode;
	}

	@Override
	public String getMobilePhoneNo() {
		if (_MobilePhoneNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _MobilePhoneNo;
		}
	}

	@Override
	public void setMobilePhoneNo(String MobilePhoneNo) {
		_MobilePhoneNo = MobilePhoneNo;
	}

	@Override
	public String getEmail_ID() {
		if (_Email_ID == null) {
			return StringPool.BLANK;
		}
		else {
			return _Email_ID;
		}
	}

	@Override
	public void setEmail_ID(String Email_ID) {
		_Email_ID = Email_ID;
	}

	@Override
	public String getClient_ID() {
		if (_Client_ID == null) {
			return StringPool.BLANK;
		}
		else {
			return _Client_ID;
		}
	}

	@Override
	public void setClient_ID(String Client_ID) {
		_Client_ID = Client_ID;
	}

	@Override
	public String getContract_Type_Desc() {
		if (_Contract_Type_Desc == null) {
			return StringPool.BLANK;
		}
		else {
			return _Contract_Type_Desc;
		}
	}

	@Override
	public void setContract_Type_Desc(String Contract_Type_Desc) {
		_Contract_Type_Desc = Contract_Type_Desc;
	}

	@Override
	public String getContrNo() {
		if (_ContrNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _ContrNo;
		}
	}

	@Override
	public void setContrNo(String ContrNo) {
		_columnBitmask |= CONTRNO_COLUMN_BITMASK;

		if (_originalContrNo == null) {
			_originalContrNo = _ContrNo;
		}

		_ContrNo = ContrNo;
	}

	public String getOriginalContrNo() {
		return GetterUtil.getString(_originalContrNo);
	}

	@Override
	public String getInstallment_Prem() {
		if (_Installment_Prem == null) {
			return StringPool.BLANK;
		}
		else {
			return _Installment_Prem;
		}
	}

	@Override
	public void setInstallment_Prem(String Installment_Prem) {
		_Installment_Prem = Installment_Prem;
	}

	@Override
	public String getBilling_Frequency() {
		if (_Billing_Frequency == null) {
			return StringPool.BLANK;
		}
		else {
			return _Billing_Frequency;
		}
	}

	@Override
	public void setBilling_Frequency(String Billing_Frequency) {
		_Billing_Frequency = Billing_Frequency;
	}

	@Override
	public String getSumAssured() {
		if (_SumAssured == null) {
			return StringPool.BLANK;
		}
		else {
			return _SumAssured;
		}
	}

	@Override
	public void setSumAssured(String SumAssured) {
		_SumAssured = SumAssured;
	}

	@Override
	public String getTotal_Pre_Paid() {
		if (_Total_Pre_Paid == null) {
			return StringPool.BLANK;
		}
		else {
			return _Total_Pre_Paid;
		}
	}

	@Override
	public void setTotal_Pre_Paid(String Total_Pre_Paid) {
		_Total_Pre_Paid = Total_Pre_Paid;
	}

	@Override
	public String getTotal_Pre_Due() {
		if (_Total_Pre_Due == null) {
			return StringPool.BLANK;
		}
		else {
			return _Total_Pre_Due;
		}
	}

	@Override
	public void setTotal_Pre_Due(String Total_Pre_Due) {
		_Total_Pre_Due = Total_Pre_Due;
	}

	@Override
	public String getCoverage() {
		if (_Coverage == null) {
			return StringPool.BLANK;
		}
		else {
			return _Coverage;
		}
	}

	@Override
	public void setCoverage(String Coverage) {
		_Coverage = Coverage;
	}

	@Override
	public int getFin_Year() {
		return _Fin_Year;
	}

	@Override
	public void setFin_Year(int Fin_Year) {
		_Fin_Year = Fin_Year;
	}

	@Override
	public String getLETTERCTL() {
		if (_LETTERCTL == null) {
			return StringPool.BLANK;
		}
		else {
			return _LETTERCTL;
		}
	}

	@Override
	public void setLETTERCTL(String LETTERCTL) {
		_LETTERCTL = LETTERCTL;
	}

	@Override
	public String getLOCPATH() {
		if (_LOCPATH == null) {
			return StringPool.BLANK;
		}
		else {
			return _LOCPATH;
		}
	}

	@Override
	public void setLOCPATH(String LOCPATH) {
		_LOCPATH = LOCPATH;
	}

	@Override
	public String getDOCIDNUM() {
		if (_DOCIDNUM == null) {
			return StringPool.BLANK;
		}
		else {
			return _DOCIDNUM;
		}
	}

	@Override
	public void setDOCIDNUM(String DOCIDNUM) {
		_DOCIDNUM = DOCIDNUM;
	}

	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_status = status;
	}

	@Override
	public String getLastProcessedDate() {
		if (_lastProcessedDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastProcessedDate;
		}
	}

	@Override
	public void setLastProcessedDate(String lastProcessedDate) {
		_lastProcessedDate = lastProcessedDate;
	}

	@Override
	public String getCreateDate() {
		if (_createDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _createDate;
		}
	}

	@Override
	public void setCreateDate(String createDate) {
		_createDate = createDate;
	}

	@Override
	public String getGLCODE() {
		if (_GLCODE == null) {
			return StringPool.BLANK;
		}
		else {
			return _GLCODE;
		}
	}

	@Override
	public void setGLCODE(String GLCODE) {
		_GLCODE = GLCODE;
	}

	@Override
	public String getBRANCH_CODE() {
		if (_BRANCH_CODE == null) {
			return StringPool.BLANK;
		}
		else {
			return _BRANCH_CODE;
		}
	}

	@Override
	public void setBRANCH_CODE(String BRANCH_CODE) {
		_BRANCH_CODE = BRANCH_CODE;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			PREMIUM_PAID_CERTIFICATE.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PREMIUM_PAID_CERTIFICATE toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PREMIUM_PAID_CERTIFICATE)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PREMIUM_PAID_CERTIFICATEImpl premium_paid_certificateImpl = new PREMIUM_PAID_CERTIFICATEImpl();

		premium_paid_certificateImpl.setID(getID());
		premium_paid_certificateImpl.setFinancial_Year(getFinancial_Year());
		premium_paid_certificateImpl.setGeneration_Date(getGeneration_Date());
		premium_paid_certificateImpl.setOwnerName(getOwnerName());
		premium_paid_certificateImpl.setAddrs1(getAddrs1());
		premium_paid_certificateImpl.setAddrs2(getAddrs2());
		premium_paid_certificateImpl.setAddrs3(getAddrs3());
		premium_paid_certificateImpl.setAddrs4(getAddrs4());
		premium_paid_certificateImpl.setAddrs5(getAddrs5());
		premium_paid_certificateImpl.setPostcode(getPostcode());
		premium_paid_certificateImpl.setMobilePhoneNo(getMobilePhoneNo());
		premium_paid_certificateImpl.setEmail_ID(getEmail_ID());
		premium_paid_certificateImpl.setClient_ID(getClient_ID());
		premium_paid_certificateImpl.setContract_Type_Desc(getContract_Type_Desc());
		premium_paid_certificateImpl.setContrNo(getContrNo());
		premium_paid_certificateImpl.setInstallment_Prem(getInstallment_Prem());
		premium_paid_certificateImpl.setBilling_Frequency(getBilling_Frequency());
		premium_paid_certificateImpl.setSumAssured(getSumAssured());
		premium_paid_certificateImpl.setTotal_Pre_Paid(getTotal_Pre_Paid());
		premium_paid_certificateImpl.setTotal_Pre_Due(getTotal_Pre_Due());
		premium_paid_certificateImpl.setCoverage(getCoverage());
		premium_paid_certificateImpl.setFin_Year(getFin_Year());
		premium_paid_certificateImpl.setLETTERCTL(getLETTERCTL());
		premium_paid_certificateImpl.setLOCPATH(getLOCPATH());
		premium_paid_certificateImpl.setDOCIDNUM(getDOCIDNUM());
		premium_paid_certificateImpl.setStatus(getStatus());
		premium_paid_certificateImpl.setLastProcessedDate(getLastProcessedDate());
		premium_paid_certificateImpl.setCreateDate(getCreateDate());
		premium_paid_certificateImpl.setGLCODE(getGLCODE());
		premium_paid_certificateImpl.setBRANCH_CODE(getBRANCH_CODE());

		premium_paid_certificateImpl.resetOriginalValues();

		return premium_paid_certificateImpl;
	}

	@Override
	public int compareTo(PREMIUM_PAID_CERTIFICATE premium_paid_certificate) {
		long primaryKey = premium_paid_certificate.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PREMIUM_PAID_CERTIFICATE)) {
			return false;
		}

		PREMIUM_PAID_CERTIFICATE premium_paid_certificate = (PREMIUM_PAID_CERTIFICATE)obj;

		long primaryKey = premium_paid_certificate.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PREMIUM_PAID_CERTIFICATEModelImpl premium_paid_certificateModelImpl = this;

		premium_paid_certificateModelImpl._originalFinancial_Year = premium_paid_certificateModelImpl._Financial_Year;

		premium_paid_certificateModelImpl._originalContrNo = premium_paid_certificateModelImpl._ContrNo;

		premium_paid_certificateModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PREMIUM_PAID_CERTIFICATE> toCacheModel() {
		PREMIUM_PAID_CERTIFICATECacheModel premium_paid_certificateCacheModel = new PREMIUM_PAID_CERTIFICATECacheModel();

		premium_paid_certificateCacheModel.ID = getID();

		premium_paid_certificateCacheModel.Financial_Year = getFinancial_Year();

		String Financial_Year = premium_paid_certificateCacheModel.Financial_Year;

		if ((Financial_Year != null) && (Financial_Year.length() == 0)) {
			premium_paid_certificateCacheModel.Financial_Year = null;
		}

		premium_paid_certificateCacheModel.Generation_Date = getGeneration_Date();

		String Generation_Date = premium_paid_certificateCacheModel.Generation_Date;

		if ((Generation_Date != null) && (Generation_Date.length() == 0)) {
			premium_paid_certificateCacheModel.Generation_Date = null;
		}

		premium_paid_certificateCacheModel.OwnerName = getOwnerName();

		String OwnerName = premium_paid_certificateCacheModel.OwnerName;

		if ((OwnerName != null) && (OwnerName.length() == 0)) {
			premium_paid_certificateCacheModel.OwnerName = null;
		}

		premium_paid_certificateCacheModel.Addrs1 = getAddrs1();

		String Addrs1 = premium_paid_certificateCacheModel.Addrs1;

		if ((Addrs1 != null) && (Addrs1.length() == 0)) {
			premium_paid_certificateCacheModel.Addrs1 = null;
		}

		premium_paid_certificateCacheModel.Addrs2 = getAddrs2();

		String Addrs2 = premium_paid_certificateCacheModel.Addrs2;

		if ((Addrs2 != null) && (Addrs2.length() == 0)) {
			premium_paid_certificateCacheModel.Addrs2 = null;
		}

		premium_paid_certificateCacheModel.Addrs3 = getAddrs3();

		String Addrs3 = premium_paid_certificateCacheModel.Addrs3;

		if ((Addrs3 != null) && (Addrs3.length() == 0)) {
			premium_paid_certificateCacheModel.Addrs3 = null;
		}

		premium_paid_certificateCacheModel.Addrs4 = getAddrs4();

		String Addrs4 = premium_paid_certificateCacheModel.Addrs4;

		if ((Addrs4 != null) && (Addrs4.length() == 0)) {
			premium_paid_certificateCacheModel.Addrs4 = null;
		}

		premium_paid_certificateCacheModel.Addrs5 = getAddrs5();

		String Addrs5 = premium_paid_certificateCacheModel.Addrs5;

		if ((Addrs5 != null) && (Addrs5.length() == 0)) {
			premium_paid_certificateCacheModel.Addrs5 = null;
		}

		premium_paid_certificateCacheModel.Postcode = getPostcode();

		String Postcode = premium_paid_certificateCacheModel.Postcode;

		if ((Postcode != null) && (Postcode.length() == 0)) {
			premium_paid_certificateCacheModel.Postcode = null;
		}

		premium_paid_certificateCacheModel.MobilePhoneNo = getMobilePhoneNo();

		String MobilePhoneNo = premium_paid_certificateCacheModel.MobilePhoneNo;

		if ((MobilePhoneNo != null) && (MobilePhoneNo.length() == 0)) {
			premium_paid_certificateCacheModel.MobilePhoneNo = null;
		}

		premium_paid_certificateCacheModel.Email_ID = getEmail_ID();

		String Email_ID = premium_paid_certificateCacheModel.Email_ID;

		if ((Email_ID != null) && (Email_ID.length() == 0)) {
			premium_paid_certificateCacheModel.Email_ID = null;
		}

		premium_paid_certificateCacheModel.Client_ID = getClient_ID();

		String Client_ID = premium_paid_certificateCacheModel.Client_ID;

		if ((Client_ID != null) && (Client_ID.length() == 0)) {
			premium_paid_certificateCacheModel.Client_ID = null;
		}

		premium_paid_certificateCacheModel.Contract_Type_Desc = getContract_Type_Desc();

		String Contract_Type_Desc = premium_paid_certificateCacheModel.Contract_Type_Desc;

		if ((Contract_Type_Desc != null) && (Contract_Type_Desc.length() == 0)) {
			premium_paid_certificateCacheModel.Contract_Type_Desc = null;
		}

		premium_paid_certificateCacheModel.ContrNo = getContrNo();

		String ContrNo = premium_paid_certificateCacheModel.ContrNo;

		if ((ContrNo != null) && (ContrNo.length() == 0)) {
			premium_paid_certificateCacheModel.ContrNo = null;
		}

		premium_paid_certificateCacheModel.Installment_Prem = getInstallment_Prem();

		String Installment_Prem = premium_paid_certificateCacheModel.Installment_Prem;

		if ((Installment_Prem != null) && (Installment_Prem.length() == 0)) {
			premium_paid_certificateCacheModel.Installment_Prem = null;
		}

		premium_paid_certificateCacheModel.Billing_Frequency = getBilling_Frequency();

		String Billing_Frequency = premium_paid_certificateCacheModel.Billing_Frequency;

		if ((Billing_Frequency != null) && (Billing_Frequency.length() == 0)) {
			premium_paid_certificateCacheModel.Billing_Frequency = null;
		}

		premium_paid_certificateCacheModel.SumAssured = getSumAssured();

		String SumAssured = premium_paid_certificateCacheModel.SumAssured;

		if ((SumAssured != null) && (SumAssured.length() == 0)) {
			premium_paid_certificateCacheModel.SumAssured = null;
		}

		premium_paid_certificateCacheModel.Total_Pre_Paid = getTotal_Pre_Paid();

		String Total_Pre_Paid = premium_paid_certificateCacheModel.Total_Pre_Paid;

		if ((Total_Pre_Paid != null) && (Total_Pre_Paid.length() == 0)) {
			premium_paid_certificateCacheModel.Total_Pre_Paid = null;
		}

		premium_paid_certificateCacheModel.Total_Pre_Due = getTotal_Pre_Due();

		String Total_Pre_Due = premium_paid_certificateCacheModel.Total_Pre_Due;

		if ((Total_Pre_Due != null) && (Total_Pre_Due.length() == 0)) {
			premium_paid_certificateCacheModel.Total_Pre_Due = null;
		}

		premium_paid_certificateCacheModel.Coverage = getCoverage();

		String Coverage = premium_paid_certificateCacheModel.Coverage;

		if ((Coverage != null) && (Coverage.length() == 0)) {
			premium_paid_certificateCacheModel.Coverage = null;
		}

		premium_paid_certificateCacheModel.Fin_Year = getFin_Year();

		premium_paid_certificateCacheModel.LETTERCTL = getLETTERCTL();

		String LETTERCTL = premium_paid_certificateCacheModel.LETTERCTL;

		if ((LETTERCTL != null) && (LETTERCTL.length() == 0)) {
			premium_paid_certificateCacheModel.LETTERCTL = null;
		}

		premium_paid_certificateCacheModel.LOCPATH = getLOCPATH();

		String LOCPATH = premium_paid_certificateCacheModel.LOCPATH;

		if ((LOCPATH != null) && (LOCPATH.length() == 0)) {
			premium_paid_certificateCacheModel.LOCPATH = null;
		}

		premium_paid_certificateCacheModel.DOCIDNUM = getDOCIDNUM();

		String DOCIDNUM = premium_paid_certificateCacheModel.DOCIDNUM;

		if ((DOCIDNUM != null) && (DOCIDNUM.length() == 0)) {
			premium_paid_certificateCacheModel.DOCIDNUM = null;
		}

		premium_paid_certificateCacheModel.status = getStatus();

		String status = premium_paid_certificateCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			premium_paid_certificateCacheModel.status = null;
		}

		premium_paid_certificateCacheModel.lastProcessedDate = getLastProcessedDate();

		String lastProcessedDate = premium_paid_certificateCacheModel.lastProcessedDate;

		if ((lastProcessedDate != null) && (lastProcessedDate.length() == 0)) {
			premium_paid_certificateCacheModel.lastProcessedDate = null;
		}

		premium_paid_certificateCacheModel.createDate = getCreateDate();

		String createDate = premium_paid_certificateCacheModel.createDate;

		if ((createDate != null) && (createDate.length() == 0)) {
			premium_paid_certificateCacheModel.createDate = null;
		}

		premium_paid_certificateCacheModel.GLCODE = getGLCODE();

		String GLCODE = premium_paid_certificateCacheModel.GLCODE;

		if ((GLCODE != null) && (GLCODE.length() == 0)) {
			premium_paid_certificateCacheModel.GLCODE = null;
		}

		premium_paid_certificateCacheModel.BRANCH_CODE = getBRANCH_CODE();

		String BRANCH_CODE = premium_paid_certificateCacheModel.BRANCH_CODE;

		if ((BRANCH_CODE != null) && (BRANCH_CODE.length() == 0)) {
			premium_paid_certificateCacheModel.BRANCH_CODE = null;
		}

		return premium_paid_certificateCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(61);

		sb.append("{ID=");
		sb.append(getID());
		sb.append(", Financial_Year=");
		sb.append(getFinancial_Year());
		sb.append(", Generation_Date=");
		sb.append(getGeneration_Date());
		sb.append(", OwnerName=");
		sb.append(getOwnerName());
		sb.append(", Addrs1=");
		sb.append(getAddrs1());
		sb.append(", Addrs2=");
		sb.append(getAddrs2());
		sb.append(", Addrs3=");
		sb.append(getAddrs3());
		sb.append(", Addrs4=");
		sb.append(getAddrs4());
		sb.append(", Addrs5=");
		sb.append(getAddrs5());
		sb.append(", Postcode=");
		sb.append(getPostcode());
		sb.append(", MobilePhoneNo=");
		sb.append(getMobilePhoneNo());
		sb.append(", Email_ID=");
		sb.append(getEmail_ID());
		sb.append(", Client_ID=");
		sb.append(getClient_ID());
		sb.append(", Contract_Type_Desc=");
		sb.append(getContract_Type_Desc());
		sb.append(", ContrNo=");
		sb.append(getContrNo());
		sb.append(", Installment_Prem=");
		sb.append(getInstallment_Prem());
		sb.append(", Billing_Frequency=");
		sb.append(getBilling_Frequency());
		sb.append(", SumAssured=");
		sb.append(getSumAssured());
		sb.append(", Total_Pre_Paid=");
		sb.append(getTotal_Pre_Paid());
		sb.append(", Total_Pre_Due=");
		sb.append(getTotal_Pre_Due());
		sb.append(", Coverage=");
		sb.append(getCoverage());
		sb.append(", Fin_Year=");
		sb.append(getFin_Year());
		sb.append(", LETTERCTL=");
		sb.append(getLETTERCTL());
		sb.append(", LOCPATH=");
		sb.append(getLOCPATH());
		sb.append(", DOCIDNUM=");
		sb.append(getDOCIDNUM());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", lastProcessedDate=");
		sb.append(getLastProcessedDate());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", GLCODE=");
		sb.append(getGLCODE());
		sb.append(", BRANCH_CODE=");
		sb.append(getBRANCH_CODE());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(94);

		sb.append("<model><model-name>");
		sb.append("com.ifli.rapid.model.PREMIUM_PAID_CERTIFICATE");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ID</column-name><column-value><![CDATA[");
		sb.append(getID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Financial_Year</column-name><column-value><![CDATA[");
		sb.append(getFinancial_Year());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Generation_Date</column-name><column-value><![CDATA[");
		sb.append(getGeneration_Date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>OwnerName</column-name><column-value><![CDATA[");
		sb.append(getOwnerName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Addrs1</column-name><column-value><![CDATA[");
		sb.append(getAddrs1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Addrs2</column-name><column-value><![CDATA[");
		sb.append(getAddrs2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Addrs3</column-name><column-value><![CDATA[");
		sb.append(getAddrs3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Addrs4</column-name><column-value><![CDATA[");
		sb.append(getAddrs4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Addrs5</column-name><column-value><![CDATA[");
		sb.append(getAddrs5());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Postcode</column-name><column-value><![CDATA[");
		sb.append(getPostcode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MobilePhoneNo</column-name><column-value><![CDATA[");
		sb.append(getMobilePhoneNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Email_ID</column-name><column-value><![CDATA[");
		sb.append(getEmail_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Client_ID</column-name><column-value><![CDATA[");
		sb.append(getClient_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Contract_Type_Desc</column-name><column-value><![CDATA[");
		sb.append(getContract_Type_Desc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ContrNo</column-name><column-value><![CDATA[");
		sb.append(getContrNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Installment_Prem</column-name><column-value><![CDATA[");
		sb.append(getInstallment_Prem());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Billing_Frequency</column-name><column-value><![CDATA[");
		sb.append(getBilling_Frequency());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SumAssured</column-name><column-value><![CDATA[");
		sb.append(getSumAssured());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Total_Pre_Paid</column-name><column-value><![CDATA[");
		sb.append(getTotal_Pre_Paid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Total_Pre_Due</column-name><column-value><![CDATA[");
		sb.append(getTotal_Pre_Due());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Coverage</column-name><column-value><![CDATA[");
		sb.append(getCoverage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Fin_Year</column-name><column-value><![CDATA[");
		sb.append(getFin_Year());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LETTERCTL</column-name><column-value><![CDATA[");
		sb.append(getLETTERCTL());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LOCPATH</column-name><column-value><![CDATA[");
		sb.append(getLOCPATH());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DOCIDNUM</column-name><column-value><![CDATA[");
		sb.append(getDOCIDNUM());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastProcessedDate</column-name><column-value><![CDATA[");
		sb.append(getLastProcessedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>GLCODE</column-name><column-value><![CDATA[");
		sb.append(getGLCODE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>BRANCH_CODE</column-name><column-value><![CDATA[");
		sb.append(getBRANCH_CODE());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PREMIUM_PAID_CERTIFICATE.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			PREMIUM_PAID_CERTIFICATE.class
		};
	private long _ID;
	private String _Financial_Year;
	private String _originalFinancial_Year;
	private String _Generation_Date;
	private String _OwnerName;
	private String _Addrs1;
	private String _Addrs2;
	private String _Addrs3;
	private String _Addrs4;
	private String _Addrs5;
	private String _Postcode;
	private String _MobilePhoneNo;
	private String _Email_ID;
	private String _Client_ID;
	private String _Contract_Type_Desc;
	private String _ContrNo;
	private String _originalContrNo;
	private String _Installment_Prem;
	private String _Billing_Frequency;
	private String _SumAssured;
	private String _Total_Pre_Paid;
	private String _Total_Pre_Due;
	private String _Coverage;
	private int _Fin_Year;
	private String _LETTERCTL;
	private String _LOCPATH;
	private String _DOCIDNUM;
	private String _status;
	private String _lastProcessedDate;
	private String _createDate;
	private String _GLCODE;
	private String _BRANCH_CODE;
	private long _columnBitmask;
	private PREMIUM_PAID_CERTIFICATE _escapedModel;
}