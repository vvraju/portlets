/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ifli.rapid.model.impl;

import com.ifli.rapid.model.RenewalDetails;
import com.ifli.rapid.model.RenewalDetailsModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the RenewalDetails service. Represents a row in the &quot;renewal_details&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ifli.rapid.model.RenewalDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RenewalDetailsImpl}.
 * </p>
 *
 * @author Satya Kola
 * @see RenewalDetailsImpl
 * @see com.ifli.rapid.model.RenewalDetails
 * @see com.ifli.rapid.model.RenewalDetailsModel
 * @generated
 */
public class RenewalDetailsModelImpl extends BaseModelImpl<RenewalDetails>
	implements RenewalDetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a renewal details model instance should use the {@link com.ifli.rapid.model.RenewalDetails} interface instead.
	 */
	public static final String TABLE_NAME = "renewal_details";
	public static final Object[][] TABLE_COLUMNS = {
			{ "POLICY_ID", Types.BIGINT },
			{ "EMAIL_ID", Types.VARCHAR },
			{ "MOBILE_NUMBER", Types.VARCHAR },
			{ "POLICY_STATUS", Types.VARCHAR },
			{ "PRODUCT_NAME", Types.VARCHAR },
			{ "DATE", Types.TIMESTAMP },
			{ "POLICY_EXPIRY_DATE", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table renewal_details (POLICY_ID LONG not null primary key,EMAIL_ID VARCHAR(75) null,MOBILE_NUMBER VARCHAR(75) null,POLICY_STATUS VARCHAR(75) null,PRODUCT_NAME VARCHAR(75) null,DATE DATE null,POLICY_EXPIRY_DATE DATE null)";
	public static final String TABLE_SQL_DROP = "drop table renewal_details";
	public static final String ORDER_BY_JPQL = " ORDER BY renewalDetails.POLICY_ID ASC";
	public static final String ORDER_BY_SQL = " ORDER BY renewal_details.POLICY_ID ASC";
	public static final String DATA_SOURCE = "servicesDataSource";
	public static final String SESSION_FACTORY = "servicesSessionFactory";
	public static final String TX_MANAGER = "servicesTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ifli.rapid.model.RenewalDetails"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ifli.rapid.model.RenewalDetails"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ifli.rapid.model.RenewalDetails"));

	public RenewalDetailsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _POLICY_ID;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPOLICY_ID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _POLICY_ID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return RenewalDetails.class;
	}

	@Override
	public String getModelClassName() {
		return RenewalDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("POLICY_ID", getPOLICY_ID());
		attributes.put("EMAIL_ID", getEMAIL_ID());
		attributes.put("MOBILE_NUMBER", getMOBILE_NUMBER());
		attributes.put("POLICY_STATUS", getPOLICY_STATUS());
		attributes.put("PRODUCT_NAME", getPRODUCT_NAME());
		attributes.put("DATE", getDATE());
		attributes.put("POLICY_EXPIRY_DATE", getPOLICY_EXPIRY_DATE());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long POLICY_ID = (Long)attributes.get("POLICY_ID");

		if (POLICY_ID != null) {
			setPOLICY_ID(POLICY_ID);
		}

		String EMAIL_ID = (String)attributes.get("EMAIL_ID");

		if (EMAIL_ID != null) {
			setEMAIL_ID(EMAIL_ID);
		}

		String MOBILE_NUMBER = (String)attributes.get("MOBILE_NUMBER");

		if (MOBILE_NUMBER != null) {
			setMOBILE_NUMBER(MOBILE_NUMBER);
		}

		String POLICY_STATUS = (String)attributes.get("POLICY_STATUS");

		if (POLICY_STATUS != null) {
			setPOLICY_STATUS(POLICY_STATUS);
		}

		String PRODUCT_NAME = (String)attributes.get("PRODUCT_NAME");

		if (PRODUCT_NAME != null) {
			setPRODUCT_NAME(PRODUCT_NAME);
		}

		Date DATE = (Date)attributes.get("DATE");

		if (DATE != null) {
			setDATE(DATE);
		}

		Date POLICY_EXPIRY_DATE = (Date)attributes.get("POLICY_EXPIRY_DATE");

		if (POLICY_EXPIRY_DATE != null) {
			setPOLICY_EXPIRY_DATE(POLICY_EXPIRY_DATE);
		}
	}

	@Override
	public long getPOLICY_ID() {
		return _POLICY_ID;
	}

	@Override
	public void setPOLICY_ID(long POLICY_ID) {
		_POLICY_ID = POLICY_ID;
	}

	@Override
	public String getEMAIL_ID() {
		if (_EMAIL_ID == null) {
			return StringPool.BLANK;
		}
		else {
			return _EMAIL_ID;
		}
	}

	@Override
	public void setEMAIL_ID(String EMAIL_ID) {
		_EMAIL_ID = EMAIL_ID;
	}

	@Override
	public String getMOBILE_NUMBER() {
		if (_MOBILE_NUMBER == null) {
			return StringPool.BLANK;
		}
		else {
			return _MOBILE_NUMBER;
		}
	}

	@Override
	public void setMOBILE_NUMBER(String MOBILE_NUMBER) {
		_MOBILE_NUMBER = MOBILE_NUMBER;
	}

	@Override
	public String getPOLICY_STATUS() {
		if (_POLICY_STATUS == null) {
			return StringPool.BLANK;
		}
		else {
			return _POLICY_STATUS;
		}
	}

	@Override
	public void setPOLICY_STATUS(String POLICY_STATUS) {
		_POLICY_STATUS = POLICY_STATUS;
	}

	@Override
	public String getPRODUCT_NAME() {
		if (_PRODUCT_NAME == null) {
			return StringPool.BLANK;
		}
		else {
			return _PRODUCT_NAME;
		}
	}

	@Override
	public void setPRODUCT_NAME(String PRODUCT_NAME) {
		_PRODUCT_NAME = PRODUCT_NAME;
	}

	@Override
	public Date getDATE() {
		return _DATE;
	}

	@Override
	public void setDATE(Date DATE) {
		_DATE = DATE;
	}

	@Override
	public Date getPOLICY_EXPIRY_DATE() {
		return _POLICY_EXPIRY_DATE;
	}

	@Override
	public void setPOLICY_EXPIRY_DATE(Date POLICY_EXPIRY_DATE) {
		_POLICY_EXPIRY_DATE = POLICY_EXPIRY_DATE;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			RenewalDetails.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public RenewalDetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (RenewalDetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RenewalDetailsImpl renewalDetailsImpl = new RenewalDetailsImpl();

		renewalDetailsImpl.setPOLICY_ID(getPOLICY_ID());
		renewalDetailsImpl.setEMAIL_ID(getEMAIL_ID());
		renewalDetailsImpl.setMOBILE_NUMBER(getMOBILE_NUMBER());
		renewalDetailsImpl.setPOLICY_STATUS(getPOLICY_STATUS());
		renewalDetailsImpl.setPRODUCT_NAME(getPRODUCT_NAME());
		renewalDetailsImpl.setDATE(getDATE());
		renewalDetailsImpl.setPOLICY_EXPIRY_DATE(getPOLICY_EXPIRY_DATE());

		renewalDetailsImpl.resetOriginalValues();

		return renewalDetailsImpl;
	}

	@Override
	public int compareTo(RenewalDetails renewalDetails) {
		long primaryKey = renewalDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RenewalDetails)) {
			return false;
		}

		RenewalDetails renewalDetails = (RenewalDetails)obj;

		long primaryKey = renewalDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<RenewalDetails> toCacheModel() {
		RenewalDetailsCacheModel renewalDetailsCacheModel = new RenewalDetailsCacheModel();

		renewalDetailsCacheModel.POLICY_ID = getPOLICY_ID();

		renewalDetailsCacheModel.EMAIL_ID = getEMAIL_ID();

		String EMAIL_ID = renewalDetailsCacheModel.EMAIL_ID;

		if ((EMAIL_ID != null) && (EMAIL_ID.length() == 0)) {
			renewalDetailsCacheModel.EMAIL_ID = null;
		}

		renewalDetailsCacheModel.MOBILE_NUMBER = getMOBILE_NUMBER();

		String MOBILE_NUMBER = renewalDetailsCacheModel.MOBILE_NUMBER;

		if ((MOBILE_NUMBER != null) && (MOBILE_NUMBER.length() == 0)) {
			renewalDetailsCacheModel.MOBILE_NUMBER = null;
		}

		renewalDetailsCacheModel.POLICY_STATUS = getPOLICY_STATUS();

		String POLICY_STATUS = renewalDetailsCacheModel.POLICY_STATUS;

		if ((POLICY_STATUS != null) && (POLICY_STATUS.length() == 0)) {
			renewalDetailsCacheModel.POLICY_STATUS = null;
		}

		renewalDetailsCacheModel.PRODUCT_NAME = getPRODUCT_NAME();

		String PRODUCT_NAME = renewalDetailsCacheModel.PRODUCT_NAME;

		if ((PRODUCT_NAME != null) && (PRODUCT_NAME.length() == 0)) {
			renewalDetailsCacheModel.PRODUCT_NAME = null;
		}

		Date DATE = getDATE();

		if (DATE != null) {
			renewalDetailsCacheModel.DATE = DATE.getTime();
		}
		else {
			renewalDetailsCacheModel.DATE = Long.MIN_VALUE;
		}

		Date POLICY_EXPIRY_DATE = getPOLICY_EXPIRY_DATE();

		if (POLICY_EXPIRY_DATE != null) {
			renewalDetailsCacheModel.POLICY_EXPIRY_DATE = POLICY_EXPIRY_DATE.getTime();
		}
		else {
			renewalDetailsCacheModel.POLICY_EXPIRY_DATE = Long.MIN_VALUE;
		}

		return renewalDetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{POLICY_ID=");
		sb.append(getPOLICY_ID());
		sb.append(", EMAIL_ID=");
		sb.append(getEMAIL_ID());
		sb.append(", MOBILE_NUMBER=");
		sb.append(getMOBILE_NUMBER());
		sb.append(", POLICY_STATUS=");
		sb.append(getPOLICY_STATUS());
		sb.append(", PRODUCT_NAME=");
		sb.append(getPRODUCT_NAME());
		sb.append(", DATE=");
		sb.append(getDATE());
		sb.append(", POLICY_EXPIRY_DATE=");
		sb.append(getPOLICY_EXPIRY_DATE());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.ifli.rapid.model.RenewalDetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>POLICY_ID</column-name><column-value><![CDATA[");
		sb.append(getPOLICY_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>EMAIL_ID</column-name><column-value><![CDATA[");
		sb.append(getEMAIL_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MOBILE_NUMBER</column-name><column-value><![CDATA[");
		sb.append(getMOBILE_NUMBER());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>POLICY_STATUS</column-name><column-value><![CDATA[");
		sb.append(getPOLICY_STATUS());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PRODUCT_NAME</column-name><column-value><![CDATA[");
		sb.append(getPRODUCT_NAME());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DATE</column-name><column-value><![CDATA[");
		sb.append(getDATE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>POLICY_EXPIRY_DATE</column-name><column-value><![CDATA[");
		sb.append(getPOLICY_EXPIRY_DATE());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = RenewalDetails.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			RenewalDetails.class
		};
	private long _POLICY_ID;
	private String _EMAIL_ID;
	private String _MOBILE_NUMBER;
	private String _POLICY_STATUS;
	private String _PRODUCT_NAME;
	private Date _DATE;
	private Date _POLICY_EXPIRY_DATE;
	private RenewalDetails _escapedModel;
}