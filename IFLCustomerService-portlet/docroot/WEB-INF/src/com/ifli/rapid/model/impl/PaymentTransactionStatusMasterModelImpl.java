/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ifli.rapid.model.impl;

import com.ifli.rapid.model.PaymentTransactionStatusMaster;
import com.ifli.rapid.model.PaymentTransactionStatusMasterModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PaymentTransactionStatusMaster service. Represents a row in the &quot;PaymentTransactionStatusMaster&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ifli.rapid.model.PaymentTransactionStatusMasterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PaymentTransactionStatusMasterImpl}.
 * </p>
 *
 * @author Satya Kola
 * @see PaymentTransactionStatusMasterImpl
 * @see com.ifli.rapid.model.PaymentTransactionStatusMaster
 * @see com.ifli.rapid.model.PaymentTransactionStatusMasterModel
 * @generated
 */
public class PaymentTransactionStatusMasterModelImpl extends BaseModelImpl<PaymentTransactionStatusMaster>
	implements PaymentTransactionStatusMasterModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a payment transaction status master model instance should use the {@link com.ifli.rapid.model.PaymentTransactionStatusMaster} interface instead.
	 */
	public static final String TABLE_NAME = "PaymentTransactionStatusMaster";
	public static final Object[][] TABLE_COLUMNS = {
			{ "TransactionStatusID", Types.INTEGER },
			{ "StatusCode", Types.INTEGER },
			{ "StatusName", Types.VARCHAR },
			{ "StatusDesc", Types.VARCHAR },
			{ "IsActive", Types.BOOLEAN },
			{ "CreatedBy", Types.VARCHAR },
			{ "CreatedDate", Types.TIMESTAMP },
			{ "ModifiedBy", Types.VARCHAR },
			{ "ModifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table PaymentTransactionStatusMaster (TransactionStatusID INTEGER not null primary key IDENTITY,StatusCode INTEGER,StatusName VARCHAR(75) null,StatusDesc VARCHAR(75) null,IsActive BOOLEAN,CreatedBy VARCHAR(75) null,CreatedDate DATE null,ModifiedBy VARCHAR(75) null,ModifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table PaymentTransactionStatusMaster";
	public static final String ORDER_BY_JPQL = " ORDER BY paymentTransactionStatusMaster.TransactionStatusID ASC";
	public static final String ORDER_BY_SQL = " ORDER BY PaymentTransactionStatusMaster.TransactionStatusID ASC";
	public static final String DATA_SOURCE = "servicesDataSource";
	public static final String SESSION_FACTORY = "servicesSessionFactory";
	public static final String TX_MANAGER = "servicesTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ifli.rapid.model.PaymentTransactionStatusMaster"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ifli.rapid.model.PaymentTransactionStatusMaster"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ifli.rapid.model.PaymentTransactionStatusMaster"));

	public PaymentTransactionStatusMasterModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _TransactionStatusID;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setTransactionStatusID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _TransactionStatusID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PaymentTransactionStatusMaster.class;
	}

	@Override
	public String getModelClassName() {
		return PaymentTransactionStatusMaster.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("TransactionStatusID", getTransactionStatusID());
		attributes.put("StatusCode", getStatusCode());
		attributes.put("StatusName", getStatusName());
		attributes.put("StatusDesc", getStatusDesc());
		attributes.put("IsActive", getIsActive());
		attributes.put("CreatedBy", getCreatedBy());
		attributes.put("CreatedDate", getCreatedDate());
		attributes.put("ModifiedBy", getModifiedBy());
		attributes.put("ModifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer TransactionStatusID = (Integer)attributes.get(
				"TransactionStatusID");

		if (TransactionStatusID != null) {
			setTransactionStatusID(TransactionStatusID);
		}

		Integer StatusCode = (Integer)attributes.get("StatusCode");

		if (StatusCode != null) {
			setStatusCode(StatusCode);
		}

		String StatusName = (String)attributes.get("StatusName");

		if (StatusName != null) {
			setStatusName(StatusName);
		}

		String StatusDesc = (String)attributes.get("StatusDesc");

		if (StatusDesc != null) {
			setStatusDesc(StatusDesc);
		}

		Boolean IsActive = (Boolean)attributes.get("IsActive");

		if (IsActive != null) {
			setIsActive(IsActive);
		}

		String CreatedBy = (String)attributes.get("CreatedBy");

		if (CreatedBy != null) {
			setCreatedBy(CreatedBy);
		}

		Date CreatedDate = (Date)attributes.get("CreatedDate");

		if (CreatedDate != null) {
			setCreatedDate(CreatedDate);
		}

		String ModifiedBy = (String)attributes.get("ModifiedBy");

		if (ModifiedBy != null) {
			setModifiedBy(ModifiedBy);
		}

		Date ModifiedDate = (Date)attributes.get("ModifiedDate");

		if (ModifiedDate != null) {
			setModifiedDate(ModifiedDate);
		}
	}

	@Override
	public int getTransactionStatusID() {
		return _TransactionStatusID;
	}

	@Override
	public void setTransactionStatusID(int TransactionStatusID) {
		_TransactionStatusID = TransactionStatusID;
	}

	@Override
	public int getStatusCode() {
		return _StatusCode;
	}

	@Override
	public void setStatusCode(int StatusCode) {
		_StatusCode = StatusCode;
	}

	@Override
	public String getStatusName() {
		if (_StatusName == null) {
			return StringPool.BLANK;
		}
		else {
			return _StatusName;
		}
	}

	@Override
	public void setStatusName(String StatusName) {
		_StatusName = StatusName;
	}

	@Override
	public String getStatusDesc() {
		if (_StatusDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _StatusDesc;
		}
	}

	@Override
	public void setStatusDesc(String StatusDesc) {
		_StatusDesc = StatusDesc;
	}

	@Override
	public boolean getIsActive() {
		return _IsActive;
	}

	@Override
	public boolean isIsActive() {
		return _IsActive;
	}

	@Override
	public void setIsActive(boolean IsActive) {
		_IsActive = IsActive;
	}

	@Override
	public String getCreatedBy() {
		if (_CreatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _CreatedBy;
		}
	}

	@Override
	public void setCreatedBy(String CreatedBy) {
		_CreatedBy = CreatedBy;
	}

	@Override
	public Date getCreatedDate() {
		return _CreatedDate;
	}

	@Override
	public void setCreatedDate(Date CreatedDate) {
		_CreatedDate = CreatedDate;
	}

	@Override
	public String getModifiedBy() {
		if (_ModifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _ModifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String ModifiedBy) {
		_ModifiedBy = ModifiedBy;
	}

	@Override
	public Date getModifiedDate() {
		return _ModifiedDate;
	}

	@Override
	public void setModifiedDate(Date ModifiedDate) {
		_ModifiedDate = ModifiedDate;
	}

	@Override
	public PaymentTransactionStatusMaster toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PaymentTransactionStatusMaster)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PaymentTransactionStatusMasterImpl paymentTransactionStatusMasterImpl = new PaymentTransactionStatusMasterImpl();

		paymentTransactionStatusMasterImpl.setTransactionStatusID(getTransactionStatusID());
		paymentTransactionStatusMasterImpl.setStatusCode(getStatusCode());
		paymentTransactionStatusMasterImpl.setStatusName(getStatusName());
		paymentTransactionStatusMasterImpl.setStatusDesc(getStatusDesc());
		paymentTransactionStatusMasterImpl.setIsActive(getIsActive());
		paymentTransactionStatusMasterImpl.setCreatedBy(getCreatedBy());
		paymentTransactionStatusMasterImpl.setCreatedDate(getCreatedDate());
		paymentTransactionStatusMasterImpl.setModifiedBy(getModifiedBy());
		paymentTransactionStatusMasterImpl.setModifiedDate(getModifiedDate());

		paymentTransactionStatusMasterImpl.resetOriginalValues();

		return paymentTransactionStatusMasterImpl;
	}

	@Override
	public int compareTo(
		PaymentTransactionStatusMaster paymentTransactionStatusMaster) {
		int primaryKey = paymentTransactionStatusMaster.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PaymentTransactionStatusMaster)) {
			return false;
		}

		PaymentTransactionStatusMaster paymentTransactionStatusMaster = (PaymentTransactionStatusMaster)obj;

		int primaryKey = paymentTransactionStatusMaster.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<PaymentTransactionStatusMaster> toCacheModel() {
		PaymentTransactionStatusMasterCacheModel paymentTransactionStatusMasterCacheModel =
			new PaymentTransactionStatusMasterCacheModel();

		paymentTransactionStatusMasterCacheModel.TransactionStatusID = getTransactionStatusID();

		paymentTransactionStatusMasterCacheModel.StatusCode = getStatusCode();

		paymentTransactionStatusMasterCacheModel.StatusName = getStatusName();

		String StatusName = paymentTransactionStatusMasterCacheModel.StatusName;

		if ((StatusName != null) && (StatusName.length() == 0)) {
			paymentTransactionStatusMasterCacheModel.StatusName = null;
		}

		paymentTransactionStatusMasterCacheModel.StatusDesc = getStatusDesc();

		String StatusDesc = paymentTransactionStatusMasterCacheModel.StatusDesc;

		if ((StatusDesc != null) && (StatusDesc.length() == 0)) {
			paymentTransactionStatusMasterCacheModel.StatusDesc = null;
		}

		paymentTransactionStatusMasterCacheModel.IsActive = getIsActive();

		paymentTransactionStatusMasterCacheModel.CreatedBy = getCreatedBy();

		String CreatedBy = paymentTransactionStatusMasterCacheModel.CreatedBy;

		if ((CreatedBy != null) && (CreatedBy.length() == 0)) {
			paymentTransactionStatusMasterCacheModel.CreatedBy = null;
		}

		Date CreatedDate = getCreatedDate();

		if (CreatedDate != null) {
			paymentTransactionStatusMasterCacheModel.CreatedDate = CreatedDate.getTime();
		}
		else {
			paymentTransactionStatusMasterCacheModel.CreatedDate = Long.MIN_VALUE;
		}

		paymentTransactionStatusMasterCacheModel.ModifiedBy = getModifiedBy();

		String ModifiedBy = paymentTransactionStatusMasterCacheModel.ModifiedBy;

		if ((ModifiedBy != null) && (ModifiedBy.length() == 0)) {
			paymentTransactionStatusMasterCacheModel.ModifiedBy = null;
		}

		Date ModifiedDate = getModifiedDate();

		if (ModifiedDate != null) {
			paymentTransactionStatusMasterCacheModel.ModifiedDate = ModifiedDate.getTime();
		}
		else {
			paymentTransactionStatusMasterCacheModel.ModifiedDate = Long.MIN_VALUE;
		}

		return paymentTransactionStatusMasterCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{TransactionStatusID=");
		sb.append(getTransactionStatusID());
		sb.append(", StatusCode=");
		sb.append(getStatusCode());
		sb.append(", StatusName=");
		sb.append(getStatusName());
		sb.append(", StatusDesc=");
		sb.append(getStatusDesc());
		sb.append(", IsActive=");
		sb.append(getIsActive());
		sb.append(", CreatedBy=");
		sb.append(getCreatedBy());
		sb.append(", CreatedDate=");
		sb.append(getCreatedDate());
		sb.append(", ModifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", ModifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.ifli.rapid.model.PaymentTransactionStatusMaster");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>TransactionStatusID</column-name><column-value><![CDATA[");
		sb.append(getTransactionStatusID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>StatusCode</column-name><column-value><![CDATA[");
		sb.append(getStatusCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>StatusName</column-name><column-value><![CDATA[");
		sb.append(getStatusName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>StatusDesc</column-name><column-value><![CDATA[");
		sb.append(getStatusDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IsActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreatedBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreatedDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PaymentTransactionStatusMaster.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			PaymentTransactionStatusMaster.class
		};
	private int _TransactionStatusID;
	private int _StatusCode;
	private String _StatusName;
	private String _StatusDesc;
	private boolean _IsActive;
	private String _CreatedBy;
	private Date _CreatedDate;
	private String _ModifiedBy;
	private Date _ModifiedDate;
	private PaymentTransactionStatusMaster _escapedModel;
}