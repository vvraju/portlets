/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ifl.rapid.customer.model.impl;

import com.ifl.rapid.customer.model.LocMstBranchLocation;
import com.ifl.rapid.customer.model.LocMstBranchLocationModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the LocMstBranchLocation service. Represents a row in the &quot;Loc_Mst_BranchLocation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ifl.rapid.customer.model.LocMstBranchLocationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LocMstBranchLocationImpl}.
 * </p>
 *
 * @author Satya Kola
 * @see LocMstBranchLocationImpl
 * @see com.ifl.rapid.customer.model.LocMstBranchLocation
 * @see com.ifl.rapid.customer.model.LocMstBranchLocationModel
 * @generated
 */
public class LocMstBranchLocationModelImpl extends BaseModelImpl<LocMstBranchLocation>
	implements LocMstBranchLocationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a loc mst branch location model instance should use the {@link com.ifl.rapid.customer.model.LocMstBranchLocation} interface instead.
	 */
	public static final String TABLE_NAME = "Loc_Mst_BranchLocation";
	public static final Object[][] TABLE_COLUMNS = {
			{ "BranchId", Types.INTEGER },
			{ "BranchName", Types.VARCHAR },
			{ "BranchOpeningTime", Types.VARCHAR },
			{ "BranchClosingTime", Types.VARCHAR },
			{ "AddressFirstLine", Types.VARCHAR },
			{ "AddressSecondLine", Types.VARCHAR },
			{ "PrimaryContactNo", Types.VARCHAR },
			{ "OtherContactNo", Types.VARCHAR },
			{ "FaxNumber", Types.VARCHAR },
			{ "LocationId", Types.INTEGER },
			{ "LocationId_old", Types.VARCHAR },
			{ "Longitude", Types.DOUBLE },
			{ "Latitude", Types.DOUBLE },
			{ "BranchCode", Types.VARCHAR },
			{ "CreatedBy", Types.VARCHAR },
			{ "CreatedDate", Types.TIMESTAMP },
			{ "ModifiedBy", Types.VARCHAR },
			{ "ModifiedDate", Types.TIMESTAMP },
			{ "IsActive", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Loc_Mst_BranchLocation (BranchId INTEGER not null primary key IDENTITY,BranchName VARCHAR(75) null,BranchOpeningTime VARCHAR(75) null,BranchClosingTime VARCHAR(75) null,AddressFirstLine VARCHAR(75) null,AddressSecondLine VARCHAR(75) null,PrimaryContactNo VARCHAR(75) null,OtherContactNo VARCHAR(75) null,FaxNumber VARCHAR(75) null,LocationId INTEGER,LocationId_old VARCHAR(75) null,Longitude DOUBLE,Latitude DOUBLE,BranchCode VARCHAR(75) null,CreatedBy VARCHAR(75) null,CreatedDate DATE null,ModifiedBy VARCHAR(75) null,ModifiedDate DATE null,IsActive VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table Loc_Mst_BranchLocation";
	public static final String ORDER_BY_JPQL = " ORDER BY locMstBranchLocation.BranchId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Loc_Mst_BranchLocation.BranchId ASC";
	public static final String DATA_SOURCE = "servicesDataSourceService";
	public static final String SESSION_FACTORY = "servicesSessionFactoryService";
	public static final String TX_MANAGER = "servicesTransactionManagerService";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ifl.rapid.customer.model.LocMstBranchLocation"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ifl.rapid.customer.model.LocMstBranchLocation"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ifl.rapid.customer.model.LocMstBranchLocation"));

	public LocMstBranchLocationModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _BranchId;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setBranchId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _BranchId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LocMstBranchLocation.class;
	}

	@Override
	public String getModelClassName() {
		return LocMstBranchLocation.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("BranchId", getBranchId());
		attributes.put("BranchName", getBranchName());
		attributes.put("BranchOpeningTime", getBranchOpeningTime());
		attributes.put("BranchClosingTime", getBranchClosingTime());
		attributes.put("AddressFirstLine", getAddressFirstLine());
		attributes.put("AddressSecondLine", getAddressSecondLine());
		attributes.put("PrimaryContactNo", getPrimaryContactNo());
		attributes.put("OtherContactNo", getOtherContactNo());
		attributes.put("FaxNumber", getFaxNumber());
		attributes.put("LocationId", getLocationId());
		attributes.put("LocationId_old", getLocationId_old());
		attributes.put("Longitude", getLongitude());
		attributes.put("Latitude", getLatitude());
		attributes.put("BranchCode", getBranchCode());
		attributes.put("CreatedBy", getCreatedBy());
		attributes.put("CreatedDate", getCreatedDate());
		attributes.put("ModifiedBy", getModifiedBy());
		attributes.put("ModifiedDate", getModifiedDate());
		attributes.put("IsActive", getIsActive());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer BranchId = (Integer)attributes.get("BranchId");

		if (BranchId != null) {
			setBranchId(BranchId);
		}

		String BranchName = (String)attributes.get("BranchName");

		if (BranchName != null) {
			setBranchName(BranchName);
		}

		String BranchOpeningTime = (String)attributes.get("BranchOpeningTime");

		if (BranchOpeningTime != null) {
			setBranchOpeningTime(BranchOpeningTime);
		}

		String BranchClosingTime = (String)attributes.get("BranchClosingTime");

		if (BranchClosingTime != null) {
			setBranchClosingTime(BranchClosingTime);
		}

		String AddressFirstLine = (String)attributes.get("AddressFirstLine");

		if (AddressFirstLine != null) {
			setAddressFirstLine(AddressFirstLine);
		}

		String AddressSecondLine = (String)attributes.get("AddressSecondLine");

		if (AddressSecondLine != null) {
			setAddressSecondLine(AddressSecondLine);
		}

		String PrimaryContactNo = (String)attributes.get("PrimaryContactNo");

		if (PrimaryContactNo != null) {
			setPrimaryContactNo(PrimaryContactNo);
		}

		String OtherContactNo = (String)attributes.get("OtherContactNo");

		if (OtherContactNo != null) {
			setOtherContactNo(OtherContactNo);
		}

		String FaxNumber = (String)attributes.get("FaxNumber");

		if (FaxNumber != null) {
			setFaxNumber(FaxNumber);
		}

		Integer LocationId = (Integer)attributes.get("LocationId");

		if (LocationId != null) {
			setLocationId(LocationId);
		}

		String LocationId_old = (String)attributes.get("LocationId_old");

		if (LocationId_old != null) {
			setLocationId_old(LocationId_old);
		}

		Double Longitude = (Double)attributes.get("Longitude");

		if (Longitude != null) {
			setLongitude(Longitude);
		}

		Double Latitude = (Double)attributes.get("Latitude");

		if (Latitude != null) {
			setLatitude(Latitude);
		}

		String BranchCode = (String)attributes.get("BranchCode");

		if (BranchCode != null) {
			setBranchCode(BranchCode);
		}

		String CreatedBy = (String)attributes.get("CreatedBy");

		if (CreatedBy != null) {
			setCreatedBy(CreatedBy);
		}

		Date CreatedDate = (Date)attributes.get("CreatedDate");

		if (CreatedDate != null) {
			setCreatedDate(CreatedDate);
		}

		String ModifiedBy = (String)attributes.get("ModifiedBy");

		if (ModifiedBy != null) {
			setModifiedBy(ModifiedBy);
		}

		Date ModifiedDate = (Date)attributes.get("ModifiedDate");

		if (ModifiedDate != null) {
			setModifiedDate(ModifiedDate);
		}

		String IsActive = (String)attributes.get("IsActive");

		if (IsActive != null) {
			setIsActive(IsActive);
		}
	}

	@Override
	public int getBranchId() {
		return _BranchId;
	}

	@Override
	public void setBranchId(int BranchId) {
		_BranchId = BranchId;
	}

	@Override
	public String getBranchName() {
		if (_BranchName == null) {
			return StringPool.BLANK;
		}
		else {
			return _BranchName;
		}
	}

	@Override
	public void setBranchName(String BranchName) {
		_BranchName = BranchName;
	}

	@Override
	public String getBranchOpeningTime() {
		if (_BranchOpeningTime == null) {
			return StringPool.BLANK;
		}
		else {
			return _BranchOpeningTime;
		}
	}

	@Override
	public void setBranchOpeningTime(String BranchOpeningTime) {
		_BranchOpeningTime = BranchOpeningTime;
	}

	@Override
	public String getBranchClosingTime() {
		if (_BranchClosingTime == null) {
			return StringPool.BLANK;
		}
		else {
			return _BranchClosingTime;
		}
	}

	@Override
	public void setBranchClosingTime(String BranchClosingTime) {
		_BranchClosingTime = BranchClosingTime;
	}

	@Override
	public String getAddressFirstLine() {
		if (_AddressFirstLine == null) {
			return StringPool.BLANK;
		}
		else {
			return _AddressFirstLine;
		}
	}

	@Override
	public void setAddressFirstLine(String AddressFirstLine) {
		_AddressFirstLine = AddressFirstLine;
	}

	@Override
	public String getAddressSecondLine() {
		if (_AddressSecondLine == null) {
			return StringPool.BLANK;
		}
		else {
			return _AddressSecondLine;
		}
	}

	@Override
	public void setAddressSecondLine(String AddressSecondLine) {
		_AddressSecondLine = AddressSecondLine;
	}

	@Override
	public String getPrimaryContactNo() {
		if (_PrimaryContactNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _PrimaryContactNo;
		}
	}

	@Override
	public void setPrimaryContactNo(String PrimaryContactNo) {
		_PrimaryContactNo = PrimaryContactNo;
	}

	@Override
	public String getOtherContactNo() {
		if (_OtherContactNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _OtherContactNo;
		}
	}

	@Override
	public void setOtherContactNo(String OtherContactNo) {
		_OtherContactNo = OtherContactNo;
	}

	@Override
	public String getFaxNumber() {
		if (_FaxNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _FaxNumber;
		}
	}

	@Override
	public void setFaxNumber(String FaxNumber) {
		_FaxNumber = FaxNumber;
	}

	@Override
	public int getLocationId() {
		return _LocationId;
	}

	@Override
	public void setLocationId(int LocationId) {
		_LocationId = LocationId;
	}

	@Override
	public String getLocationId_old() {
		if (_LocationId_old == null) {
			return StringPool.BLANK;
		}
		else {
			return _LocationId_old;
		}
	}

	@Override
	public void setLocationId_old(String LocationId_old) {
		_LocationId_old = LocationId_old;
	}

	@Override
	public double getLongitude() {
		return _Longitude;
	}

	@Override
	public void setLongitude(double Longitude) {
		_Longitude = Longitude;
	}

	@Override
	public double getLatitude() {
		return _Latitude;
	}

	@Override
	public void setLatitude(double Latitude) {
		_Latitude = Latitude;
	}

	@Override
	public String getBranchCode() {
		if (_BranchCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _BranchCode;
		}
	}

	@Override
	public void setBranchCode(String BranchCode) {
		_BranchCode = BranchCode;
	}

	@Override
	public String getCreatedBy() {
		if (_CreatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _CreatedBy;
		}
	}

	@Override
	public void setCreatedBy(String CreatedBy) {
		_CreatedBy = CreatedBy;
	}

	@Override
	public Date getCreatedDate() {
		return _CreatedDate;
	}

	@Override
	public void setCreatedDate(Date CreatedDate) {
		_CreatedDate = CreatedDate;
	}

	@Override
	public String getModifiedBy() {
		if (_ModifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _ModifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String ModifiedBy) {
		_ModifiedBy = ModifiedBy;
	}

	@Override
	public Date getModifiedDate() {
		return _ModifiedDate;
	}

	@Override
	public void setModifiedDate(Date ModifiedDate) {
		_ModifiedDate = ModifiedDate;
	}

	@Override
	public String getIsActive() {
		if (_IsActive == null) {
			return StringPool.BLANK;
		}
		else {
			return _IsActive;
		}
	}

	@Override
	public void setIsActive(String IsActive) {
		_IsActive = IsActive;
	}

	@Override
	public LocMstBranchLocation toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LocMstBranchLocation)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LocMstBranchLocationImpl locMstBranchLocationImpl = new LocMstBranchLocationImpl();

		locMstBranchLocationImpl.setBranchId(getBranchId());
		locMstBranchLocationImpl.setBranchName(getBranchName());
		locMstBranchLocationImpl.setBranchOpeningTime(getBranchOpeningTime());
		locMstBranchLocationImpl.setBranchClosingTime(getBranchClosingTime());
		locMstBranchLocationImpl.setAddressFirstLine(getAddressFirstLine());
		locMstBranchLocationImpl.setAddressSecondLine(getAddressSecondLine());
		locMstBranchLocationImpl.setPrimaryContactNo(getPrimaryContactNo());
		locMstBranchLocationImpl.setOtherContactNo(getOtherContactNo());
		locMstBranchLocationImpl.setFaxNumber(getFaxNumber());
		locMstBranchLocationImpl.setLocationId(getLocationId());
		locMstBranchLocationImpl.setLocationId_old(getLocationId_old());
		locMstBranchLocationImpl.setLongitude(getLongitude());
		locMstBranchLocationImpl.setLatitude(getLatitude());
		locMstBranchLocationImpl.setBranchCode(getBranchCode());
		locMstBranchLocationImpl.setCreatedBy(getCreatedBy());
		locMstBranchLocationImpl.setCreatedDate(getCreatedDate());
		locMstBranchLocationImpl.setModifiedBy(getModifiedBy());
		locMstBranchLocationImpl.setModifiedDate(getModifiedDate());
		locMstBranchLocationImpl.setIsActive(getIsActive());

		locMstBranchLocationImpl.resetOriginalValues();

		return locMstBranchLocationImpl;
	}

	@Override
	public int compareTo(LocMstBranchLocation locMstBranchLocation) {
		int primaryKey = locMstBranchLocation.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LocMstBranchLocation)) {
			return false;
		}

		LocMstBranchLocation locMstBranchLocation = (LocMstBranchLocation)obj;

		int primaryKey = locMstBranchLocation.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<LocMstBranchLocation> toCacheModel() {
		LocMstBranchLocationCacheModel locMstBranchLocationCacheModel = new LocMstBranchLocationCacheModel();

		locMstBranchLocationCacheModel.BranchId = getBranchId();

		locMstBranchLocationCacheModel.BranchName = getBranchName();

		String BranchName = locMstBranchLocationCacheModel.BranchName;

		if ((BranchName != null) && (BranchName.length() == 0)) {
			locMstBranchLocationCacheModel.BranchName = null;
		}

		locMstBranchLocationCacheModel.BranchOpeningTime = getBranchOpeningTime();

		String BranchOpeningTime = locMstBranchLocationCacheModel.BranchOpeningTime;

		if ((BranchOpeningTime != null) && (BranchOpeningTime.length() == 0)) {
			locMstBranchLocationCacheModel.BranchOpeningTime = null;
		}

		locMstBranchLocationCacheModel.BranchClosingTime = getBranchClosingTime();

		String BranchClosingTime = locMstBranchLocationCacheModel.BranchClosingTime;

		if ((BranchClosingTime != null) && (BranchClosingTime.length() == 0)) {
			locMstBranchLocationCacheModel.BranchClosingTime = null;
		}

		locMstBranchLocationCacheModel.AddressFirstLine = getAddressFirstLine();

		String AddressFirstLine = locMstBranchLocationCacheModel.AddressFirstLine;

		if ((AddressFirstLine != null) && (AddressFirstLine.length() == 0)) {
			locMstBranchLocationCacheModel.AddressFirstLine = null;
		}

		locMstBranchLocationCacheModel.AddressSecondLine = getAddressSecondLine();

		String AddressSecondLine = locMstBranchLocationCacheModel.AddressSecondLine;

		if ((AddressSecondLine != null) && (AddressSecondLine.length() == 0)) {
			locMstBranchLocationCacheModel.AddressSecondLine = null;
		}

		locMstBranchLocationCacheModel.PrimaryContactNo = getPrimaryContactNo();

		String PrimaryContactNo = locMstBranchLocationCacheModel.PrimaryContactNo;

		if ((PrimaryContactNo != null) && (PrimaryContactNo.length() == 0)) {
			locMstBranchLocationCacheModel.PrimaryContactNo = null;
		}

		locMstBranchLocationCacheModel.OtherContactNo = getOtherContactNo();

		String OtherContactNo = locMstBranchLocationCacheModel.OtherContactNo;

		if ((OtherContactNo != null) && (OtherContactNo.length() == 0)) {
			locMstBranchLocationCacheModel.OtherContactNo = null;
		}

		locMstBranchLocationCacheModel.FaxNumber = getFaxNumber();

		String FaxNumber = locMstBranchLocationCacheModel.FaxNumber;

		if ((FaxNumber != null) && (FaxNumber.length() == 0)) {
			locMstBranchLocationCacheModel.FaxNumber = null;
		}

		locMstBranchLocationCacheModel.LocationId = getLocationId();

		locMstBranchLocationCacheModel.LocationId_old = getLocationId_old();

		String LocationId_old = locMstBranchLocationCacheModel.LocationId_old;

		if ((LocationId_old != null) && (LocationId_old.length() == 0)) {
			locMstBranchLocationCacheModel.LocationId_old = null;
		}

		locMstBranchLocationCacheModel.Longitude = getLongitude();

		locMstBranchLocationCacheModel.Latitude = getLatitude();

		locMstBranchLocationCacheModel.BranchCode = getBranchCode();

		String BranchCode = locMstBranchLocationCacheModel.BranchCode;

		if ((BranchCode != null) && (BranchCode.length() == 0)) {
			locMstBranchLocationCacheModel.BranchCode = null;
		}

		locMstBranchLocationCacheModel.CreatedBy = getCreatedBy();

		String CreatedBy = locMstBranchLocationCacheModel.CreatedBy;

		if ((CreatedBy != null) && (CreatedBy.length() == 0)) {
			locMstBranchLocationCacheModel.CreatedBy = null;
		}

		Date CreatedDate = getCreatedDate();

		if (CreatedDate != null) {
			locMstBranchLocationCacheModel.CreatedDate = CreatedDate.getTime();
		}
		else {
			locMstBranchLocationCacheModel.CreatedDate = Long.MIN_VALUE;
		}

		locMstBranchLocationCacheModel.ModifiedBy = getModifiedBy();

		String ModifiedBy = locMstBranchLocationCacheModel.ModifiedBy;

		if ((ModifiedBy != null) && (ModifiedBy.length() == 0)) {
			locMstBranchLocationCacheModel.ModifiedBy = null;
		}

		Date ModifiedDate = getModifiedDate();

		if (ModifiedDate != null) {
			locMstBranchLocationCacheModel.ModifiedDate = ModifiedDate.getTime();
		}
		else {
			locMstBranchLocationCacheModel.ModifiedDate = Long.MIN_VALUE;
		}

		locMstBranchLocationCacheModel.IsActive = getIsActive();

		String IsActive = locMstBranchLocationCacheModel.IsActive;

		if ((IsActive != null) && (IsActive.length() == 0)) {
			locMstBranchLocationCacheModel.IsActive = null;
		}

		return locMstBranchLocationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(39);

		sb.append("{BranchId=");
		sb.append(getBranchId());
		sb.append(", BranchName=");
		sb.append(getBranchName());
		sb.append(", BranchOpeningTime=");
		sb.append(getBranchOpeningTime());
		sb.append(", BranchClosingTime=");
		sb.append(getBranchClosingTime());
		sb.append(", AddressFirstLine=");
		sb.append(getAddressFirstLine());
		sb.append(", AddressSecondLine=");
		sb.append(getAddressSecondLine());
		sb.append(", PrimaryContactNo=");
		sb.append(getPrimaryContactNo());
		sb.append(", OtherContactNo=");
		sb.append(getOtherContactNo());
		sb.append(", FaxNumber=");
		sb.append(getFaxNumber());
		sb.append(", LocationId=");
		sb.append(getLocationId());
		sb.append(", LocationId_old=");
		sb.append(getLocationId_old());
		sb.append(", Longitude=");
		sb.append(getLongitude());
		sb.append(", Latitude=");
		sb.append(getLatitude());
		sb.append(", BranchCode=");
		sb.append(getBranchCode());
		sb.append(", CreatedBy=");
		sb.append(getCreatedBy());
		sb.append(", CreatedDate=");
		sb.append(getCreatedDate());
		sb.append(", ModifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", ModifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", IsActive=");
		sb.append(getIsActive());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(61);

		sb.append("<model><model-name>");
		sb.append("com.ifl.rapid.customer.model.LocMstBranchLocation");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>BranchId</column-name><column-value><![CDATA[");
		sb.append(getBranchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>BranchName</column-name><column-value><![CDATA[");
		sb.append(getBranchName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>BranchOpeningTime</column-name><column-value><![CDATA[");
		sb.append(getBranchOpeningTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>BranchClosingTime</column-name><column-value><![CDATA[");
		sb.append(getBranchClosingTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>AddressFirstLine</column-name><column-value><![CDATA[");
		sb.append(getAddressFirstLine());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>AddressSecondLine</column-name><column-value><![CDATA[");
		sb.append(getAddressSecondLine());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PrimaryContactNo</column-name><column-value><![CDATA[");
		sb.append(getPrimaryContactNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>OtherContactNo</column-name><column-value><![CDATA[");
		sb.append(getOtherContactNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>FaxNumber</column-name><column-value><![CDATA[");
		sb.append(getFaxNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LocationId</column-name><column-value><![CDATA[");
		sb.append(getLocationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LocationId_old</column-name><column-value><![CDATA[");
		sb.append(getLocationId_old());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Longitude</column-name><column-value><![CDATA[");
		sb.append(getLongitude());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Latitude</column-name><column-value><![CDATA[");
		sb.append(getLatitude());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>BranchCode</column-name><column-value><![CDATA[");
		sb.append(getBranchCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreatedBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreatedDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IsActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LocMstBranchLocation.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LocMstBranchLocation.class
		};
	private int _BranchId;
	private String _BranchName;
	private String _BranchOpeningTime;
	private String _BranchClosingTime;
	private String _AddressFirstLine;
	private String _AddressSecondLine;
	private String _PrimaryContactNo;
	private String _OtherContactNo;
	private String _FaxNumber;
	private int _LocationId;
	private String _LocationId_old;
	private double _Longitude;
	private double _Latitude;
	private String _BranchCode;
	private String _CreatedBy;
	private Date _CreatedDate;
	private String _ModifiedBy;
	private Date _ModifiedDate;
	private String _IsActive;
	private LocMstBranchLocation _escapedModel;
}