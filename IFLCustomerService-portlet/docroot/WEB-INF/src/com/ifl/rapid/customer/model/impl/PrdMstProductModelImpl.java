/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ifl.rapid.customer.model.impl;

import com.ifl.rapid.customer.model.PrdMstProduct;
import com.ifl.rapid.customer.model.PrdMstProductModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PrdMstProduct service. Represents a row in the &quot;Prd_Mst_Product&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ifl.rapid.customer.model.PrdMstProductModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PrdMstProductImpl}.
 * </p>
 *
 * @author Satya Kola
 * @see PrdMstProductImpl
 * @see com.ifl.rapid.customer.model.PrdMstProduct
 * @see com.ifl.rapid.customer.model.PrdMstProductModel
 * @generated
 */
public class PrdMstProductModelImpl extends BaseModelImpl<PrdMstProduct>
	implements PrdMstProductModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a prd mst product model instance should use the {@link com.ifl.rapid.customer.model.PrdMstProduct} interface instead.
	 */
	public static final String TABLE_NAME = "Prd_Mst_Product";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ProductId", Types.VARCHAR },
			{ "ProductKey", Types.VARCHAR },
			{ "DisplayOrder", Types.INTEGER },
			{ "RenewalDuration", Types.INTEGER },
			{ "ShortTermDuration", Types.INTEGER },
			{ "MinPlanTerm", Types.INTEGER },
			{ "MaxPlanTerm", Types.INTEGER },
			{ "MinSumAssured", Types.INTEGER },
			{ "MaxSumAssured", Types.INTEGER },
			{ "IsRegularPremium", Types.INTEGER },
			{ "IsLimitedPremium", Types.INTEGER },
			{ "IsSinglePremium", Types.INTEGER },
			{ "IsActive", Types.INTEGER },
			{ "CreatedBy", Types.VARCHAR },
			{ "CreatedDate", Types.TIMESTAMP },
			{ "ModifiedDate", Types.TIMESTAMP },
			{ "ModifiedBy", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Prd_Mst_Product (ProductId VARCHAR(75) not null primary key,ProductKey VARCHAR(75) null,DisplayOrder INTEGER,RenewalDuration INTEGER,ShortTermDuration INTEGER,MinPlanTerm INTEGER,MaxPlanTerm INTEGER,MinSumAssured INTEGER,MaxSumAssured INTEGER,IsRegularPremium INTEGER,IsLimitedPremium INTEGER,IsSinglePremium INTEGER,IsActive INTEGER,CreatedBy VARCHAR(75) null,CreatedDate DATE null,ModifiedDate DATE null,ModifiedBy VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table Prd_Mst_Product";
	public static final String ORDER_BY_JPQL = " ORDER BY prdMstProduct.ProductId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Prd_Mst_Product.ProductId ASC";
	public static final String DATA_SOURCE = "servicesDataSourceService";
	public static final String SESSION_FACTORY = "servicesSessionFactoryService";
	public static final String TX_MANAGER = "servicesTransactionManagerService";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ifl.rapid.customer.model.PrdMstProduct"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ifl.rapid.customer.model.PrdMstProduct"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ifl.rapid.customer.model.PrdMstProduct"));

	public PrdMstProductModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _ProductId;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setProductId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ProductId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return PrdMstProduct.class;
	}

	@Override
	public String getModelClassName() {
		return PrdMstProduct.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("ProductId", getProductId());
		attributes.put("ProductKey", getProductKey());
		attributes.put("DisplayOrder", getDisplayOrder());
		attributes.put("RenewalDuration", getRenewalDuration());
		attributes.put("ShortTermDuration", getShortTermDuration());
		attributes.put("MinPlanTerm", getMinPlanTerm());
		attributes.put("MaxPlanTerm", getMaxPlanTerm());
		attributes.put("MinSumAssured", getMinSumAssured());
		attributes.put("MaxSumAssured", getMaxSumAssured());
		attributes.put("IsRegularPremium", getIsRegularPremium());
		attributes.put("IsLimitedPremium", getIsLimitedPremium());
		attributes.put("IsSinglePremium", getIsSinglePremium());
		attributes.put("IsActive", getIsActive());
		attributes.put("CreatedBy", getCreatedBy());
		attributes.put("CreatedDate", getCreatedDate());
		attributes.put("ModifiedDate", getModifiedDate());
		attributes.put("ModifiedBy", getModifiedBy());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String ProductId = (String)attributes.get("ProductId");

		if (ProductId != null) {
			setProductId(ProductId);
		}

		String ProductKey = (String)attributes.get("ProductKey");

		if (ProductKey != null) {
			setProductKey(ProductKey);
		}

		Integer DisplayOrder = (Integer)attributes.get("DisplayOrder");

		if (DisplayOrder != null) {
			setDisplayOrder(DisplayOrder);
		}

		Integer RenewalDuration = (Integer)attributes.get("RenewalDuration");

		if (RenewalDuration != null) {
			setRenewalDuration(RenewalDuration);
		}

		Integer ShortTermDuration = (Integer)attributes.get("ShortTermDuration");

		if (ShortTermDuration != null) {
			setShortTermDuration(ShortTermDuration);
		}

		Integer MinPlanTerm = (Integer)attributes.get("MinPlanTerm");

		if (MinPlanTerm != null) {
			setMinPlanTerm(MinPlanTerm);
		}

		Integer MaxPlanTerm = (Integer)attributes.get("MaxPlanTerm");

		if (MaxPlanTerm != null) {
			setMaxPlanTerm(MaxPlanTerm);
		}

		Integer MinSumAssured = (Integer)attributes.get("MinSumAssured");

		if (MinSumAssured != null) {
			setMinSumAssured(MinSumAssured);
		}

		Integer MaxSumAssured = (Integer)attributes.get("MaxSumAssured");

		if (MaxSumAssured != null) {
			setMaxSumAssured(MaxSumAssured);
		}

		Integer IsRegularPremium = (Integer)attributes.get("IsRegularPremium");

		if (IsRegularPremium != null) {
			setIsRegularPremium(IsRegularPremium);
		}

		Integer IsLimitedPremium = (Integer)attributes.get("IsLimitedPremium");

		if (IsLimitedPremium != null) {
			setIsLimitedPremium(IsLimitedPremium);
		}

		Integer IsSinglePremium = (Integer)attributes.get("IsSinglePremium");

		if (IsSinglePremium != null) {
			setIsSinglePremium(IsSinglePremium);
		}

		Integer IsActive = (Integer)attributes.get("IsActive");

		if (IsActive != null) {
			setIsActive(IsActive);
		}

		String CreatedBy = (String)attributes.get("CreatedBy");

		if (CreatedBy != null) {
			setCreatedBy(CreatedBy);
		}

		Date CreatedDate = (Date)attributes.get("CreatedDate");

		if (CreatedDate != null) {
			setCreatedDate(CreatedDate);
		}

		Date ModifiedDate = (Date)attributes.get("ModifiedDate");

		if (ModifiedDate != null) {
			setModifiedDate(ModifiedDate);
		}

		String ModifiedBy = (String)attributes.get("ModifiedBy");

		if (ModifiedBy != null) {
			setModifiedBy(ModifiedBy);
		}
	}

	@Override
	public String getProductId() {
		if (_ProductId == null) {
			return StringPool.BLANK;
		}
		else {
			return _ProductId;
		}
	}

	@Override
	public void setProductId(String ProductId) {
		_ProductId = ProductId;
	}

	@Override
	public String getProductKey() {
		if (_ProductKey == null) {
			return StringPool.BLANK;
		}
		else {
			return _ProductKey;
		}
	}

	@Override
	public void setProductKey(String ProductKey) {
		_ProductKey = ProductKey;
	}

	@Override
	public int getDisplayOrder() {
		return _DisplayOrder;
	}

	@Override
	public void setDisplayOrder(int DisplayOrder) {
		_DisplayOrder = DisplayOrder;
	}

	@Override
	public int getRenewalDuration() {
		return _RenewalDuration;
	}

	@Override
	public void setRenewalDuration(int RenewalDuration) {
		_RenewalDuration = RenewalDuration;
	}

	@Override
	public int getShortTermDuration() {
		return _ShortTermDuration;
	}

	@Override
	public void setShortTermDuration(int ShortTermDuration) {
		_ShortTermDuration = ShortTermDuration;
	}

	@Override
	public int getMinPlanTerm() {
		return _MinPlanTerm;
	}

	@Override
	public void setMinPlanTerm(int MinPlanTerm) {
		_MinPlanTerm = MinPlanTerm;
	}

	@Override
	public int getMaxPlanTerm() {
		return _MaxPlanTerm;
	}

	@Override
	public void setMaxPlanTerm(int MaxPlanTerm) {
		_MaxPlanTerm = MaxPlanTerm;
	}

	@Override
	public int getMinSumAssured() {
		return _MinSumAssured;
	}

	@Override
	public void setMinSumAssured(int MinSumAssured) {
		_MinSumAssured = MinSumAssured;
	}

	@Override
	public int getMaxSumAssured() {
		return _MaxSumAssured;
	}

	@Override
	public void setMaxSumAssured(int MaxSumAssured) {
		_MaxSumAssured = MaxSumAssured;
	}

	@Override
	public int getIsRegularPremium() {
		return _IsRegularPremium;
	}

	@Override
	public void setIsRegularPremium(int IsRegularPremium) {
		_IsRegularPremium = IsRegularPremium;
	}

	@Override
	public int getIsLimitedPremium() {
		return _IsLimitedPremium;
	}

	@Override
	public void setIsLimitedPremium(int IsLimitedPremium) {
		_IsLimitedPremium = IsLimitedPremium;
	}

	@Override
	public int getIsSinglePremium() {
		return _IsSinglePremium;
	}

	@Override
	public void setIsSinglePremium(int IsSinglePremium) {
		_IsSinglePremium = IsSinglePremium;
	}

	@Override
	public int getIsActive() {
		return _IsActive;
	}

	@Override
	public void setIsActive(int IsActive) {
		_IsActive = IsActive;
	}

	@Override
	public String getCreatedBy() {
		if (_CreatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _CreatedBy;
		}
	}

	@Override
	public void setCreatedBy(String CreatedBy) {
		_CreatedBy = CreatedBy;
	}

	@Override
	public Date getCreatedDate() {
		return _CreatedDate;
	}

	@Override
	public void setCreatedDate(Date CreatedDate) {
		_CreatedDate = CreatedDate;
	}

	@Override
	public Date getModifiedDate() {
		return _ModifiedDate;
	}

	@Override
	public void setModifiedDate(Date ModifiedDate) {
		_ModifiedDate = ModifiedDate;
	}

	@Override
	public String getModifiedBy() {
		if (_ModifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _ModifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String ModifiedBy) {
		_ModifiedBy = ModifiedBy;
	}

	@Override
	public PrdMstProduct toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PrdMstProduct)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PrdMstProductImpl prdMstProductImpl = new PrdMstProductImpl();

		prdMstProductImpl.setProductId(getProductId());
		prdMstProductImpl.setProductKey(getProductKey());
		prdMstProductImpl.setDisplayOrder(getDisplayOrder());
		prdMstProductImpl.setRenewalDuration(getRenewalDuration());
		prdMstProductImpl.setShortTermDuration(getShortTermDuration());
		prdMstProductImpl.setMinPlanTerm(getMinPlanTerm());
		prdMstProductImpl.setMaxPlanTerm(getMaxPlanTerm());
		prdMstProductImpl.setMinSumAssured(getMinSumAssured());
		prdMstProductImpl.setMaxSumAssured(getMaxSumAssured());
		prdMstProductImpl.setIsRegularPremium(getIsRegularPremium());
		prdMstProductImpl.setIsLimitedPremium(getIsLimitedPremium());
		prdMstProductImpl.setIsSinglePremium(getIsSinglePremium());
		prdMstProductImpl.setIsActive(getIsActive());
		prdMstProductImpl.setCreatedBy(getCreatedBy());
		prdMstProductImpl.setCreatedDate(getCreatedDate());
		prdMstProductImpl.setModifiedDate(getModifiedDate());
		prdMstProductImpl.setModifiedBy(getModifiedBy());

		prdMstProductImpl.resetOriginalValues();

		return prdMstProductImpl;
	}

	@Override
	public int compareTo(PrdMstProduct prdMstProduct) {
		String primaryKey = prdMstProduct.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PrdMstProduct)) {
			return false;
		}

		PrdMstProduct prdMstProduct = (PrdMstProduct)obj;

		String primaryKey = prdMstProduct.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<PrdMstProduct> toCacheModel() {
		PrdMstProductCacheModel prdMstProductCacheModel = new PrdMstProductCacheModel();

		prdMstProductCacheModel.ProductId = getProductId();

		String ProductId = prdMstProductCacheModel.ProductId;

		if ((ProductId != null) && (ProductId.length() == 0)) {
			prdMstProductCacheModel.ProductId = null;
		}

		prdMstProductCacheModel.ProductKey = getProductKey();

		String ProductKey = prdMstProductCacheModel.ProductKey;

		if ((ProductKey != null) && (ProductKey.length() == 0)) {
			prdMstProductCacheModel.ProductKey = null;
		}

		prdMstProductCacheModel.DisplayOrder = getDisplayOrder();

		prdMstProductCacheModel.RenewalDuration = getRenewalDuration();

		prdMstProductCacheModel.ShortTermDuration = getShortTermDuration();

		prdMstProductCacheModel.MinPlanTerm = getMinPlanTerm();

		prdMstProductCacheModel.MaxPlanTerm = getMaxPlanTerm();

		prdMstProductCacheModel.MinSumAssured = getMinSumAssured();

		prdMstProductCacheModel.MaxSumAssured = getMaxSumAssured();

		prdMstProductCacheModel.IsRegularPremium = getIsRegularPremium();

		prdMstProductCacheModel.IsLimitedPremium = getIsLimitedPremium();

		prdMstProductCacheModel.IsSinglePremium = getIsSinglePremium();

		prdMstProductCacheModel.IsActive = getIsActive();

		prdMstProductCacheModel.CreatedBy = getCreatedBy();

		String CreatedBy = prdMstProductCacheModel.CreatedBy;

		if ((CreatedBy != null) && (CreatedBy.length() == 0)) {
			prdMstProductCacheModel.CreatedBy = null;
		}

		Date CreatedDate = getCreatedDate();

		if (CreatedDate != null) {
			prdMstProductCacheModel.CreatedDate = CreatedDate.getTime();
		}
		else {
			prdMstProductCacheModel.CreatedDate = Long.MIN_VALUE;
		}

		Date ModifiedDate = getModifiedDate();

		if (ModifiedDate != null) {
			prdMstProductCacheModel.ModifiedDate = ModifiedDate.getTime();
		}
		else {
			prdMstProductCacheModel.ModifiedDate = Long.MIN_VALUE;
		}

		prdMstProductCacheModel.ModifiedBy = getModifiedBy();

		String ModifiedBy = prdMstProductCacheModel.ModifiedBy;

		if ((ModifiedBy != null) && (ModifiedBy.length() == 0)) {
			prdMstProductCacheModel.ModifiedBy = null;
		}

		return prdMstProductCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(35);

		sb.append("{ProductId=");
		sb.append(getProductId());
		sb.append(", ProductKey=");
		sb.append(getProductKey());
		sb.append(", DisplayOrder=");
		sb.append(getDisplayOrder());
		sb.append(", RenewalDuration=");
		sb.append(getRenewalDuration());
		sb.append(", ShortTermDuration=");
		sb.append(getShortTermDuration());
		sb.append(", MinPlanTerm=");
		sb.append(getMinPlanTerm());
		sb.append(", MaxPlanTerm=");
		sb.append(getMaxPlanTerm());
		sb.append(", MinSumAssured=");
		sb.append(getMinSumAssured());
		sb.append(", MaxSumAssured=");
		sb.append(getMaxSumAssured());
		sb.append(", IsRegularPremium=");
		sb.append(getIsRegularPremium());
		sb.append(", IsLimitedPremium=");
		sb.append(getIsLimitedPremium());
		sb.append(", IsSinglePremium=");
		sb.append(getIsSinglePremium());
		sb.append(", IsActive=");
		sb.append(getIsActive());
		sb.append(", CreatedBy=");
		sb.append(getCreatedBy());
		sb.append(", CreatedDate=");
		sb.append(getCreatedDate());
		sb.append(", ModifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", ModifiedBy=");
		sb.append(getModifiedBy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(55);

		sb.append("<model><model-name>");
		sb.append("com.ifl.rapid.customer.model.PrdMstProduct");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ProductId</column-name><column-value><![CDATA[");
		sb.append(getProductId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ProductKey</column-name><column-value><![CDATA[");
		sb.append(getProductKey());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DisplayOrder</column-name><column-value><![CDATA[");
		sb.append(getDisplayOrder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>RenewalDuration</column-name><column-value><![CDATA[");
		sb.append(getRenewalDuration());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ShortTermDuration</column-name><column-value><![CDATA[");
		sb.append(getShortTermDuration());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MinPlanTerm</column-name><column-value><![CDATA[");
		sb.append(getMinPlanTerm());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MaxPlanTerm</column-name><column-value><![CDATA[");
		sb.append(getMaxPlanTerm());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MinSumAssured</column-name><column-value><![CDATA[");
		sb.append(getMinSumAssured());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MaxSumAssured</column-name><column-value><![CDATA[");
		sb.append(getMaxSumAssured());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IsRegularPremium</column-name><column-value><![CDATA[");
		sb.append(getIsRegularPremium());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IsLimitedPremium</column-name><column-value><![CDATA[");
		sb.append(getIsLimitedPremium());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IsSinglePremium</column-name><column-value><![CDATA[");
		sb.append(getIsSinglePremium());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IsActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreatedBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreatedDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PrdMstProduct.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			PrdMstProduct.class
		};
	private String _ProductId;
	private String _ProductKey;
	private int _DisplayOrder;
	private int _RenewalDuration;
	private int _ShortTermDuration;
	private int _MinPlanTerm;
	private int _MaxPlanTerm;
	private int _MinSumAssured;
	private int _MaxSumAssured;
	private int _IsRegularPremium;
	private int _IsLimitedPremium;
	private int _IsSinglePremium;
	private int _IsActive;
	private String _CreatedBy;
	private Date _CreatedDate;
	private Date _ModifiedDate;
	private String _ModifiedBy;
	private PrdMstProduct _escapedModel;
}