/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ifl.rapid.customer.model.impl;

import com.ifl.rapid.customer.model.QrcMstRequests;
import com.ifl.rapid.customer.model.QrcMstRequestsModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the QrcMstRequests service. Represents a row in the &quot;Qrc_Mst_Requests&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ifl.rapid.customer.model.QrcMstRequestsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link QrcMstRequestsImpl}.
 * </p>
 *
 * @author Satya Kola
 * @see QrcMstRequestsImpl
 * @see com.ifl.rapid.customer.model.QrcMstRequests
 * @see com.ifl.rapid.customer.model.QrcMstRequestsModel
 * @generated
 */
public class QrcMstRequestsModelImpl extends BaseModelImpl<QrcMstRequests>
	implements QrcMstRequestsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a qrc mst requests model instance should use the {@link com.ifl.rapid.customer.model.QrcMstRequests} interface instead.
	 */
	public static final String TABLE_NAME = "Qrc_Mst_Requests";
	public static final Object[][] TABLE_COLUMNS = {
			{ "RequestId", Types.INTEGER },
			{ "Category", Types.VARCHAR },
			{ "CallType", Types.VARCHAR },
			{ "CallSubType", Types.VARCHAR },
			{ "Keyword", Types.VARCHAR },
			{ "IsActive", Types.INTEGER },
			{ "CreatedBy", Types.VARCHAR },
			{ "CreatedDate", Types.TIMESTAMP },
			{ "ModifiedDate", Types.TIMESTAMP },
			{ "ModifiedBy", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Qrc_Mst_Requests (RequestId INTEGER not null primary key IDENTITY,Category VARCHAR(75) null,CallType VARCHAR(75) null,CallSubType VARCHAR(75) null,Keyword VARCHAR(75) null,IsActive INTEGER,CreatedBy VARCHAR(75) null,CreatedDate DATE null,ModifiedDate DATE null,ModifiedBy VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table Qrc_Mst_Requests";
	public static final String ORDER_BY_JPQL = " ORDER BY qrcMstRequests.RequestId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Qrc_Mst_Requests.RequestId ASC";
	public static final String DATA_SOURCE = "servicesDataSourceService";
	public static final String SESSION_FACTORY = "servicesSessionFactoryService";
	public static final String TX_MANAGER = "servicesTransactionManagerService";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ifl.rapid.customer.model.QrcMstRequests"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ifl.rapid.customer.model.QrcMstRequests"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ifl.rapid.customer.model.QrcMstRequests"));

	public QrcMstRequestsModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _RequestId;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setRequestId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _RequestId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return QrcMstRequests.class;
	}

	@Override
	public String getModelClassName() {
		return QrcMstRequests.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("RequestId", getRequestId());
		attributes.put("Category", getCategory());
		attributes.put("CallType", getCallType());
		attributes.put("CallSubType", getCallSubType());
		attributes.put("Keyword", getKeyword());
		attributes.put("IsActive", getIsActive());
		attributes.put("CreatedBy", getCreatedBy());
		attributes.put("CreatedDate", getCreatedDate());
		attributes.put("ModifiedDate", getModifiedDate());
		attributes.put("ModifiedBy", getModifiedBy());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer RequestId = (Integer)attributes.get("RequestId");

		if (RequestId != null) {
			setRequestId(RequestId);
		}

		String Category = (String)attributes.get("Category");

		if (Category != null) {
			setCategory(Category);
		}

		String CallType = (String)attributes.get("CallType");

		if (CallType != null) {
			setCallType(CallType);
		}

		String CallSubType = (String)attributes.get("CallSubType");

		if (CallSubType != null) {
			setCallSubType(CallSubType);
		}

		String Keyword = (String)attributes.get("Keyword");

		if (Keyword != null) {
			setKeyword(Keyword);
		}

		Integer IsActive = (Integer)attributes.get("IsActive");

		if (IsActive != null) {
			setIsActive(IsActive);
		}

		String CreatedBy = (String)attributes.get("CreatedBy");

		if (CreatedBy != null) {
			setCreatedBy(CreatedBy);
		}

		Date CreatedDate = (Date)attributes.get("CreatedDate");

		if (CreatedDate != null) {
			setCreatedDate(CreatedDate);
		}

		Date ModifiedDate = (Date)attributes.get("ModifiedDate");

		if (ModifiedDate != null) {
			setModifiedDate(ModifiedDate);
		}

		String ModifiedBy = (String)attributes.get("ModifiedBy");

		if (ModifiedBy != null) {
			setModifiedBy(ModifiedBy);
		}
	}

	@Override
	public int getRequestId() {
		return _RequestId;
	}

	@Override
	public void setRequestId(int RequestId) {
		_RequestId = RequestId;
	}

	@Override
	public String getCategory() {
		if (_Category == null) {
			return StringPool.BLANK;
		}
		else {
			return _Category;
		}
	}

	@Override
	public void setCategory(String Category) {
		_Category = Category;
	}

	@Override
	public String getCallType() {
		if (_CallType == null) {
			return StringPool.BLANK;
		}
		else {
			return _CallType;
		}
	}

	@Override
	public void setCallType(String CallType) {
		_CallType = CallType;
	}

	@Override
	public String getCallSubType() {
		if (_CallSubType == null) {
			return StringPool.BLANK;
		}
		else {
			return _CallSubType;
		}
	}

	@Override
	public void setCallSubType(String CallSubType) {
		_CallSubType = CallSubType;
	}

	@Override
	public String getKeyword() {
		if (_Keyword == null) {
			return StringPool.BLANK;
		}
		else {
			return _Keyword;
		}
	}

	@Override
	public void setKeyword(String Keyword) {
		_Keyword = Keyword;
	}

	@Override
	public int getIsActive() {
		return _IsActive;
	}

	@Override
	public void setIsActive(int IsActive) {
		_IsActive = IsActive;
	}

	@Override
	public String getCreatedBy() {
		if (_CreatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _CreatedBy;
		}
	}

	@Override
	public void setCreatedBy(String CreatedBy) {
		_CreatedBy = CreatedBy;
	}

	@Override
	public Date getCreatedDate() {
		return _CreatedDate;
	}

	@Override
	public void setCreatedDate(Date CreatedDate) {
		_CreatedDate = CreatedDate;
	}

	@Override
	public Date getModifiedDate() {
		return _ModifiedDate;
	}

	@Override
	public void setModifiedDate(Date ModifiedDate) {
		_ModifiedDate = ModifiedDate;
	}

	@Override
	public String getModifiedBy() {
		if (_ModifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _ModifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String ModifiedBy) {
		_ModifiedBy = ModifiedBy;
	}

	@Override
	public QrcMstRequests toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (QrcMstRequests)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		QrcMstRequestsImpl qrcMstRequestsImpl = new QrcMstRequestsImpl();

		qrcMstRequestsImpl.setRequestId(getRequestId());
		qrcMstRequestsImpl.setCategory(getCategory());
		qrcMstRequestsImpl.setCallType(getCallType());
		qrcMstRequestsImpl.setCallSubType(getCallSubType());
		qrcMstRequestsImpl.setKeyword(getKeyword());
		qrcMstRequestsImpl.setIsActive(getIsActive());
		qrcMstRequestsImpl.setCreatedBy(getCreatedBy());
		qrcMstRequestsImpl.setCreatedDate(getCreatedDate());
		qrcMstRequestsImpl.setModifiedDate(getModifiedDate());
		qrcMstRequestsImpl.setModifiedBy(getModifiedBy());

		qrcMstRequestsImpl.resetOriginalValues();

		return qrcMstRequestsImpl;
	}

	@Override
	public int compareTo(QrcMstRequests qrcMstRequests) {
		int primaryKey = qrcMstRequests.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof QrcMstRequests)) {
			return false;
		}

		QrcMstRequests qrcMstRequests = (QrcMstRequests)obj;

		int primaryKey = qrcMstRequests.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<QrcMstRequests> toCacheModel() {
		QrcMstRequestsCacheModel qrcMstRequestsCacheModel = new QrcMstRequestsCacheModel();

		qrcMstRequestsCacheModel.RequestId = getRequestId();

		qrcMstRequestsCacheModel.Category = getCategory();

		String Category = qrcMstRequestsCacheModel.Category;

		if ((Category != null) && (Category.length() == 0)) {
			qrcMstRequestsCacheModel.Category = null;
		}

		qrcMstRequestsCacheModel.CallType = getCallType();

		String CallType = qrcMstRequestsCacheModel.CallType;

		if ((CallType != null) && (CallType.length() == 0)) {
			qrcMstRequestsCacheModel.CallType = null;
		}

		qrcMstRequestsCacheModel.CallSubType = getCallSubType();

		String CallSubType = qrcMstRequestsCacheModel.CallSubType;

		if ((CallSubType != null) && (CallSubType.length() == 0)) {
			qrcMstRequestsCacheModel.CallSubType = null;
		}

		qrcMstRequestsCacheModel.Keyword = getKeyword();

		String Keyword = qrcMstRequestsCacheModel.Keyword;

		if ((Keyword != null) && (Keyword.length() == 0)) {
			qrcMstRequestsCacheModel.Keyword = null;
		}

		qrcMstRequestsCacheModel.IsActive = getIsActive();

		qrcMstRequestsCacheModel.CreatedBy = getCreatedBy();

		String CreatedBy = qrcMstRequestsCacheModel.CreatedBy;

		if ((CreatedBy != null) && (CreatedBy.length() == 0)) {
			qrcMstRequestsCacheModel.CreatedBy = null;
		}

		Date CreatedDate = getCreatedDate();

		if (CreatedDate != null) {
			qrcMstRequestsCacheModel.CreatedDate = CreatedDate.getTime();
		}
		else {
			qrcMstRequestsCacheModel.CreatedDate = Long.MIN_VALUE;
		}

		Date ModifiedDate = getModifiedDate();

		if (ModifiedDate != null) {
			qrcMstRequestsCacheModel.ModifiedDate = ModifiedDate.getTime();
		}
		else {
			qrcMstRequestsCacheModel.ModifiedDate = Long.MIN_VALUE;
		}

		qrcMstRequestsCacheModel.ModifiedBy = getModifiedBy();

		String ModifiedBy = qrcMstRequestsCacheModel.ModifiedBy;

		if ((ModifiedBy != null) && (ModifiedBy.length() == 0)) {
			qrcMstRequestsCacheModel.ModifiedBy = null;
		}

		return qrcMstRequestsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{RequestId=");
		sb.append(getRequestId());
		sb.append(", Category=");
		sb.append(getCategory());
		sb.append(", CallType=");
		sb.append(getCallType());
		sb.append(", CallSubType=");
		sb.append(getCallSubType());
		sb.append(", Keyword=");
		sb.append(getKeyword());
		sb.append(", IsActive=");
		sb.append(getIsActive());
		sb.append(", CreatedBy=");
		sb.append(getCreatedBy());
		sb.append(", CreatedDate=");
		sb.append(getCreatedDate());
		sb.append(", ModifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", ModifiedBy=");
		sb.append(getModifiedBy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.ifl.rapid.customer.model.QrcMstRequests");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>RequestId</column-name><column-value><![CDATA[");
		sb.append(getRequestId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Category</column-name><column-value><![CDATA[");
		sb.append(getCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CallType</column-name><column-value><![CDATA[");
		sb.append(getCallType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CallSubType</column-name><column-value><![CDATA[");
		sb.append(getCallSubType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Keyword</column-name><column-value><![CDATA[");
		sb.append(getKeyword());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IsActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreatedBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreatedDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = QrcMstRequests.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			QrcMstRequests.class
		};
	private int _RequestId;
	private String _Category;
	private String _CallType;
	private String _CallSubType;
	private String _Keyword;
	private int _IsActive;
	private String _CreatedBy;
	private Date _CreatedDate;
	private Date _ModifiedDate;
	private String _ModifiedBy;
	private QrcMstRequests _escapedModel;
}