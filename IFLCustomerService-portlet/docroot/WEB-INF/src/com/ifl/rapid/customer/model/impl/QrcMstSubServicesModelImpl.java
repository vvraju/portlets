/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ifl.rapid.customer.model.impl;

import com.ifl.rapid.customer.model.QrcMstSubServices;
import com.ifl.rapid.customer.model.QrcMstSubServicesModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the QrcMstSubServices service. Represents a row in the &quot;Qrc_Mst_Sub_Services&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ifl.rapid.customer.model.QrcMstSubServicesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link QrcMstSubServicesImpl}.
 * </p>
 *
 * @author Satya Kola
 * @see QrcMstSubServicesImpl
 * @see com.ifl.rapid.customer.model.QrcMstSubServices
 * @see com.ifl.rapid.customer.model.QrcMstSubServicesModel
 * @generated
 */
public class QrcMstSubServicesModelImpl extends BaseModelImpl<QrcMstSubServices>
	implements QrcMstSubServicesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a qrc mst sub services model instance should use the {@link com.ifl.rapid.customer.model.QrcMstSubServices} interface instead.
	 */
	public static final String TABLE_NAME = "Qrc_Mst_Sub_Services";
	public static final Object[][] TABLE_COLUMNS = {
			{ "SubServiceId", Types.INTEGER },
			{ "SubServiceName", Types.VARCHAR },
			{ "SubServiceUrl", Types.VARCHAR },
			{ "ServiceId", Types.INTEGER },
			{ "IsActive", Types.VARCHAR },
			{ "CreatedBy", Types.VARCHAR },
			{ "CreatedDate", Types.TIMESTAMP },
			{ "ModifiedBy", Types.VARCHAR },
			{ "ModifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table Qrc_Mst_Sub_Services (SubServiceId INTEGER not null primary key,SubServiceName VARCHAR(75) null,SubServiceUrl VARCHAR(75) null,ServiceId INTEGER,IsActive VARCHAR(75) null,CreatedBy VARCHAR(75) null,CreatedDate DATE null,ModifiedBy VARCHAR(75) null,ModifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table Qrc_Mst_Sub_Services";
	public static final String ORDER_BY_JPQL = " ORDER BY qrcMstSubServices.SubServiceId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Qrc_Mst_Sub_Services.SubServiceId ASC";
	public static final String DATA_SOURCE = "servicesDataSourceService";
	public static final String SESSION_FACTORY = "servicesSessionFactoryService";
	public static final String TX_MANAGER = "servicesTransactionManagerService";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ifl.rapid.customer.model.QrcMstSubServices"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ifl.rapid.customer.model.QrcMstSubServices"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ifl.rapid.customer.model.QrcMstSubServices"));

	public QrcMstSubServicesModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _SubServiceId;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setSubServiceId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _SubServiceId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return QrcMstSubServices.class;
	}

	@Override
	public String getModelClassName() {
		return QrcMstSubServices.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("SubServiceId", getSubServiceId());
		attributes.put("SubServiceName", getSubServiceName());
		attributes.put("SubServiceUrl", getSubServiceUrl());
		attributes.put("ServiceId", getServiceId());
		attributes.put("IsActive", getIsActive());
		attributes.put("CreatedBy", getCreatedBy());
		attributes.put("CreatedDate", getCreatedDate());
		attributes.put("ModifiedBy", getModifiedBy());
		attributes.put("ModifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer SubServiceId = (Integer)attributes.get("SubServiceId");

		if (SubServiceId != null) {
			setSubServiceId(SubServiceId);
		}

		String SubServiceName = (String)attributes.get("SubServiceName");

		if (SubServiceName != null) {
			setSubServiceName(SubServiceName);
		}

		String SubServiceUrl = (String)attributes.get("SubServiceUrl");

		if (SubServiceUrl != null) {
			setSubServiceUrl(SubServiceUrl);
		}

		Integer ServiceId = (Integer)attributes.get("ServiceId");

		if (ServiceId != null) {
			setServiceId(ServiceId);
		}

		String IsActive = (String)attributes.get("IsActive");

		if (IsActive != null) {
			setIsActive(IsActive);
		}

		String CreatedBy = (String)attributes.get("CreatedBy");

		if (CreatedBy != null) {
			setCreatedBy(CreatedBy);
		}

		Date CreatedDate = (Date)attributes.get("CreatedDate");

		if (CreatedDate != null) {
			setCreatedDate(CreatedDate);
		}

		String ModifiedBy = (String)attributes.get("ModifiedBy");

		if (ModifiedBy != null) {
			setModifiedBy(ModifiedBy);
		}

		Date ModifiedDate = (Date)attributes.get("ModifiedDate");

		if (ModifiedDate != null) {
			setModifiedDate(ModifiedDate);
		}
	}

	@Override
	public int getSubServiceId() {
		return _SubServiceId;
	}

	@Override
	public void setSubServiceId(int SubServiceId) {
		_SubServiceId = SubServiceId;
	}

	@Override
	public String getSubServiceName() {
		if (_SubServiceName == null) {
			return StringPool.BLANK;
		}
		else {
			return _SubServiceName;
		}
	}

	@Override
	public void setSubServiceName(String SubServiceName) {
		_SubServiceName = SubServiceName;
	}

	@Override
	public String getSubServiceUrl() {
		if (_SubServiceUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _SubServiceUrl;
		}
	}

	@Override
	public void setSubServiceUrl(String SubServiceUrl) {
		_SubServiceUrl = SubServiceUrl;
	}

	@Override
	public int getServiceId() {
		return _ServiceId;
	}

	@Override
	public void setServiceId(int ServiceId) {
		_ServiceId = ServiceId;
	}

	@Override
	public String getIsActive() {
		if (_IsActive == null) {
			return StringPool.BLANK;
		}
		else {
			return _IsActive;
		}
	}

	@Override
	public void setIsActive(String IsActive) {
		_IsActive = IsActive;
	}

	@Override
	public String getCreatedBy() {
		if (_CreatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _CreatedBy;
		}
	}

	@Override
	public void setCreatedBy(String CreatedBy) {
		_CreatedBy = CreatedBy;
	}

	@Override
	public Date getCreatedDate() {
		return _CreatedDate;
	}

	@Override
	public void setCreatedDate(Date CreatedDate) {
		_CreatedDate = CreatedDate;
	}

	@Override
	public String getModifiedBy() {
		if (_ModifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _ModifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String ModifiedBy) {
		_ModifiedBy = ModifiedBy;
	}

	@Override
	public Date getModifiedDate() {
		return _ModifiedDate;
	}

	@Override
	public void setModifiedDate(Date ModifiedDate) {
		_ModifiedDate = ModifiedDate;
	}

	@Override
	public QrcMstSubServices toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (QrcMstSubServices)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		QrcMstSubServicesImpl qrcMstSubServicesImpl = new QrcMstSubServicesImpl();

		qrcMstSubServicesImpl.setSubServiceId(getSubServiceId());
		qrcMstSubServicesImpl.setSubServiceName(getSubServiceName());
		qrcMstSubServicesImpl.setSubServiceUrl(getSubServiceUrl());
		qrcMstSubServicesImpl.setServiceId(getServiceId());
		qrcMstSubServicesImpl.setIsActive(getIsActive());
		qrcMstSubServicesImpl.setCreatedBy(getCreatedBy());
		qrcMstSubServicesImpl.setCreatedDate(getCreatedDate());
		qrcMstSubServicesImpl.setModifiedBy(getModifiedBy());
		qrcMstSubServicesImpl.setModifiedDate(getModifiedDate());

		qrcMstSubServicesImpl.resetOriginalValues();

		return qrcMstSubServicesImpl;
	}

	@Override
	public int compareTo(QrcMstSubServices qrcMstSubServices) {
		int primaryKey = qrcMstSubServices.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof QrcMstSubServices)) {
			return false;
		}

		QrcMstSubServices qrcMstSubServices = (QrcMstSubServices)obj;

		int primaryKey = qrcMstSubServices.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<QrcMstSubServices> toCacheModel() {
		QrcMstSubServicesCacheModel qrcMstSubServicesCacheModel = new QrcMstSubServicesCacheModel();

		qrcMstSubServicesCacheModel.SubServiceId = getSubServiceId();

		qrcMstSubServicesCacheModel.SubServiceName = getSubServiceName();

		String SubServiceName = qrcMstSubServicesCacheModel.SubServiceName;

		if ((SubServiceName != null) && (SubServiceName.length() == 0)) {
			qrcMstSubServicesCacheModel.SubServiceName = null;
		}

		qrcMstSubServicesCacheModel.SubServiceUrl = getSubServiceUrl();

		String SubServiceUrl = qrcMstSubServicesCacheModel.SubServiceUrl;

		if ((SubServiceUrl != null) && (SubServiceUrl.length() == 0)) {
			qrcMstSubServicesCacheModel.SubServiceUrl = null;
		}

		qrcMstSubServicesCacheModel.ServiceId = getServiceId();

		qrcMstSubServicesCacheModel.IsActive = getIsActive();

		String IsActive = qrcMstSubServicesCacheModel.IsActive;

		if ((IsActive != null) && (IsActive.length() == 0)) {
			qrcMstSubServicesCacheModel.IsActive = null;
		}

		qrcMstSubServicesCacheModel.CreatedBy = getCreatedBy();

		String CreatedBy = qrcMstSubServicesCacheModel.CreatedBy;

		if ((CreatedBy != null) && (CreatedBy.length() == 0)) {
			qrcMstSubServicesCacheModel.CreatedBy = null;
		}

		Date CreatedDate = getCreatedDate();

		if (CreatedDate != null) {
			qrcMstSubServicesCacheModel.CreatedDate = CreatedDate.getTime();
		}
		else {
			qrcMstSubServicesCacheModel.CreatedDate = Long.MIN_VALUE;
		}

		qrcMstSubServicesCacheModel.ModifiedBy = getModifiedBy();

		String ModifiedBy = qrcMstSubServicesCacheModel.ModifiedBy;

		if ((ModifiedBy != null) && (ModifiedBy.length() == 0)) {
			qrcMstSubServicesCacheModel.ModifiedBy = null;
		}

		Date ModifiedDate = getModifiedDate();

		if (ModifiedDate != null) {
			qrcMstSubServicesCacheModel.ModifiedDate = ModifiedDate.getTime();
		}
		else {
			qrcMstSubServicesCacheModel.ModifiedDate = Long.MIN_VALUE;
		}

		return qrcMstSubServicesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{SubServiceId=");
		sb.append(getSubServiceId());
		sb.append(", SubServiceName=");
		sb.append(getSubServiceName());
		sb.append(", SubServiceUrl=");
		sb.append(getSubServiceUrl());
		sb.append(", ServiceId=");
		sb.append(getServiceId());
		sb.append(", IsActive=");
		sb.append(getIsActive());
		sb.append(", CreatedBy=");
		sb.append(getCreatedBy());
		sb.append(", CreatedDate=");
		sb.append(getCreatedDate());
		sb.append(", ModifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", ModifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.ifl.rapid.customer.model.QrcMstSubServices");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>SubServiceId</column-name><column-value><![CDATA[");
		sb.append(getSubServiceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SubServiceName</column-name><column-value><![CDATA[");
		sb.append(getSubServiceName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SubServiceUrl</column-name><column-value><![CDATA[");
		sb.append(getSubServiceUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ServiceId</column-name><column-value><![CDATA[");
		sb.append(getServiceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IsActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreatedBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreatedDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = QrcMstSubServices.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			QrcMstSubServices.class
		};
	private int _SubServiceId;
	private String _SubServiceName;
	private String _SubServiceUrl;
	private int _ServiceId;
	private String _IsActive;
	private String _CreatedBy;
	private Date _CreatedDate;
	private String _ModifiedBy;
	private Date _ModifiedDate;
	private QrcMstSubServices _escapedModel;
}