/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ifl.rapid.customer.model.impl;

import com.ifl.rapid.customer.model.CRM_Trn_Contact;
import com.ifl.rapid.customer.model.CRM_Trn_ContactModel;
import com.ifl.rapid.customer.model.CRM_Trn_ContactPhotographBlobModel;
import com.ifl.rapid.customer.model.CRM_Trn_ContactSoap;
import com.ifl.rapid.customer.service.CRM_Trn_ContactLocalServiceUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Blob;
import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CRM_Trn_Contact service. Represents a row in the &quot;CRM_Trn_Contact&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ifl.rapid.customer.model.CRM_Trn_ContactModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CRM_Trn_ContactImpl}.
 * </p>
 *
 * @author Satya Kola
 * @see CRM_Trn_ContactImpl
 * @see com.ifl.rapid.customer.model.CRM_Trn_Contact
 * @see com.ifl.rapid.customer.model.CRM_Trn_ContactModel
 * @generated
 */
@JSON(strict = true)
public class CRM_Trn_ContactModelImpl extends BaseModelImpl<CRM_Trn_Contact>
	implements CRM_Trn_ContactModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a c r m_ trn_ contact model instance should use the {@link com.ifl.rapid.customer.model.CRM_Trn_Contact} interface instead.
	 */
	public static final String TABLE_NAME = "CRM_Trn_Contact";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ContactId", Types.INTEGER },
			{ "Salutation", Types.VARCHAR },
			{ "FirstName", Types.VARCHAR },
			{ "MiddleName", Types.VARCHAR },
			{ "LastName", Types.VARCHAR },
			{ "PANNo", Types.VARCHAR },
			{ "Gender", Types.VARCHAR },
			{ "BloodGroup", Types.VARCHAR },
			{ "DateOfBirth", Types.TIMESTAMP },
			{ "MaritalStatus", Types.VARCHAR },
			{ "QualificationId", Types.INTEGER },
			{ "OccupationId", Types.INTEGER },
			{ "SourceId", Types.INTEGER },
			{ "CategoryId", Types.INTEGER },
			{ "ReferredBy", Types.INTEGER },
			{ "ContactTypeId", Types.INTEGER },
			{ "DNDActivated", Types.BOOLEAN },
			{ "PoliticallyExposed", Types.BOOLEAN },
			{ "EIANumber", Types.VARCHAR },
			{ "SeqGenerator", Types.INTEGER },
			{ "ReferenceNo", Types.VARCHAR },
			{ "EIAServiceProvider", Types.VARCHAR },
			{ "AadharCardNo", Types.VARCHAR },
			{ "WeddingAnniversary", Types.TIMESTAMP },
			{ "Photograph", Types.BLOB },
			{ "CreatedBy", Types.VARCHAR },
			{ "CreatedDate", Types.TIMESTAMP },
			{ "ModifiedBy", Types.VARCHAR },
			{ "ModifiedDate", Types.TIMESTAMP },
			{ "IsActive", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table CRM_Trn_Contact (ContactId INTEGER not null primary key IDENTITY,Salutation VARCHAR(75) null,FirstName VARCHAR(75) null,MiddleName VARCHAR(75) null,LastName VARCHAR(75) null,PANNo VARCHAR(75) null,Gender VARCHAR(75) null,BloodGroup VARCHAR(75) null,DateOfBirth DATE null,MaritalStatus VARCHAR(75) null,QualificationId INTEGER,OccupationId INTEGER,SourceId INTEGER,CategoryId INTEGER,ReferredBy INTEGER,ContactTypeId INTEGER,DNDActivated BOOLEAN,PoliticallyExposed BOOLEAN,EIANumber VARCHAR(75) null,SeqGenerator INTEGER,ReferenceNo VARCHAR(75) null,EIAServiceProvider VARCHAR(75) null,AadharCardNo VARCHAR(75) null,WeddingAnniversary DATE null,Photograph BLOB,CreatedBy VARCHAR(75) null,CreatedDate DATE null,ModifiedBy VARCHAR(75) null,ModifiedDate DATE null,IsActive VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table CRM_Trn_Contact";
	public static final String ORDER_BY_JPQL = " ORDER BY crm_Trn_Contact.ContactId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CRM_Trn_Contact.ContactId ASC";
	public static final String DATA_SOURCE = "servicesDataSourceService";
	public static final String SESSION_FACTORY = "servicesSessionFactoryService";
	public static final String TX_MANAGER = "servicesTransactionManagerService";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ifl.rapid.customer.model.CRM_Trn_Contact"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ifl.rapid.customer.model.CRM_Trn_Contact"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ifl.rapid.customer.model.CRM_Trn_Contact"),
			true);
	public static long CONTACTID_COLUMN_BITMASK = 1L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CRM_Trn_Contact toModel(CRM_Trn_ContactSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CRM_Trn_Contact model = new CRM_Trn_ContactImpl();

		model.setContactId(soapModel.getContactId());
		model.setSalutation(soapModel.getSalutation());
		model.setFirstName(soapModel.getFirstName());
		model.setMiddleName(soapModel.getMiddleName());
		model.setLastName(soapModel.getLastName());
		model.setPANNo(soapModel.getPANNo());
		model.setGender(soapModel.getGender());
		model.setBloodGroup(soapModel.getBloodGroup());
		model.setDateOfBirth(soapModel.getDateOfBirth());
		model.setMaritalStatus(soapModel.getMaritalStatus());
		model.setQualificationId(soapModel.getQualificationId());
		model.setOccupationId(soapModel.getOccupationId());
		model.setSourceId(soapModel.getSourceId());
		model.setCategoryId(soapModel.getCategoryId());
		model.setReferredBy(soapModel.getReferredBy());
		model.setContactTypeId(soapModel.getContactTypeId());
		model.setDNDActivated(soapModel.getDNDActivated());
		model.setPoliticallyExposed(soapModel.getPoliticallyExposed());
		model.setEIANumber(soapModel.getEIANumber());
		model.setSeqGenerator(soapModel.getSeqGenerator());
		model.setReferenceNo(soapModel.getReferenceNo());
		model.setEIAServiceProvider(soapModel.getEIAServiceProvider());
		model.setAadharCardNo(soapModel.getAadharCardNo());
		model.setWeddingAnniversary(soapModel.getWeddingAnniversary());
		model.setPhotograph(soapModel.getPhotograph());
		model.setCreatedBy(soapModel.getCreatedBy());
		model.setCreatedDate(soapModel.getCreatedDate());
		model.setModifiedBy(soapModel.getModifiedBy());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setIsActive(soapModel.getIsActive());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CRM_Trn_Contact> toModels(
		CRM_Trn_ContactSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CRM_Trn_Contact> models = new ArrayList<CRM_Trn_Contact>(soapModels.length);

		for (CRM_Trn_ContactSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ifl.rapid.customer.model.CRM_Trn_Contact"));

	public CRM_Trn_ContactModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _ContactId;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setContactId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ContactId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CRM_Trn_Contact.class;
	}

	@Override
	public String getModelClassName() {
		return CRM_Trn_Contact.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("ContactId", getContactId());
		attributes.put("Salutation", getSalutation());
		attributes.put("FirstName", getFirstName());
		attributes.put("MiddleName", getMiddleName());
		attributes.put("LastName", getLastName());
		attributes.put("PANNo", getPANNo());
		attributes.put("Gender", getGender());
		attributes.put("BloodGroup", getBloodGroup());
		attributes.put("DateOfBirth", getDateOfBirth());
		attributes.put("MaritalStatus", getMaritalStatus());
		attributes.put("QualificationId", getQualificationId());
		attributes.put("OccupationId", getOccupationId());
		attributes.put("SourceId", getSourceId());
		attributes.put("CategoryId", getCategoryId());
		attributes.put("ReferredBy", getReferredBy());
		attributes.put("ContactTypeId", getContactTypeId());
		attributes.put("DNDActivated", getDNDActivated());
		attributes.put("PoliticallyExposed", getPoliticallyExposed());
		attributes.put("EIANumber", getEIANumber());
		attributes.put("SeqGenerator", getSeqGenerator());
		attributes.put("ReferenceNo", getReferenceNo());
		attributes.put("EIAServiceProvider", getEIAServiceProvider());
		attributes.put("AadharCardNo", getAadharCardNo());
		attributes.put("WeddingAnniversary", getWeddingAnniversary());
		attributes.put("Photograph", getPhotograph());
		attributes.put("CreatedBy", getCreatedBy());
		attributes.put("CreatedDate", getCreatedDate());
		attributes.put("ModifiedBy", getModifiedBy());
		attributes.put("ModifiedDate", getModifiedDate());
		attributes.put("IsActive", getIsActive());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer ContactId = (Integer)attributes.get("ContactId");

		if (ContactId != null) {
			setContactId(ContactId);
		}

		String Salutation = (String)attributes.get("Salutation");

		if (Salutation != null) {
			setSalutation(Salutation);
		}

		String FirstName = (String)attributes.get("FirstName");

		if (FirstName != null) {
			setFirstName(FirstName);
		}

		String MiddleName = (String)attributes.get("MiddleName");

		if (MiddleName != null) {
			setMiddleName(MiddleName);
		}

		String LastName = (String)attributes.get("LastName");

		if (LastName != null) {
			setLastName(LastName);
		}

		String PANNo = (String)attributes.get("PANNo");

		if (PANNo != null) {
			setPANNo(PANNo);
		}

		String Gender = (String)attributes.get("Gender");

		if (Gender != null) {
			setGender(Gender);
		}

		String BloodGroup = (String)attributes.get("BloodGroup");

		if (BloodGroup != null) {
			setBloodGroup(BloodGroup);
		}

		Date DateOfBirth = (Date)attributes.get("DateOfBirth");

		if (DateOfBirth != null) {
			setDateOfBirth(DateOfBirth);
		}

		String MaritalStatus = (String)attributes.get("MaritalStatus");

		if (MaritalStatus != null) {
			setMaritalStatus(MaritalStatus);
		}

		Integer QualificationId = (Integer)attributes.get("QualificationId");

		if (QualificationId != null) {
			setQualificationId(QualificationId);
		}

		Integer OccupationId = (Integer)attributes.get("OccupationId");

		if (OccupationId != null) {
			setOccupationId(OccupationId);
		}

		Integer SourceId = (Integer)attributes.get("SourceId");

		if (SourceId != null) {
			setSourceId(SourceId);
		}

		Integer CategoryId = (Integer)attributes.get("CategoryId");

		if (CategoryId != null) {
			setCategoryId(CategoryId);
		}

		Integer ReferredBy = (Integer)attributes.get("ReferredBy");

		if (ReferredBy != null) {
			setReferredBy(ReferredBy);
		}

		Integer ContactTypeId = (Integer)attributes.get("ContactTypeId");

		if (ContactTypeId != null) {
			setContactTypeId(ContactTypeId);
		}

		Boolean DNDActivated = (Boolean)attributes.get("DNDActivated");

		if (DNDActivated != null) {
			setDNDActivated(DNDActivated);
		}

		Boolean PoliticallyExposed = (Boolean)attributes.get(
				"PoliticallyExposed");

		if (PoliticallyExposed != null) {
			setPoliticallyExposed(PoliticallyExposed);
		}

		String EIANumber = (String)attributes.get("EIANumber");

		if (EIANumber != null) {
			setEIANumber(EIANumber);
		}

		Integer SeqGenerator = (Integer)attributes.get("SeqGenerator");

		if (SeqGenerator != null) {
			setSeqGenerator(SeqGenerator);
		}

		String ReferenceNo = (String)attributes.get("ReferenceNo");

		if (ReferenceNo != null) {
			setReferenceNo(ReferenceNo);
		}

		String EIAServiceProvider = (String)attributes.get("EIAServiceProvider");

		if (EIAServiceProvider != null) {
			setEIAServiceProvider(EIAServiceProvider);
		}

		String AadharCardNo = (String)attributes.get("AadharCardNo");

		if (AadharCardNo != null) {
			setAadharCardNo(AadharCardNo);
		}

		Date WeddingAnniversary = (Date)attributes.get("WeddingAnniversary");

		if (WeddingAnniversary != null) {
			setWeddingAnniversary(WeddingAnniversary);
		}

		Blob Photograph = (Blob)attributes.get("Photograph");

		if (Photograph != null) {
			setPhotograph(Photograph);
		}

		String CreatedBy = (String)attributes.get("CreatedBy");

		if (CreatedBy != null) {
			setCreatedBy(CreatedBy);
		}

		Date CreatedDate = (Date)attributes.get("CreatedDate");

		if (CreatedDate != null) {
			setCreatedDate(CreatedDate);
		}

		String ModifiedBy = (String)attributes.get("ModifiedBy");

		if (ModifiedBy != null) {
			setModifiedBy(ModifiedBy);
		}

		Date ModifiedDate = (Date)attributes.get("ModifiedDate");

		if (ModifiedDate != null) {
			setModifiedDate(ModifiedDate);
		}

		String IsActive = (String)attributes.get("IsActive");

		if (IsActive != null) {
			setIsActive(IsActive);
		}
	}

	@JSON
	@Override
	public int getContactId() {
		return _ContactId;
	}

	@Override
	public void setContactId(int ContactId) {
		_columnBitmask |= CONTACTID_COLUMN_BITMASK;

		if (!_setOriginalContactId) {
			_setOriginalContactId = true;

			_originalContactId = _ContactId;
		}

		_ContactId = ContactId;
	}

	public int getOriginalContactId() {
		return _originalContactId;
	}

	@JSON
	@Override
	public String getSalutation() {
		if (_Salutation == null) {
			return StringPool.BLANK;
		}
		else {
			return _Salutation;
		}
	}

	@Override
	public void setSalutation(String Salutation) {
		_Salutation = Salutation;
	}

	@JSON
	@Override
	public String getFirstName() {
		if (_FirstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _FirstName;
		}
	}

	@Override
	public void setFirstName(String FirstName) {
		_FirstName = FirstName;
	}

	@JSON
	@Override
	public String getMiddleName() {
		if (_MiddleName == null) {
			return StringPool.BLANK;
		}
		else {
			return _MiddleName;
		}
	}

	@Override
	public void setMiddleName(String MiddleName) {
		_MiddleName = MiddleName;
	}

	@JSON
	@Override
	public String getLastName() {
		if (_LastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _LastName;
		}
	}

	@Override
	public void setLastName(String LastName) {
		_LastName = LastName;
	}

	@JSON
	@Override
	public String getPANNo() {
		if (_PANNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _PANNo;
		}
	}

	@Override
	public void setPANNo(String PANNo) {
		_PANNo = PANNo;
	}

	@JSON
	@Override
	public String getGender() {
		if (_Gender == null) {
			return StringPool.BLANK;
		}
		else {
			return _Gender;
		}
	}

	@Override
	public void setGender(String Gender) {
		_Gender = Gender;
	}

	@JSON
	@Override
	public String getBloodGroup() {
		if (_BloodGroup == null) {
			return StringPool.BLANK;
		}
		else {
			return _BloodGroup;
		}
	}

	@Override
	public void setBloodGroup(String BloodGroup) {
		_BloodGroup = BloodGroup;
	}

	@JSON
	@Override
	public Date getDateOfBirth() {
		return _DateOfBirth;
	}

	@Override
	public void setDateOfBirth(Date DateOfBirth) {
		_DateOfBirth = DateOfBirth;
	}

	@JSON
	@Override
	public String getMaritalStatus() {
		if (_MaritalStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _MaritalStatus;
		}
	}

	@Override
	public void setMaritalStatus(String MaritalStatus) {
		_MaritalStatus = MaritalStatus;
	}

	@JSON
	@Override
	public int getQualificationId() {
		return _QualificationId;
	}

	@Override
	public void setQualificationId(int QualificationId) {
		_QualificationId = QualificationId;
	}

	@JSON
	@Override
	public int getOccupationId() {
		return _OccupationId;
	}

	@Override
	public void setOccupationId(int OccupationId) {
		_OccupationId = OccupationId;
	}

	@JSON
	@Override
	public int getSourceId() {
		return _SourceId;
	}

	@Override
	public void setSourceId(int SourceId) {
		_SourceId = SourceId;
	}

	@JSON
	@Override
	public int getCategoryId() {
		return _CategoryId;
	}

	@Override
	public void setCategoryId(int CategoryId) {
		_CategoryId = CategoryId;
	}

	@JSON
	@Override
	public int getReferredBy() {
		return _ReferredBy;
	}

	@Override
	public void setReferredBy(int ReferredBy) {
		_ReferredBy = ReferredBy;
	}

	@JSON
	@Override
	public int getContactTypeId() {
		return _ContactTypeId;
	}

	@Override
	public void setContactTypeId(int ContactTypeId) {
		_ContactTypeId = ContactTypeId;
	}

	@JSON
	@Override
	public boolean getDNDActivated() {
		return _DNDActivated;
	}

	@Override
	public boolean isDNDActivated() {
		return _DNDActivated;
	}

	@Override
	public void setDNDActivated(boolean DNDActivated) {
		_DNDActivated = DNDActivated;
	}

	@JSON
	@Override
	public boolean getPoliticallyExposed() {
		return _PoliticallyExposed;
	}

	@Override
	public boolean isPoliticallyExposed() {
		return _PoliticallyExposed;
	}

	@Override
	public void setPoliticallyExposed(boolean PoliticallyExposed) {
		_PoliticallyExposed = PoliticallyExposed;
	}

	@JSON
	@Override
	public String getEIANumber() {
		if (_EIANumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _EIANumber;
		}
	}

	@Override
	public void setEIANumber(String EIANumber) {
		_EIANumber = EIANumber;
	}

	@JSON
	@Override
	public int getSeqGenerator() {
		return _SeqGenerator;
	}

	@Override
	public void setSeqGenerator(int SeqGenerator) {
		_SeqGenerator = SeqGenerator;
	}

	@JSON
	@Override
	public String getReferenceNo() {
		if (_ReferenceNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _ReferenceNo;
		}
	}

	@Override
	public void setReferenceNo(String ReferenceNo) {
		_ReferenceNo = ReferenceNo;
	}

	@JSON
	@Override
	public String getEIAServiceProvider() {
		if (_EIAServiceProvider == null) {
			return StringPool.BLANK;
		}
		else {
			return _EIAServiceProvider;
		}
	}

	@Override
	public void setEIAServiceProvider(String EIAServiceProvider) {
		_EIAServiceProvider = EIAServiceProvider;
	}

	@JSON
	@Override
	public String getAadharCardNo() {
		if (_AadharCardNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _AadharCardNo;
		}
	}

	@Override
	public void setAadharCardNo(String AadharCardNo) {
		_AadharCardNo = AadharCardNo;
	}

	@JSON
	@Override
	public Date getWeddingAnniversary() {
		return _WeddingAnniversary;
	}

	@Override
	public void setWeddingAnniversary(Date WeddingAnniversary) {
		_WeddingAnniversary = WeddingAnniversary;
	}

	@JSON
	@Override
	public Blob getPhotograph() {
		if (_PhotographBlobModel == null) {
			try {
				_PhotographBlobModel = CRM_Trn_ContactLocalServiceUtil.getPhotographBlobModel(getPrimaryKey());
			}
			catch (Exception e) {
			}
		}

		Blob blob = null;

		if (_PhotographBlobModel != null) {
			blob = _PhotographBlobModel.getPhotographBlob();
		}

		return blob;
	}

	@Override
	public void setPhotograph(Blob Photograph) {
		if (_PhotographBlobModel == null) {
			_PhotographBlobModel = new CRM_Trn_ContactPhotographBlobModel(getPrimaryKey(),
					Photograph);
		}
		else {
			_PhotographBlobModel.setPhotographBlob(Photograph);
		}
	}

	@JSON
	@Override
	public String getCreatedBy() {
		if (_CreatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _CreatedBy;
		}
	}

	@Override
	public void setCreatedBy(String CreatedBy) {
		_CreatedBy = CreatedBy;
	}

	@JSON
	@Override
	public Date getCreatedDate() {
		return _CreatedDate;
	}

	@Override
	public void setCreatedDate(Date CreatedDate) {
		_CreatedDate = CreatedDate;
	}

	@JSON
	@Override
	public String getModifiedBy() {
		if (_ModifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _ModifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String ModifiedBy) {
		_ModifiedBy = ModifiedBy;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _ModifiedDate;
	}

	@Override
	public void setModifiedDate(Date ModifiedDate) {
		_ModifiedDate = ModifiedDate;
	}

	@JSON
	@Override
	public String getIsActive() {
		if (_IsActive == null) {
			return StringPool.BLANK;
		}
		else {
			return _IsActive;
		}
	}

	@Override
	public void setIsActive(String IsActive) {
		_IsActive = IsActive;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public CRM_Trn_Contact toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CRM_Trn_Contact)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CRM_Trn_ContactImpl crm_Trn_ContactImpl = new CRM_Trn_ContactImpl();

		crm_Trn_ContactImpl.setContactId(getContactId());
		crm_Trn_ContactImpl.setSalutation(getSalutation());
		crm_Trn_ContactImpl.setFirstName(getFirstName());
		crm_Trn_ContactImpl.setMiddleName(getMiddleName());
		crm_Trn_ContactImpl.setLastName(getLastName());
		crm_Trn_ContactImpl.setPANNo(getPANNo());
		crm_Trn_ContactImpl.setGender(getGender());
		crm_Trn_ContactImpl.setBloodGroup(getBloodGroup());
		crm_Trn_ContactImpl.setDateOfBirth(getDateOfBirth());
		crm_Trn_ContactImpl.setMaritalStatus(getMaritalStatus());
		crm_Trn_ContactImpl.setQualificationId(getQualificationId());
		crm_Trn_ContactImpl.setOccupationId(getOccupationId());
		crm_Trn_ContactImpl.setSourceId(getSourceId());
		crm_Trn_ContactImpl.setCategoryId(getCategoryId());
		crm_Trn_ContactImpl.setReferredBy(getReferredBy());
		crm_Trn_ContactImpl.setContactTypeId(getContactTypeId());
		crm_Trn_ContactImpl.setDNDActivated(getDNDActivated());
		crm_Trn_ContactImpl.setPoliticallyExposed(getPoliticallyExposed());
		crm_Trn_ContactImpl.setEIANumber(getEIANumber());
		crm_Trn_ContactImpl.setSeqGenerator(getSeqGenerator());
		crm_Trn_ContactImpl.setReferenceNo(getReferenceNo());
		crm_Trn_ContactImpl.setEIAServiceProvider(getEIAServiceProvider());
		crm_Trn_ContactImpl.setAadharCardNo(getAadharCardNo());
		crm_Trn_ContactImpl.setWeddingAnniversary(getWeddingAnniversary());
		crm_Trn_ContactImpl.setCreatedBy(getCreatedBy());
		crm_Trn_ContactImpl.setCreatedDate(getCreatedDate());
		crm_Trn_ContactImpl.setModifiedBy(getModifiedBy());
		crm_Trn_ContactImpl.setModifiedDate(getModifiedDate());
		crm_Trn_ContactImpl.setIsActive(getIsActive());

		crm_Trn_ContactImpl.resetOriginalValues();

		return crm_Trn_ContactImpl;
	}

	@Override
	public int compareTo(CRM_Trn_Contact crm_Trn_Contact) {
		int primaryKey = crm_Trn_Contact.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CRM_Trn_Contact)) {
			return false;
		}

		CRM_Trn_Contact crm_Trn_Contact = (CRM_Trn_Contact)obj;

		int primaryKey = crm_Trn_Contact.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CRM_Trn_ContactModelImpl crm_Trn_ContactModelImpl = this;

		crm_Trn_ContactModelImpl._originalContactId = crm_Trn_ContactModelImpl._ContactId;

		crm_Trn_ContactModelImpl._setOriginalContactId = false;

		crm_Trn_ContactModelImpl._PhotographBlobModel = null;

		crm_Trn_ContactModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CRM_Trn_Contact> toCacheModel() {
		CRM_Trn_ContactCacheModel crm_Trn_ContactCacheModel = new CRM_Trn_ContactCacheModel();

		crm_Trn_ContactCacheModel.ContactId = getContactId();

		crm_Trn_ContactCacheModel.Salutation = getSalutation();

		String Salutation = crm_Trn_ContactCacheModel.Salutation;

		if ((Salutation != null) && (Salutation.length() == 0)) {
			crm_Trn_ContactCacheModel.Salutation = null;
		}

		crm_Trn_ContactCacheModel.FirstName = getFirstName();

		String FirstName = crm_Trn_ContactCacheModel.FirstName;

		if ((FirstName != null) && (FirstName.length() == 0)) {
			crm_Trn_ContactCacheModel.FirstName = null;
		}

		crm_Trn_ContactCacheModel.MiddleName = getMiddleName();

		String MiddleName = crm_Trn_ContactCacheModel.MiddleName;

		if ((MiddleName != null) && (MiddleName.length() == 0)) {
			crm_Trn_ContactCacheModel.MiddleName = null;
		}

		crm_Trn_ContactCacheModel.LastName = getLastName();

		String LastName = crm_Trn_ContactCacheModel.LastName;

		if ((LastName != null) && (LastName.length() == 0)) {
			crm_Trn_ContactCacheModel.LastName = null;
		}

		crm_Trn_ContactCacheModel.PANNo = getPANNo();

		String PANNo = crm_Trn_ContactCacheModel.PANNo;

		if ((PANNo != null) && (PANNo.length() == 0)) {
			crm_Trn_ContactCacheModel.PANNo = null;
		}

		crm_Trn_ContactCacheModel.Gender = getGender();

		String Gender = crm_Trn_ContactCacheModel.Gender;

		if ((Gender != null) && (Gender.length() == 0)) {
			crm_Trn_ContactCacheModel.Gender = null;
		}

		crm_Trn_ContactCacheModel.BloodGroup = getBloodGroup();

		String BloodGroup = crm_Trn_ContactCacheModel.BloodGroup;

		if ((BloodGroup != null) && (BloodGroup.length() == 0)) {
			crm_Trn_ContactCacheModel.BloodGroup = null;
		}

		Date DateOfBirth = getDateOfBirth();

		if (DateOfBirth != null) {
			crm_Trn_ContactCacheModel.DateOfBirth = DateOfBirth.getTime();
		}
		else {
			crm_Trn_ContactCacheModel.DateOfBirth = Long.MIN_VALUE;
		}

		crm_Trn_ContactCacheModel.MaritalStatus = getMaritalStatus();

		String MaritalStatus = crm_Trn_ContactCacheModel.MaritalStatus;

		if ((MaritalStatus != null) && (MaritalStatus.length() == 0)) {
			crm_Trn_ContactCacheModel.MaritalStatus = null;
		}

		crm_Trn_ContactCacheModel.QualificationId = getQualificationId();

		crm_Trn_ContactCacheModel.OccupationId = getOccupationId();

		crm_Trn_ContactCacheModel.SourceId = getSourceId();

		crm_Trn_ContactCacheModel.CategoryId = getCategoryId();

		crm_Trn_ContactCacheModel.ReferredBy = getReferredBy();

		crm_Trn_ContactCacheModel.ContactTypeId = getContactTypeId();

		crm_Trn_ContactCacheModel.DNDActivated = getDNDActivated();

		crm_Trn_ContactCacheModel.PoliticallyExposed = getPoliticallyExposed();

		crm_Trn_ContactCacheModel.EIANumber = getEIANumber();

		String EIANumber = crm_Trn_ContactCacheModel.EIANumber;

		if ((EIANumber != null) && (EIANumber.length() == 0)) {
			crm_Trn_ContactCacheModel.EIANumber = null;
		}

		crm_Trn_ContactCacheModel.SeqGenerator = getSeqGenerator();

		crm_Trn_ContactCacheModel.ReferenceNo = getReferenceNo();

		String ReferenceNo = crm_Trn_ContactCacheModel.ReferenceNo;

		if ((ReferenceNo != null) && (ReferenceNo.length() == 0)) {
			crm_Trn_ContactCacheModel.ReferenceNo = null;
		}

		crm_Trn_ContactCacheModel.EIAServiceProvider = getEIAServiceProvider();

		String EIAServiceProvider = crm_Trn_ContactCacheModel.EIAServiceProvider;

		if ((EIAServiceProvider != null) && (EIAServiceProvider.length() == 0)) {
			crm_Trn_ContactCacheModel.EIAServiceProvider = null;
		}

		crm_Trn_ContactCacheModel.AadharCardNo = getAadharCardNo();

		String AadharCardNo = crm_Trn_ContactCacheModel.AadharCardNo;

		if ((AadharCardNo != null) && (AadharCardNo.length() == 0)) {
			crm_Trn_ContactCacheModel.AadharCardNo = null;
		}

		Date WeddingAnniversary = getWeddingAnniversary();

		if (WeddingAnniversary != null) {
			crm_Trn_ContactCacheModel.WeddingAnniversary = WeddingAnniversary.getTime();
		}
		else {
			crm_Trn_ContactCacheModel.WeddingAnniversary = Long.MIN_VALUE;
		}

		crm_Trn_ContactCacheModel.CreatedBy = getCreatedBy();

		String CreatedBy = crm_Trn_ContactCacheModel.CreatedBy;

		if ((CreatedBy != null) && (CreatedBy.length() == 0)) {
			crm_Trn_ContactCacheModel.CreatedBy = null;
		}

		Date CreatedDate = getCreatedDate();

		if (CreatedDate != null) {
			crm_Trn_ContactCacheModel.CreatedDate = CreatedDate.getTime();
		}
		else {
			crm_Trn_ContactCacheModel.CreatedDate = Long.MIN_VALUE;
		}

		crm_Trn_ContactCacheModel.ModifiedBy = getModifiedBy();

		String ModifiedBy = crm_Trn_ContactCacheModel.ModifiedBy;

		if ((ModifiedBy != null) && (ModifiedBy.length() == 0)) {
			crm_Trn_ContactCacheModel.ModifiedBy = null;
		}

		Date ModifiedDate = getModifiedDate();

		if (ModifiedDate != null) {
			crm_Trn_ContactCacheModel.ModifiedDate = ModifiedDate.getTime();
		}
		else {
			crm_Trn_ContactCacheModel.ModifiedDate = Long.MIN_VALUE;
		}

		crm_Trn_ContactCacheModel.IsActive = getIsActive();

		String IsActive = crm_Trn_ContactCacheModel.IsActive;

		if ((IsActive != null) && (IsActive.length() == 0)) {
			crm_Trn_ContactCacheModel.IsActive = null;
		}

		return crm_Trn_ContactCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(61);

		sb.append("{ContactId=");
		sb.append(getContactId());
		sb.append(", Salutation=");
		sb.append(getSalutation());
		sb.append(", FirstName=");
		sb.append(getFirstName());
		sb.append(", MiddleName=");
		sb.append(getMiddleName());
		sb.append(", LastName=");
		sb.append(getLastName());
		sb.append(", PANNo=");
		sb.append(getPANNo());
		sb.append(", Gender=");
		sb.append(getGender());
		sb.append(", BloodGroup=");
		sb.append(getBloodGroup());
		sb.append(", DateOfBirth=");
		sb.append(getDateOfBirth());
		sb.append(", MaritalStatus=");
		sb.append(getMaritalStatus());
		sb.append(", QualificationId=");
		sb.append(getQualificationId());
		sb.append(", OccupationId=");
		sb.append(getOccupationId());
		sb.append(", SourceId=");
		sb.append(getSourceId());
		sb.append(", CategoryId=");
		sb.append(getCategoryId());
		sb.append(", ReferredBy=");
		sb.append(getReferredBy());
		sb.append(", ContactTypeId=");
		sb.append(getContactTypeId());
		sb.append(", DNDActivated=");
		sb.append(getDNDActivated());
		sb.append(", PoliticallyExposed=");
		sb.append(getPoliticallyExposed());
		sb.append(", EIANumber=");
		sb.append(getEIANumber());
		sb.append(", SeqGenerator=");
		sb.append(getSeqGenerator());
		sb.append(", ReferenceNo=");
		sb.append(getReferenceNo());
		sb.append(", EIAServiceProvider=");
		sb.append(getEIAServiceProvider());
		sb.append(", AadharCardNo=");
		sb.append(getAadharCardNo());
		sb.append(", WeddingAnniversary=");
		sb.append(getWeddingAnniversary());
		sb.append(", CreatedBy=");
		sb.append(getCreatedBy());
		sb.append(", CreatedDate=");
		sb.append(getCreatedDate());
		sb.append(", ModifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", ModifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", IsActive=");
		sb.append(getIsActive());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(94);

		sb.append("<model><model-name>");
		sb.append("com.ifl.rapid.customer.model.CRM_Trn_Contact");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ContactId</column-name><column-value><![CDATA[");
		sb.append(getContactId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Salutation</column-name><column-value><![CDATA[");
		sb.append(getSalutation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>FirstName</column-name><column-value><![CDATA[");
		sb.append(getFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MiddleName</column-name><column-value><![CDATA[");
		sb.append(getMiddleName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PANNo</column-name><column-value><![CDATA[");
		sb.append(getPANNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Gender</column-name><column-value><![CDATA[");
		sb.append(getGender());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>BloodGroup</column-name><column-value><![CDATA[");
		sb.append(getBloodGroup());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DateOfBirth</column-name><column-value><![CDATA[");
		sb.append(getDateOfBirth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MaritalStatus</column-name><column-value><![CDATA[");
		sb.append(getMaritalStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>QualificationId</column-name><column-value><![CDATA[");
		sb.append(getQualificationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>OccupationId</column-name><column-value><![CDATA[");
		sb.append(getOccupationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SourceId</column-name><column-value><![CDATA[");
		sb.append(getSourceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CategoryId</column-name><column-value><![CDATA[");
		sb.append(getCategoryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ReferredBy</column-name><column-value><![CDATA[");
		sb.append(getReferredBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ContactTypeId</column-name><column-value><![CDATA[");
		sb.append(getContactTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DNDActivated</column-name><column-value><![CDATA[");
		sb.append(getDNDActivated());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PoliticallyExposed</column-name><column-value><![CDATA[");
		sb.append(getPoliticallyExposed());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>EIANumber</column-name><column-value><![CDATA[");
		sb.append(getEIANumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SeqGenerator</column-name><column-value><![CDATA[");
		sb.append(getSeqGenerator());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ReferenceNo</column-name><column-value><![CDATA[");
		sb.append(getReferenceNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>EIAServiceProvider</column-name><column-value><![CDATA[");
		sb.append(getEIAServiceProvider());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>AadharCardNo</column-name><column-value><![CDATA[");
		sb.append(getAadharCardNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>WeddingAnniversary</column-name><column-value><![CDATA[");
		sb.append(getWeddingAnniversary());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreatedBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreatedDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IsActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CRM_Trn_Contact.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CRM_Trn_Contact.class
		};
	private int _ContactId;
	private int _originalContactId;
	private boolean _setOriginalContactId;
	private String _Salutation;
	private String _FirstName;
	private String _MiddleName;
	private String _LastName;
	private String _PANNo;
	private String _Gender;
	private String _BloodGroup;
	private Date _DateOfBirth;
	private String _MaritalStatus;
	private int _QualificationId;
	private int _OccupationId;
	private int _SourceId;
	private int _CategoryId;
	private int _ReferredBy;
	private int _ContactTypeId;
	private boolean _DNDActivated;
	private boolean _PoliticallyExposed;
	private String _EIANumber;
	private int _SeqGenerator;
	private String _ReferenceNo;
	private String _EIAServiceProvider;
	private String _AadharCardNo;
	private Date _WeddingAnniversary;
	private CRM_Trn_ContactPhotographBlobModel _PhotographBlobModel;
	private String _CreatedBy;
	private Date _CreatedDate;
	private String _ModifiedBy;
	private Date _ModifiedDate;
	private String _IsActive;
	private long _columnBitmask;
	private CRM_Trn_Contact _escapedModel;
}