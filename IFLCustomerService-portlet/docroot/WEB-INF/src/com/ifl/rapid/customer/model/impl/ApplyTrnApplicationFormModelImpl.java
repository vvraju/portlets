/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.ifl.rapid.customer.model.impl;

import com.ifl.rapid.customer.model.ApplyTrnApplicationForm;
import com.ifl.rapid.customer.model.ApplyTrnApplicationFormModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ApplyTrnApplicationForm service. Represents a row in the &quot;Apply_Trn_ApplicationForm&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ifl.rapid.customer.model.ApplyTrnApplicationFormModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ApplyTrnApplicationFormImpl}.
 * </p>
 *
 * @author Satya Kola
 * @see ApplyTrnApplicationFormImpl
 * @see com.ifl.rapid.customer.model.ApplyTrnApplicationForm
 * @see com.ifl.rapid.customer.model.ApplyTrnApplicationFormModel
 * @generated
 */
public class ApplyTrnApplicationFormModelImpl extends BaseModelImpl<ApplyTrnApplicationForm>
	implements ApplyTrnApplicationFormModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a apply trn application form model instance should use the {@link com.ifl.rapid.customer.model.ApplyTrnApplicationForm} interface instead.
	 */
	public static final String TABLE_NAME = "Apply_Trn_ApplicationForm";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ApplicationFormId", Types.VARCHAR },
			{ "QuoteId", Types.VARCHAR },
			{ "ApplicationRefNo", Types.VARCHAR },
			{ "SeqGenerator", Types.INTEGER },
			{ "LTRFFormRefNo", Types.VARCHAR },
			{ "PremiumAmount", Types.DOUBLE },
			{ "IsMedicalRequired", Types.INTEGER },
			{ "ShortPremium", Types.DOUBLE },
			{ "PremiumDueDate", Types.TIMESTAMP },
			{ "PolicyNo", Types.VARCHAR },
			{ "PolicyElapsedDate", Types.TIMESTAMP },
			{ "PolicyIssueDate", Types.TIMESTAMP },
			{ "Status", Types.VARCHAR },
			{ "Completion", Types.INTEGER },
			{ "IsLapsed", Types.INTEGER },
			{ "NextPremiumDueDate", Types.TIMESTAMP },
			{ "PolicyStatus", Types.VARCHAR },
			{ "IsActive", Types.INTEGER },
			{ "CreatedBy", Types.VARCHAR },
			{ "CreatedDate", Types.TIMESTAMP },
			{ "ModifiedDate", Types.TIMESTAMP },
			{ "ModifiedBy", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Apply_Trn_ApplicationForm (ApplicationFormId VARCHAR(75) not null primary key,QuoteId VARCHAR(75) null,ApplicationRefNo VARCHAR(75) null,SeqGenerator INTEGER,LTRFFormRefNo VARCHAR(75) null,PremiumAmount DOUBLE,IsMedicalRequired INTEGER,ShortPremium DOUBLE,PremiumDueDate DATE null,PolicyNo VARCHAR(75) null,PolicyElapsedDate DATE null,PolicyIssueDate DATE null,Status VARCHAR(75) null,Completion INTEGER,IsLapsed INTEGER,NextPremiumDueDate DATE null,PolicyStatus VARCHAR(75) null,IsActive INTEGER,CreatedBy VARCHAR(75) null,CreatedDate DATE null,ModifiedDate DATE null,ModifiedBy VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table Apply_Trn_ApplicationForm";
	public static final String ORDER_BY_JPQL = " ORDER BY applyTrnApplicationForm.ApplicationFormId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Apply_Trn_ApplicationForm.ApplicationFormId ASC";
	public static final String DATA_SOURCE = "servicesDataSourceService";
	public static final String SESSION_FACTORY = "servicesSessionFactoryService";
	public static final String TX_MANAGER = "servicesTransactionManagerService";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ifl.rapid.customer.model.ApplyTrnApplicationForm"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ifl.rapid.customer.model.ApplyTrnApplicationForm"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ifl.rapid.customer.model.ApplyTrnApplicationForm"),
			true);
	public static long QUOTEID_COLUMN_BITMASK = 1L;
	public static long APPLICATIONFORMID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ifl.rapid.customer.model.ApplyTrnApplicationForm"));

	public ApplyTrnApplicationFormModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _ApplicationFormId;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setApplicationFormId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ApplicationFormId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return ApplyTrnApplicationForm.class;
	}

	@Override
	public String getModelClassName() {
		return ApplyTrnApplicationForm.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("ApplicationFormId", getApplicationFormId());
		attributes.put("QuoteId", getQuoteId());
		attributes.put("ApplicationRefNo", getApplicationRefNo());
		attributes.put("SeqGenerator", getSeqGenerator());
		attributes.put("LTRFFormRefNo", getLTRFFormRefNo());
		attributes.put("PremiumAmount", getPremiumAmount());
		attributes.put("IsMedicalRequired", getIsMedicalRequired());
		attributes.put("ShortPremium", getShortPremium());
		attributes.put("PremiumDueDate", getPremiumDueDate());
		attributes.put("PolicyNo", getPolicyNo());
		attributes.put("PolicyElapsedDate", getPolicyElapsedDate());
		attributes.put("PolicyIssueDate", getPolicyIssueDate());
		attributes.put("Status", getStatus());
		attributes.put("Completion", getCompletion());
		attributes.put("IsLapsed", getIsLapsed());
		attributes.put("NextPremiumDueDate", getNextPremiumDueDate());
		attributes.put("PolicyStatus", getPolicyStatus());
		attributes.put("IsActive", getIsActive());
		attributes.put("CreatedBy", getCreatedBy());
		attributes.put("CreatedDate", getCreatedDate());
		attributes.put("ModifiedDate", getModifiedDate());
		attributes.put("ModifiedBy", getModifiedBy());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String ApplicationFormId = (String)attributes.get("ApplicationFormId");

		if (ApplicationFormId != null) {
			setApplicationFormId(ApplicationFormId);
		}

		String QuoteId = (String)attributes.get("QuoteId");

		if (QuoteId != null) {
			setQuoteId(QuoteId);
		}

		String ApplicationRefNo = (String)attributes.get("ApplicationRefNo");

		if (ApplicationRefNo != null) {
			setApplicationRefNo(ApplicationRefNo);
		}

		Integer SeqGenerator = (Integer)attributes.get("SeqGenerator");

		if (SeqGenerator != null) {
			setSeqGenerator(SeqGenerator);
		}

		String LTRFFormRefNo = (String)attributes.get("LTRFFormRefNo");

		if (LTRFFormRefNo != null) {
			setLTRFFormRefNo(LTRFFormRefNo);
		}

		Double PremiumAmount = (Double)attributes.get("PremiumAmount");

		if (PremiumAmount != null) {
			setPremiumAmount(PremiumAmount);
		}

		Integer IsMedicalRequired = (Integer)attributes.get("IsMedicalRequired");

		if (IsMedicalRequired != null) {
			setIsMedicalRequired(IsMedicalRequired);
		}

		Double ShortPremium = (Double)attributes.get("ShortPremium");

		if (ShortPremium != null) {
			setShortPremium(ShortPremium);
		}

		Date PremiumDueDate = (Date)attributes.get("PremiumDueDate");

		if (PremiumDueDate != null) {
			setPremiumDueDate(PremiumDueDate);
		}

		String PolicyNo = (String)attributes.get("PolicyNo");

		if (PolicyNo != null) {
			setPolicyNo(PolicyNo);
		}

		Date PolicyElapsedDate = (Date)attributes.get("PolicyElapsedDate");

		if (PolicyElapsedDate != null) {
			setPolicyElapsedDate(PolicyElapsedDate);
		}

		Date PolicyIssueDate = (Date)attributes.get("PolicyIssueDate");

		if (PolicyIssueDate != null) {
			setPolicyIssueDate(PolicyIssueDate);
		}

		String Status = (String)attributes.get("Status");

		if (Status != null) {
			setStatus(Status);
		}

		Integer Completion = (Integer)attributes.get("Completion");

		if (Completion != null) {
			setCompletion(Completion);
		}

		Integer IsLapsed = (Integer)attributes.get("IsLapsed");

		if (IsLapsed != null) {
			setIsLapsed(IsLapsed);
		}

		Date NextPremiumDueDate = (Date)attributes.get("NextPremiumDueDate");

		if (NextPremiumDueDate != null) {
			setNextPremiumDueDate(NextPremiumDueDate);
		}

		String PolicyStatus = (String)attributes.get("PolicyStatus");

		if (PolicyStatus != null) {
			setPolicyStatus(PolicyStatus);
		}

		Integer IsActive = (Integer)attributes.get("IsActive");

		if (IsActive != null) {
			setIsActive(IsActive);
		}

		String CreatedBy = (String)attributes.get("CreatedBy");

		if (CreatedBy != null) {
			setCreatedBy(CreatedBy);
		}

		Date CreatedDate = (Date)attributes.get("CreatedDate");

		if (CreatedDate != null) {
			setCreatedDate(CreatedDate);
		}

		Date ModifiedDate = (Date)attributes.get("ModifiedDate");

		if (ModifiedDate != null) {
			setModifiedDate(ModifiedDate);
		}

		String ModifiedBy = (String)attributes.get("ModifiedBy");

		if (ModifiedBy != null) {
			setModifiedBy(ModifiedBy);
		}
	}

	@Override
	public String getApplicationFormId() {
		if (_ApplicationFormId == null) {
			return StringPool.BLANK;
		}
		else {
			return _ApplicationFormId;
		}
	}

	@Override
	public void setApplicationFormId(String ApplicationFormId) {
		_ApplicationFormId = ApplicationFormId;
	}

	@Override
	public String getQuoteId() {
		if (_QuoteId == null) {
			return StringPool.BLANK;
		}
		else {
			return _QuoteId;
		}
	}

	@Override
	public void setQuoteId(String QuoteId) {
		_columnBitmask |= QUOTEID_COLUMN_BITMASK;

		if (_originalQuoteId == null) {
			_originalQuoteId = _QuoteId;
		}

		_QuoteId = QuoteId;
	}

	public String getOriginalQuoteId() {
		return GetterUtil.getString(_originalQuoteId);
	}

	@Override
	public String getApplicationRefNo() {
		if (_ApplicationRefNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _ApplicationRefNo;
		}
	}

	@Override
	public void setApplicationRefNo(String ApplicationRefNo) {
		_ApplicationRefNo = ApplicationRefNo;
	}

	@Override
	public int getSeqGenerator() {
		return _SeqGenerator;
	}

	@Override
	public void setSeqGenerator(int SeqGenerator) {
		_SeqGenerator = SeqGenerator;
	}

	@Override
	public String getLTRFFormRefNo() {
		if (_LTRFFormRefNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _LTRFFormRefNo;
		}
	}

	@Override
	public void setLTRFFormRefNo(String LTRFFormRefNo) {
		_LTRFFormRefNo = LTRFFormRefNo;
	}

	@Override
	public double getPremiumAmount() {
		return _PremiumAmount;
	}

	@Override
	public void setPremiumAmount(double PremiumAmount) {
		_PremiumAmount = PremiumAmount;
	}

	@Override
	public int getIsMedicalRequired() {
		return _IsMedicalRequired;
	}

	@Override
	public void setIsMedicalRequired(int IsMedicalRequired) {
		_IsMedicalRequired = IsMedicalRequired;
	}

	@Override
	public double getShortPremium() {
		return _ShortPremium;
	}

	@Override
	public void setShortPremium(double ShortPremium) {
		_ShortPremium = ShortPremium;
	}

	@Override
	public Date getPremiumDueDate() {
		return _PremiumDueDate;
	}

	@Override
	public void setPremiumDueDate(Date PremiumDueDate) {
		_PremiumDueDate = PremiumDueDate;
	}

	@Override
	public String getPolicyNo() {
		if (_PolicyNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _PolicyNo;
		}
	}

	@Override
	public void setPolicyNo(String PolicyNo) {
		_PolicyNo = PolicyNo;
	}

	@Override
	public Date getPolicyElapsedDate() {
		return _PolicyElapsedDate;
	}

	@Override
	public void setPolicyElapsedDate(Date PolicyElapsedDate) {
		_PolicyElapsedDate = PolicyElapsedDate;
	}

	@Override
	public Date getPolicyIssueDate() {
		return _PolicyIssueDate;
	}

	@Override
	public void setPolicyIssueDate(Date PolicyIssueDate) {
		_PolicyIssueDate = PolicyIssueDate;
	}

	@Override
	public String getStatus() {
		if (_Status == null) {
			return StringPool.BLANK;
		}
		else {
			return _Status;
		}
	}

	@Override
	public void setStatus(String Status) {
		_Status = Status;
	}

	@Override
	public int getCompletion() {
		return _Completion;
	}

	@Override
	public void setCompletion(int Completion) {
		_Completion = Completion;
	}

	@Override
	public int getIsLapsed() {
		return _IsLapsed;
	}

	@Override
	public void setIsLapsed(int IsLapsed) {
		_IsLapsed = IsLapsed;
	}

	@Override
	public Date getNextPremiumDueDate() {
		return _NextPremiumDueDate;
	}

	@Override
	public void setNextPremiumDueDate(Date NextPremiumDueDate) {
		_NextPremiumDueDate = NextPremiumDueDate;
	}

	@Override
	public String getPolicyStatus() {
		if (_PolicyStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _PolicyStatus;
		}
	}

	@Override
	public void setPolicyStatus(String PolicyStatus) {
		_PolicyStatus = PolicyStatus;
	}

	@Override
	public int getIsActive() {
		return _IsActive;
	}

	@Override
	public void setIsActive(int IsActive) {
		_IsActive = IsActive;
	}

	@Override
	public String getCreatedBy() {
		if (_CreatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _CreatedBy;
		}
	}

	@Override
	public void setCreatedBy(String CreatedBy) {
		_CreatedBy = CreatedBy;
	}

	@Override
	public Date getCreatedDate() {
		return _CreatedDate;
	}

	@Override
	public void setCreatedDate(Date CreatedDate) {
		_CreatedDate = CreatedDate;
	}

	@Override
	public Date getModifiedDate() {
		return _ModifiedDate;
	}

	@Override
	public void setModifiedDate(Date ModifiedDate) {
		_ModifiedDate = ModifiedDate;
	}

	@Override
	public String getModifiedBy() {
		if (_ModifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _ModifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String ModifiedBy) {
		_ModifiedBy = ModifiedBy;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ApplyTrnApplicationForm toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ApplyTrnApplicationForm)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ApplyTrnApplicationFormImpl applyTrnApplicationFormImpl = new ApplyTrnApplicationFormImpl();

		applyTrnApplicationFormImpl.setApplicationFormId(getApplicationFormId());
		applyTrnApplicationFormImpl.setQuoteId(getQuoteId());
		applyTrnApplicationFormImpl.setApplicationRefNo(getApplicationRefNo());
		applyTrnApplicationFormImpl.setSeqGenerator(getSeqGenerator());
		applyTrnApplicationFormImpl.setLTRFFormRefNo(getLTRFFormRefNo());
		applyTrnApplicationFormImpl.setPremiumAmount(getPremiumAmount());
		applyTrnApplicationFormImpl.setIsMedicalRequired(getIsMedicalRequired());
		applyTrnApplicationFormImpl.setShortPremium(getShortPremium());
		applyTrnApplicationFormImpl.setPremiumDueDate(getPremiumDueDate());
		applyTrnApplicationFormImpl.setPolicyNo(getPolicyNo());
		applyTrnApplicationFormImpl.setPolicyElapsedDate(getPolicyElapsedDate());
		applyTrnApplicationFormImpl.setPolicyIssueDate(getPolicyIssueDate());
		applyTrnApplicationFormImpl.setStatus(getStatus());
		applyTrnApplicationFormImpl.setCompletion(getCompletion());
		applyTrnApplicationFormImpl.setIsLapsed(getIsLapsed());
		applyTrnApplicationFormImpl.setNextPremiumDueDate(getNextPremiumDueDate());
		applyTrnApplicationFormImpl.setPolicyStatus(getPolicyStatus());
		applyTrnApplicationFormImpl.setIsActive(getIsActive());
		applyTrnApplicationFormImpl.setCreatedBy(getCreatedBy());
		applyTrnApplicationFormImpl.setCreatedDate(getCreatedDate());
		applyTrnApplicationFormImpl.setModifiedDate(getModifiedDate());
		applyTrnApplicationFormImpl.setModifiedBy(getModifiedBy());

		applyTrnApplicationFormImpl.resetOriginalValues();

		return applyTrnApplicationFormImpl;
	}

	@Override
	public int compareTo(ApplyTrnApplicationForm applyTrnApplicationForm) {
		String primaryKey = applyTrnApplicationForm.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ApplyTrnApplicationForm)) {
			return false;
		}

		ApplyTrnApplicationForm applyTrnApplicationForm = (ApplyTrnApplicationForm)obj;

		String primaryKey = applyTrnApplicationForm.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		ApplyTrnApplicationFormModelImpl applyTrnApplicationFormModelImpl = this;

		applyTrnApplicationFormModelImpl._originalQuoteId = applyTrnApplicationFormModelImpl._QuoteId;

		applyTrnApplicationFormModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ApplyTrnApplicationForm> toCacheModel() {
		ApplyTrnApplicationFormCacheModel applyTrnApplicationFormCacheModel = new ApplyTrnApplicationFormCacheModel();

		applyTrnApplicationFormCacheModel.ApplicationFormId = getApplicationFormId();

		String ApplicationFormId = applyTrnApplicationFormCacheModel.ApplicationFormId;

		if ((ApplicationFormId != null) && (ApplicationFormId.length() == 0)) {
			applyTrnApplicationFormCacheModel.ApplicationFormId = null;
		}

		applyTrnApplicationFormCacheModel.QuoteId = getQuoteId();

		String QuoteId = applyTrnApplicationFormCacheModel.QuoteId;

		if ((QuoteId != null) && (QuoteId.length() == 0)) {
			applyTrnApplicationFormCacheModel.QuoteId = null;
		}

		applyTrnApplicationFormCacheModel.ApplicationRefNo = getApplicationRefNo();

		String ApplicationRefNo = applyTrnApplicationFormCacheModel.ApplicationRefNo;

		if ((ApplicationRefNo != null) && (ApplicationRefNo.length() == 0)) {
			applyTrnApplicationFormCacheModel.ApplicationRefNo = null;
		}

		applyTrnApplicationFormCacheModel.SeqGenerator = getSeqGenerator();

		applyTrnApplicationFormCacheModel.LTRFFormRefNo = getLTRFFormRefNo();

		String LTRFFormRefNo = applyTrnApplicationFormCacheModel.LTRFFormRefNo;

		if ((LTRFFormRefNo != null) && (LTRFFormRefNo.length() == 0)) {
			applyTrnApplicationFormCacheModel.LTRFFormRefNo = null;
		}

		applyTrnApplicationFormCacheModel.PremiumAmount = getPremiumAmount();

		applyTrnApplicationFormCacheModel.IsMedicalRequired = getIsMedicalRequired();

		applyTrnApplicationFormCacheModel.ShortPremium = getShortPremium();

		Date PremiumDueDate = getPremiumDueDate();

		if (PremiumDueDate != null) {
			applyTrnApplicationFormCacheModel.PremiumDueDate = PremiumDueDate.getTime();
		}
		else {
			applyTrnApplicationFormCacheModel.PremiumDueDate = Long.MIN_VALUE;
		}

		applyTrnApplicationFormCacheModel.PolicyNo = getPolicyNo();

		String PolicyNo = applyTrnApplicationFormCacheModel.PolicyNo;

		if ((PolicyNo != null) && (PolicyNo.length() == 0)) {
			applyTrnApplicationFormCacheModel.PolicyNo = null;
		}

		Date PolicyElapsedDate = getPolicyElapsedDate();

		if (PolicyElapsedDate != null) {
			applyTrnApplicationFormCacheModel.PolicyElapsedDate = PolicyElapsedDate.getTime();
		}
		else {
			applyTrnApplicationFormCacheModel.PolicyElapsedDate = Long.MIN_VALUE;
		}

		Date PolicyIssueDate = getPolicyIssueDate();

		if (PolicyIssueDate != null) {
			applyTrnApplicationFormCacheModel.PolicyIssueDate = PolicyIssueDate.getTime();
		}
		else {
			applyTrnApplicationFormCacheModel.PolicyIssueDate = Long.MIN_VALUE;
		}

		applyTrnApplicationFormCacheModel.Status = getStatus();

		String Status = applyTrnApplicationFormCacheModel.Status;

		if ((Status != null) && (Status.length() == 0)) {
			applyTrnApplicationFormCacheModel.Status = null;
		}

		applyTrnApplicationFormCacheModel.Completion = getCompletion();

		applyTrnApplicationFormCacheModel.IsLapsed = getIsLapsed();

		Date NextPremiumDueDate = getNextPremiumDueDate();

		if (NextPremiumDueDate != null) {
			applyTrnApplicationFormCacheModel.NextPremiumDueDate = NextPremiumDueDate.getTime();
		}
		else {
			applyTrnApplicationFormCacheModel.NextPremiumDueDate = Long.MIN_VALUE;
		}

		applyTrnApplicationFormCacheModel.PolicyStatus = getPolicyStatus();

		String PolicyStatus = applyTrnApplicationFormCacheModel.PolicyStatus;

		if ((PolicyStatus != null) && (PolicyStatus.length() == 0)) {
			applyTrnApplicationFormCacheModel.PolicyStatus = null;
		}

		applyTrnApplicationFormCacheModel.IsActive = getIsActive();

		applyTrnApplicationFormCacheModel.CreatedBy = getCreatedBy();

		String CreatedBy = applyTrnApplicationFormCacheModel.CreatedBy;

		if ((CreatedBy != null) && (CreatedBy.length() == 0)) {
			applyTrnApplicationFormCacheModel.CreatedBy = null;
		}

		Date CreatedDate = getCreatedDate();

		if (CreatedDate != null) {
			applyTrnApplicationFormCacheModel.CreatedDate = CreatedDate.getTime();
		}
		else {
			applyTrnApplicationFormCacheModel.CreatedDate = Long.MIN_VALUE;
		}

		Date ModifiedDate = getModifiedDate();

		if (ModifiedDate != null) {
			applyTrnApplicationFormCacheModel.ModifiedDate = ModifiedDate.getTime();
		}
		else {
			applyTrnApplicationFormCacheModel.ModifiedDate = Long.MIN_VALUE;
		}

		applyTrnApplicationFormCacheModel.ModifiedBy = getModifiedBy();

		String ModifiedBy = applyTrnApplicationFormCacheModel.ModifiedBy;

		if ((ModifiedBy != null) && (ModifiedBy.length() == 0)) {
			applyTrnApplicationFormCacheModel.ModifiedBy = null;
		}

		return applyTrnApplicationFormCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(45);

		sb.append("{ApplicationFormId=");
		sb.append(getApplicationFormId());
		sb.append(", QuoteId=");
		sb.append(getQuoteId());
		sb.append(", ApplicationRefNo=");
		sb.append(getApplicationRefNo());
		sb.append(", SeqGenerator=");
		sb.append(getSeqGenerator());
		sb.append(", LTRFFormRefNo=");
		sb.append(getLTRFFormRefNo());
		sb.append(", PremiumAmount=");
		sb.append(getPremiumAmount());
		sb.append(", IsMedicalRequired=");
		sb.append(getIsMedicalRequired());
		sb.append(", ShortPremium=");
		sb.append(getShortPremium());
		sb.append(", PremiumDueDate=");
		sb.append(getPremiumDueDate());
		sb.append(", PolicyNo=");
		sb.append(getPolicyNo());
		sb.append(", PolicyElapsedDate=");
		sb.append(getPolicyElapsedDate());
		sb.append(", PolicyIssueDate=");
		sb.append(getPolicyIssueDate());
		sb.append(", Status=");
		sb.append(getStatus());
		sb.append(", Completion=");
		sb.append(getCompletion());
		sb.append(", IsLapsed=");
		sb.append(getIsLapsed());
		sb.append(", NextPremiumDueDate=");
		sb.append(getNextPremiumDueDate());
		sb.append(", PolicyStatus=");
		sb.append(getPolicyStatus());
		sb.append(", IsActive=");
		sb.append(getIsActive());
		sb.append(", CreatedBy=");
		sb.append(getCreatedBy());
		sb.append(", CreatedDate=");
		sb.append(getCreatedDate());
		sb.append(", ModifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", ModifiedBy=");
		sb.append(getModifiedBy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(70);

		sb.append("<model><model-name>");
		sb.append("com.ifl.rapid.customer.model.ApplyTrnApplicationForm");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ApplicationFormId</column-name><column-value><![CDATA[");
		sb.append(getApplicationFormId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>QuoteId</column-name><column-value><![CDATA[");
		sb.append(getQuoteId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ApplicationRefNo</column-name><column-value><![CDATA[");
		sb.append(getApplicationRefNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SeqGenerator</column-name><column-value><![CDATA[");
		sb.append(getSeqGenerator());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LTRFFormRefNo</column-name><column-value><![CDATA[");
		sb.append(getLTRFFormRefNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PremiumAmount</column-name><column-value><![CDATA[");
		sb.append(getPremiumAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IsMedicalRequired</column-name><column-value><![CDATA[");
		sb.append(getIsMedicalRequired());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ShortPremium</column-name><column-value><![CDATA[");
		sb.append(getShortPremium());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PremiumDueDate</column-name><column-value><![CDATA[");
		sb.append(getPremiumDueDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PolicyNo</column-name><column-value><![CDATA[");
		sb.append(getPolicyNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PolicyElapsedDate</column-name><column-value><![CDATA[");
		sb.append(getPolicyElapsedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PolicyIssueDate</column-name><column-value><![CDATA[");
		sb.append(getPolicyIssueDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Completion</column-name><column-value><![CDATA[");
		sb.append(getCompletion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IsLapsed</column-name><column-value><![CDATA[");
		sb.append(getIsLapsed());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>NextPremiumDueDate</column-name><column-value><![CDATA[");
		sb.append(getNextPremiumDueDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PolicyStatus</column-name><column-value><![CDATA[");
		sb.append(getPolicyStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IsActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreatedBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreatedDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ModifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ApplyTrnApplicationForm.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ApplyTrnApplicationForm.class
		};
	private String _ApplicationFormId;
	private String _QuoteId;
	private String _originalQuoteId;
	private String _ApplicationRefNo;
	private int _SeqGenerator;
	private String _LTRFFormRefNo;
	private double _PremiumAmount;
	private int _IsMedicalRequired;
	private double _ShortPremium;
	private Date _PremiumDueDate;
	private String _PolicyNo;
	private Date _PolicyElapsedDate;
	private Date _PolicyIssueDate;
	private String _Status;
	private int _Completion;
	private int _IsLapsed;
	private Date _NextPremiumDueDate;
	private String _PolicyStatus;
	private int _IsActive;
	private String _CreatedBy;
	private Date _CreatedDate;
	private Date _ModifiedDate;
	private String _ModifiedBy;
	private long _columnBitmask;
	private ApplyTrnApplicationForm _escapedModel;
}